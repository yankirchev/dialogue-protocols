{"version":3,"sources":["Background.js","DialogueAccordion.js","protocols/Agent.js","protocols/utils/helper.js","protocols/Dialogue.js","protocols/PersuasionDialogue.js","protocols/DeliberationDialogue.js","protocols/utils/generalKnowledgeBase.js","protocols/Simulation.js","Generate.js","DemoDialogue.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["Background","react_default","a","createElement","className","StructuredList","head","noWrap","OrderedList","ListItem","Component","DialogueAccordion","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","accordionItems","currentSpeechActIndex","decrementSpeechActIndex","bind","assertThisInitialized","incrementSpeechActIndex","maximiseSpeechActIndex","setState","props","dialogue","commitmentStoreHistory","length","_this2","text","split","map","speechAct","speechActIndex","AccordionItem","key","title","UnorderedList","agents","agent","agentIndex","name","nested","commitment","commitmentIndex","dialogueType","agreedPreferenceRuleHistory","Accordion","slice","Button","small","kind","disabled","onClick","Agent","initialPreference","knowledgeBase","commitmentStore","restaurant","preferredRestaurants","prologSession","pl","create","consult","query","answers","x","push","format_answer","includes","camelise","string","replace","match","index","toLowerCase","toUpperCase","decamelise","format","justifications","formattedText","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","value","_ref2","slicedToArray","justification","concat","translate","err","return","term","property","cost","translation","Dialogue","constructor","TypeError","newCommitmentStoresRecord","answer","Error","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","anyAgent","saveCommitmentStores","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","doesAppear","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","someAgent","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","substring","otherAgent","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","justificationsAsOneString","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","bodyOfRuleOfClaim","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_loop","_iterator10","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","PersuasionDialogue","proponentIndex","proponent","doesPrefer","termsToCheck","line","test","i","RegExp","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","_iteratorNormalCompletion24","_didIteratorError24","_iteratorError24","_step24","_iterator24","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","_iteratorNormalCompletion25","_didIteratorError25","_iteratorError25","_step25","_iterator25","DeliberationDialogue","agreedPreferenceRule","get","prototype","collectiveCommitmentStore","agreedRestaurant","addTermToAgreedPreferenceRule","doesAppearGlobally","doesAppearLocally","uninstatitatedJustifications","generalKnowledgeBase","Simulation","agentNames","restaurantNames","restaurantCuisines","beverage","persuasionDialogue","simulatePersuasionDialogue","deliberationDialogue","simulateDeliberationDialogue","knowledgeBaseOne","knowledgeBaseTwo","knowledgeBaseThree","claim","counterclaim","question","concede","isOver","_ref6","_ref5","concedeSince","Generate","firstAgentsName","secondAgentsName","thirdAgentsName","isFirstAgentsNameInvalid","isSecondAgentsNameInvalid","isThirdAgentsNameInvalid","firstRestaurantsName","secondRestaurantsName","thirdRestaurantsName","isFirstRestaurantsNameInvalid","isSecondRestaurantsNameInvalid","isThirdRestaurantsNameInvalid","firstRestaurantsCuisine","secondRestaurantsCuisine","thirdRestaurantsCuisine","isErrorNotificationVisible","simulation","onChange","checkInputValues","generateDialogues","resetState","event","defineProperty","target","id","TextInput","labelText","invalid","invalidText","FormGroup","legendText","RadioButtonGroup","valueSelected","RadioButton","Notification","hideCloseButton","subtitle","src_DialogueAccordion_0","DemoDialogue","Tooltip","triggerText","Home","src_DemoDialogue_0","App","switchIndex","window","open","focus","ContentSwitcher","Switch","hidden","src_Home_0","src_Background_0","src_Generate_0","Link","href","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iaA6KeA,0LArKX,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,aAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,gJAEuDF,EAAAC,EAAAC,cAAA,6CAFvD,yJAMAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,iQAMAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,kPAOJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,oBAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,4RAKAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,2KAMJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,cAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAuBD,UAAU,mBAC/BH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAmBC,MAAI,GACrBL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAoBC,MAAI,GAAxB,QACAL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAoBC,MAAI,GAAxB,gBAGJL,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAoBE,QAAM,GAA1B,SACAN,EAAAC,EAAAC,cAACE,EAAA,EAAD,kIAKFJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,yBACAJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,kGAKFJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,8BACAJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,8MAOFJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,4BACAJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,6MAOFJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAoBE,QAAM,GAA1B,mBACAN,EAAAC,EAAAC,cAACE,EAAA,EAAD,0JAKFJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAoBE,QAAM,GAA1B,kBACAN,EAAAC,EAAAC,cAACE,EAAA,EAAD,gMAMFJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,iBACAJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,+PAMFJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAoBE,QAAM,GAA1B,eACAN,EAAAC,EAAAC,cAACE,EAAA,EAAD,wNASVJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,gBAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,uBAApB,gCAC4BH,EAAAC,EAAAC,cAAA,wDAD5B,kEAIAF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,uBAApB,yHAGEH,EAAAC,EAAAC,cAAA,sCAHF,4CAKAF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,uBAApB,iCAEEH,EAAAC,EAAAC,cAAA,iFAFF,yDAKAF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,uBAApB,kEAEEH,EAAAC,EAAAC,cAAA,8CAFF,4DA3JWO,sFCwFVC,qBAxFb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAEKI,MAAQ,CACXC,eAAgB,KAChBC,sBAAuB,GAGzBT,EAAKU,wBAA0BV,EAAKU,wBAAwBC,KAA7BV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAC/BA,EAAKa,wBAA0Bb,EAAKa,wBAAwBF,KAA7BV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAC/BA,EAAKc,uBAAyBd,EAAKc,uBAAuBH,KAA5BV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAVlBA,yFAcZG,KAAKY,SAAS,CACZN,sBAAuBN,KAAKI,MAAME,sBAAwB,sDAK5DN,KAAKY,SAAS,CACZN,sBAAuBN,KAAKI,MAAME,sBAAwB,qDAK5DN,KAAKY,SAAS,CACZN,sBAAuBN,KAAKa,MAAMC,SAASC,uBAAuBC,qDAIlD,IAAAC,EAAAjB,KAClBA,KAAKY,SAAS,CACZP,eAAgBL,KAAKa,MAAMC,SAASI,KAAKC,MAAM,MAAMC,IAAI,SAACC,EAAWC,GAAZ,MAA6C,KAAdD,GACtFnC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAeC,IAAKF,EAAgBG,MAAOvC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,cAASiC,EAAUF,MAAM,KAAK,IAAnC,IAAiDE,EAAUF,MAAM,KAAK,KAC/GjC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KACGT,EAAKJ,MAAMC,SAASa,OAAOP,IAAI,SAACQ,EAAOC,GAAR,OAC9B3C,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,YAAYmC,IAAKK,GAClCD,EAAME,KADT,uBAEE5C,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAeK,QAAM,EAAC1C,UAAU,yBAC7B4B,EAAKJ,MAAMC,SAASC,uBAAuBO,GAAgBO,GAAYV,MAAM,MAAMC,IAAI,SAACY,EAAYC,GAAb,MAAgD,KAAfD,GACvH9C,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,mBAAmBmC,IAAKS,GACzCD,SAMkB,iBAA5Bf,EAAKJ,MAAMqB,cACVhD,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,aAApB,0BAEEH,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAeK,QAAM,EAAC1C,UAAU,yBAC9BH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBACjB4B,EAAKJ,MAAMC,SAASqB,4BAA4Bb,6CAYjE,OACEpC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAWW,KAAKa,MAAMqB,aAApC,aACAhD,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAW/C,UAAU,sBAClBW,KAAKI,MAAMC,gBAAkBL,KAAKI,MAAMC,eAAegC,MAAM,EAAGrC,KAAKI,MAAME,wBAE9EpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAQC,OAAK,EAACC,KAAK,YAAYC,SAA+C,IAArCzC,KAAKI,MAAME,sBAA6BoC,QAAS1C,KAAKO,yBAA/F,YAGArB,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAQC,OAAK,EAACC,KAAK,UAAUC,SAAUzC,KAAKI,MAAME,wBAA0BN,KAAKa,MAAMC,SAASC,uBAAuBC,OAAQ0B,QAAS1C,KAAKU,yBAA7I,QAGAxB,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAQC,OAAK,EAAClD,UAAU,WAAWmD,KAAK,WAAWC,SAAUzC,KAAKI,MAAME,wBAA0BN,KAAKa,MAAMC,SAASC,uBAAuBC,OAAQ0B,QAAS1C,KAAKW,wBAAnK,uBAhFsBhB,sCCmBjBgD,aArBb,SAAAA,EAAYb,EAAMc,EAAmBC,GAAgB/C,OAAAC,EAAA,EAAAD,CAAAE,KAAA2C,GACnD3C,KAAK8B,KAAOA,EACZ9B,KAAK4C,kBAAoBA,EACzB5C,KAAK6C,cAAgBA,EACrB7C,KAAK8C,gBAAkB,0DAGdC,GACT,IAAMC,EAAuB,CAAChD,KAAK4C,mBAE7BK,EAAgBC,IAAGC,SAOzB,OANAF,EAAcG,QAAQpD,KAAK6C,cAAgB7C,KAAK8C,iBAChDG,EAAcI,MAAM,4BACpBJ,EAAcK,QAAQ,SAAAC,GACpBP,EAAqBQ,KAAKN,IAAGO,cAAcF,GAAGpC,MAAM,KAAK,MAGpD6B,EAAqBU,SAASX,YCpBzC,SAASY,EAASC,GAChB,OAAOA,EAAOC,QAAQ,OAAQ,IAAIA,QAAQ,0BAA2B,SAACC,EAAOC,GAC3E,OAAe,KAAVD,EACI,GAGQ,IAAVC,EAAcD,EAAME,cAAgBF,EAAMG,gBAIrD,SAASC,EAAWN,GAClB,OAAOA,EACJC,QAAQ,oBAAqB,SAC7BA,QAAQ,2BAA4B,SACpCG,cAGL,SAASG,EAAOC,GACd,IAAIC,EAAgB,GADUC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAG9B,QAAAC,EAAAC,EAAqCP,EAAeQ,UAApDC,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAA+D,KAAAW,EAAAP,EAAAQ,MAAAC,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAmF,EAAA,GAAnDlB,EAAmDoB,EAAA,GAA5CE,EAA4CF,EAAA,GAC/B,IAA1Bf,EAAepD,OACjBqD,GAAa,GAAAiB,OAAOC,EAAUF,IACrBtB,IAAUK,EAAepD,OAAS,EAC3CqD,GAAa,GAAAiB,OAAOC,EAAUF,IACrBtB,IAAUK,EAAepD,OAAS,EAC3CqD,GAAa,GAAAiB,OAAOC,EAAUF,GAAjB,MACJjB,EAAepD,QAAU,GAAK+C,IAAUK,EAAepD,OAAS,EACzEqD,GAAa,GAAAiB,OAAOC,EAAUF,GAAjB,UACJjB,EAAepD,OAAS,GAAK+C,IAAUK,EAAepD,OAAS,IACxEqD,GAAa,GAAAiB,OAAOC,EAAUF,GAAjB,WAba,MAAAG,GAAAjB,GAAA,EAAAC,EAAAgB,EAAA,YAAAlB,GAAA,MAAAK,EAAAc,QAAAd,EAAAc,SAAA,WAAAlB,EAAA,MAAAC,GAiB9B,OAAOH,EAGT,SAASkB,EAAUG,GACjB,IAAM3C,EAAa2C,EAAK5B,MAAM,oBAAoB,GAC5C6B,EAAWD,EAAK5B,MAAM,mBAAmB,GACzCoB,EAAQQ,EAAK5B,MAAM,oBAAoB,GACvC8B,EAAOF,EAAK5B,MAAM,oBAAoB,GAExC+B,EAAc,GAsBlB,OAlBIA,EAFe,MAAf9C,EACE2C,EAAKhC,SAAS,QACL,GAAA4B,OAAMpB,EAAWnB,GAAjB,oBAAAuC,OAA+CpB,EAAWyB,IAE1D,GAAAL,OAAMpB,EAAWnB,GAAjB,kBAAAuC,OAA6CpB,EAAWyB,IAG1D,YAAAL,OAAepB,EAAWyB,IAGnCT,GAAmB,MAAVA,GACXW,GAAW,aAAAP,OAAiBpB,EAAWgB,IAEnCU,GAAiB,MAATA,IACVC,GAAW,aAAAP,OAAiBpB,EAAW0B,MAEhCA,GAAiB,MAATA,IACjBC,GAAW,YAAAP,OAAgBpB,EAAW0B,KAGjCC,MC+OMC,aA3Sb,SAAAA,EAAYnE,GACV,GADmB7B,OAAAC,EAAA,EAAAD,CAAAE,KAAA8F,IACf9F,gBAAA8F,EAAA9F,KAAA+F,iBAAA,KAAeD,EACjB,MAAM,IAAIE,UAAU,iDAGtBhG,KAAK2B,OAASA,EACd3B,KAAKkB,KAAL,GAAAoE,OAAe3D,EAAO,GAAGG,KAAzB,2BACA9B,KAAKe,uBAAyB,CAAC,CAAC,GAAI,GAAI,wEAIxC,IAAMkF,EAA4B,GADb3B,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAGrB,QAAAC,EAAAC,EAAoB3E,KAAK2B,OAAzBkD,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAAiC,KAAtB1C,EAAsB8C,EAAAQ,MAC/Be,EAA0BzC,KAAK5B,EAAMkB,kBAJlB,MAAA0C,GAAAjB,GAAA,EAAAC,EAAAgB,EAAA,YAAAlB,GAAA,MAAAK,EAAAc,QAAAd,EAAAc,SAAA,WAAAlB,EAAA,MAAAC,GAOrBxE,KAAKe,uBAAuByC,KAAKyC,oCAIjC,MAAM,IAAID,UAAU,oEAIhBpE,EAAO8D,GAIX,IAAMzC,EAAgBC,IAAGC,SACzBF,EAAcG,QAAQxB,EAAMiB,cAAgBjB,EAAMkB,iBAClDG,EAAcI,MAAMqC,GACpBzC,EAAciD,OAAO,SAAA3C,GACnB,GAA4B,WAAxBL,IAAGO,cAAcF,GACnB,MAAM,IAAI4C,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,eAAAwD,OAA6CC,EAAUG,GAAvD,+HATH,IAAAU,GAAA,EAAAC,GAAA,EAAAC,OAAA7B,EAAA,IAejB,QAAA8B,EAAAC,EAAuBxG,KAAK2B,OAA5BkD,OAAAC,cAAAsB,GAAAG,EAAAC,EAAAzB,QAAAC,MAAAoB,GAAA,EAAoC,KAAzBK,EAAyBF,EAAArB,MAClC,GAAIuB,EAAS3D,gBAAgBY,SAASgC,GACpC,MAAM,IAAIS,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,eAAAwD,OAA6CC,EAAUG,GAAvD,mCAAAJ,OACXmB,EAAS3E,KADE,6CAjBH,MAAA0D,GAAAa,GAAA,EAAAC,EAAAd,EAAA,YAAAY,GAAA,MAAAI,EAAAf,QAAAe,EAAAf,SAAA,WAAAY,EAAA,MAAAC,GAyBjB1E,EAAMkB,iBAAN,GAAAwC,OAA4BI,EAA5B,MAIA1F,KAAKkB,MAAL,GAAAoE,OAAgB1D,EAAME,KAAtB,MAAAwD,OAA+BC,EAAUG,GAAzC,OACA1F,KAAK0G,4DAIM9E,EAAO8D,GAIlB,IAAMzC,EAAgBC,IAAGC,SACzBF,EAAcG,QAAQxB,EAAMiB,cAAgBjB,EAAMkB,iBAClDG,EAAcI,MAAMqC,GACpBzC,EAAciD,OAAO,SAAA3C,GACnB,GAA4B,WAAxBL,IAAGO,cAAcF,GACnB,MAAM,IAAI4C,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,sBAAAwD,OAAoDC,EAAUG,GAA9D,+HATI,IAAAiB,GAAA,EAAAC,GAAA,EAAAC,OAAApC,EAAA,IAexB,QAAAqC,EAAAC,EAAuB/G,KAAK2B,OAA5BkD,OAAAC,cAAA6B,GAAAG,EAAAC,EAAAhC,QAAAC,MAAA2B,GAAA,EAAoC,KAAzBF,EAAyBK,EAAA5B,MAClC,GAAIuB,EAAS3D,gBAAgBY,SAASgC,GACpC,MAAM,IAAIS,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,sBAAAwD,OAAoDC,EAAUG,GAA9D,mCAAAJ,OACXmB,EAAS3E,KADE,6CAjBI,MAAA0D,GAAAoB,GAAA,EAAAC,EAAArB,EAAA,YAAAmB,GAAA,MAAAI,EAAAtB,QAAAsB,EAAAtB,SAAA,WAAAmB,EAAA,MAAAC,GAyBxBjF,EAAMkB,iBAAN,GAAAwC,OAA4BI,EAA5B,MAIA1F,KAAKkB,MAAL,GAAAoE,OAAgB1D,EAAME,KAAtB,UAAAwD,OAAmCC,EAAUG,GAA7C,OACA1F,KAAK0G,mDAIH9E,EAAO8D,GAIT,IAAMzC,EAAgBC,IAAGC,SACzBF,EAAcG,QAAQxB,EAAMiB,cAAgBjB,EAAMkB,iBAClDG,EAAcI,MAAMqC,GACpBzC,EAAciD,OAAO,SAAA3C,GACnB,GAA4B,WAAxBL,IAAGO,cAAcF,GACnB,MAAM,IAAI4C,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,iBAAAwD,OAA+CC,EAAUG,GAAzD,4HAMpB,IAAIsB,GAAa,EAfFC,GAAA,EAAAC,GAAA,EAAAC,OAAA1C,EAAA,IAiBf,QAAA2C,EAAAC,EAAwBrH,KAAK2B,OAA7BkD,OAAAC,cAAAmC,GAAAG,EAAAC,EAAAtC,QAAAC,MAAAiC,GAAA,EAAqC,KAA1BK,EAA0BF,EAAAlC,MAC/BoC,IAAc1F,GAAS0F,EAAUxE,gBAAgBY,SAASgC,KAC5DsB,GAAa,IAnBF,MAAAxB,GAAA0B,GAAA,EAAAC,EAAA3B,EAAA,YAAAyB,GAAA,MAAAI,EAAA5B,QAAA4B,EAAA5B,SAAA,WAAAyB,EAAA,MAAAC,GAuBf,IAAmB,IAAfH,EACF,MAAM,IAAIb,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,iBAAAwD,OAA+CC,EAAUG,GAAzD,yFAMlB1F,KAAKkB,MAAL,GAAAoE,OAAgB1D,EAAME,KAAtB,qBAAAwD,OAA8CC,EAAUG,GAAxD,OACA1F,KAAK0G,uDAIC9E,EAAO8D,GAIb,IAAIsB,GAAa,EAJEO,GAAA,EAAAC,GAAA,EAAAC,OAAAhD,EAAA,IAMnB,QAAAiD,EAAAC,EAAwB3H,KAAK2B,OAA7BkD,OAAAC,cAAAyC,GAAAG,EAAAC,EAAA5C,QAAAC,MAAAuC,GAAA,EAAqC,KAA1BD,EAA0BI,EAAAxC,MAC/BoC,IAAc1F,GAAS0F,EAAUxE,gBAAgBY,SAASgC,KAC5DsB,GAAa,IARE,MAAAxB,GAAAgC,GAAA,EAAAC,EAAAjC,EAAA,YAAA+B,GAAA,MAAAI,EAAAlC,QAAAkC,EAAAlC,SAAA,WAAA+B,EAAA,MAAAC,GAYnB,IAAmB,IAAfT,EACF,MAAM,IAAIb,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,mBAAAwD,OAAiDC,EAAUG,GAA3D,yFAKlB,GAAKA,EAAKhC,SAAS,SAAY9B,EAAMkB,gBAAgBY,SAAtB,GAAA4B,OAAkCI,EAAKkC,UAAU,EAAGlC,EAAK1E,OAAS,GAAlE,QACxB0E,EAAKhC,SAAS,SAAW9B,EAAMkB,gBAAgBY,SAAtB,OAAA4B,OAAsCI,EAAKkC,UAAU,EAAGlC,EAAK1E,OAAS,GAAtE,OAC9B,MAAM,IAAImF,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,mBAAAwD,OAAiDC,EAAUG,GAA3D,oGAOb9D,EAAMkB,gBAAgBY,SAASgC,KAClC9D,EAAMkB,iBAAN,GAAAwC,OAA4BI,EAA5B,OAKF1F,KAAKkB,MAAL,GAAAoE,OAAgB1D,EAAME,KAAtB,oBAAAwD,OAA6CC,EAAUG,GAAvD,OACA1F,KAAK0G,uDAIC9E,EAAO8D,GAIb,IAAMzC,EAAgBC,IAAGC,SAWzB,GAVAF,EAAcG,QAAQxB,EAAMiB,cAAgBjB,EAAMkB,gBAAgBe,QAAQ6B,EAAM,KAChFzC,EAAcI,MAAMqC,GACpBzC,EAAciD,OAAO,SAAA3C,GACnB,GAA4B,WAAxBL,IAAGO,cAAcF,GACnB,MAAM,IAAI4C,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,iBAAAwD,OAA+CC,EAAUG,GAAzD,uIAMf9D,EAAMkB,gBAAgBY,SAASgC,GAClC,MAAM,IAAIS,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,iBAAAwD,OAA+CC,EAAUG,GAAzD,4FAOlB9D,EAAMkB,gBAAkBlB,EAAMkB,gBAAgBe,QAAtB,GAAAyB,OAAiCI,EAAjC,MAA2C,IAInE1F,KAAKkB,MAAL,GAAAoE,OAAgB1D,EAAME,KAAtB,uBAAAwD,OAAgDC,EAAUG,GAA1D,OACA1F,KAAK0G,qDAID9E,EAAOiG,EAAYnC,EAAMtB,GAI7B,IAAKxC,EAAMkB,gBAAgBY,SAASgC,GAClC,MAAM,IAAIS,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,6BAAAwD,OAA2DC,EAAUG,GAArE,4FAL2B,IAAAoC,GAAA,EAAAC,GAAA,EAAAC,OAAAvD,EAAA,IAU7C,QAAAwD,EAAAC,EAA4B9D,EAA5BS,OAAAC,cAAAgD,GAAAG,EAAAC,EAAAnD,QAAAC,MAAA8C,GAAA,EAA4C,KAAjCzC,EAAiC4C,EAAA/C,MAC1C,IAAKtD,EAAMiB,cAAca,SAAS2B,GAChC,MAAM,IAAIc,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,6BAAAwD,OAA2DC,EAAUG,GAArE,oGAZyB,MAAAF,GAAAuC,GAAA,EAAAC,EAAAxC,EAAA,YAAAsC,GAAA,MAAAI,EAAAzC,QAAAyC,EAAAzC,SAAA,WAAAsC,EAAA,MAAAC,GAiB7C,IAAIG,EAA4B,GAjBaC,GAAA,EAAAC,GAAA,EAAAC,OAAA7D,EAAA,IAmB7C,QAAA8D,EAAAC,EAA4BpE,EAA5BS,OAAAC,cAAAsD,GAAAG,EAAAC,EAAAzD,QAAAC,MAAAoD,GAAA,EAA4C,KAAjC/C,EAAiCkD,EAAArD,MAC1CiD,GAAyB,GAAA7C,OAAOD,EAAP,OApBkB,MAAAG,GAAA6C,GAAA,EAAAC,EAAA9C,EAAA,YAAA4C,GAAA,MAAAI,EAAA/C,QAAA+C,EAAA/C,SAAA,WAAA4C,EAAA,MAAAC,GAuB7C,IAAMrF,EAAgBC,IAAGC,SACzBF,EAAcG,QAAQ+E,EAA4BN,EAAW/E,iBAC7DG,EAAcI,MAAMqC,GACpBzC,EAAciD,OAAO,SAAA3C,GACnB,GAA4B,WAAxBL,IAAGO,cAAcF,GACnB,MAAM,IAAI4C,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,6BAAAwD,OAA2DC,EAAUG,GAArE,mCAAAJ,OACXuC,EAAW/F,KADA,2FA5ByB,IAAA2G,GAAA,EAAAC,GAAA,EAAAC,OAAAlE,EAAA,IAoC7C,QAAAmE,EAAAC,EAA4BzE,EAA5BS,OAAAC,cAAA2D,GAAAG,EAAAC,EAAA9D,QAAAC,MAAAyD,GAAA,EAA4C,KAAjCpD,EAAiCuD,EAAA1D,MACrCtD,EAAMkB,gBAAgBY,SAAS2B,KAClCzD,EAAMkB,iBAAN,GAAAwC,OAA4BD,EAA5B,QAtCyC,MAAAG,GAAAkD,GAAA,EAAAC,EAAAnD,EAAA,YAAAiD,GAAA,MAAAI,EAAApD,QAAAoD,EAAApD,SAAA,WAAAiD,EAAA,MAAAC,GAAA,IAAAG,GAAA,EAAAC,GAAA,EAAAC,OAAAvE,EAAA,IA2C7C,QAAAwE,EAAAC,EAA4B9E,EAA5BS,OAAAC,cAAAgE,GAAAG,EAAAC,EAAAnE,QAAAC,MAAA8D,GAAA,EAA4C,KAAjCzD,EAAiC4D,EAAA/D,MACrC2C,EAAW/E,gBAAgBY,SAAS2B,KACvCwC,EAAW/E,iBAAX,GAAAwC,OAAiCD,EAAjC,QA7CyC,MAAAG,GAAAuD,GAAA,EAAAC,EAAAxD,EAAA,YAAAsD,GAAA,MAAAI,EAAAzD,QAAAyD,EAAAzD,SAAA,WAAAsD,EAAA,MAAAC,GAmD7C,IAAIG,EAAoB/E,EAAe,GAAGjD,MAAM,KAAK,GAAGA,MAAM,MAAM,GAAG0C,QAAQ,KAAM6B,EAAK5B,MAAM,mBAAmB,IAnDtEsF,GAAA,EAAAC,GAAA,EAAAC,OAAA7E,EAAA,IAqD7C,IArD6C,IAqD7C8E,EArD6CC,EAAA,eAqDlC1F,EArDkCyF,EAAArE,MAsD3C,GAAIpB,EAAM,KAAOA,EAAM,GAAGE,cAAe,CACvC,IAAMf,EAAgBC,IAAGC,SACzBF,EAAcG,QAAQ+E,EAA4BN,EAAW/E,iBAEL,MAApDqG,EAAkBA,EAAkBnI,OAAS,IAAkE,MAApDmI,EAAkBA,EAAkBnI,OAAS,KAC1GmI,GAAwC,KAG1ClG,EAAcI,MAAM8F,GACpBlG,EAAciD,OAAO,SAAA3C,GAAC,OAAI4F,EAAoBA,EAAkBtF,QAAQC,EAAOZ,IAAGO,cAAcF,GAAGpC,MAAM,KAAK,GAAG0C,QAAQ,QAAS,SAVtI4F,EAAoBN,EAAkBrF,MAAM,mBAA5Ce,OAAAC,cAAAsE,GAAAG,EAAAE,EAAA1E,QAAAC,MAAAoE,GAAA,EAAgEI,IArDnB,MAAAhE,GAAA6D,GAAA,EAAAC,EAAA9D,EAAA,YAAA4D,GAAA,MAAAK,EAAAhE,QAAAgE,EAAAhE,SAAA,WAAA4D,EAAA,MAAAC,GAmE7CtJ,KAAKkB,MAAL,GAAAoE,OAAgB1D,EAAME,KAAtB,MAAAwD,OAA+BC,EAAUG,GAAzC,WAAAJ,OAAwDnB,EAAOgF,EAAkBhI,MAAM,OAAvF,OACAnB,KAAK0G,wDAIE9E,EAAO8D,GAAM,IAAAgE,GAAA,EAAAC,GAAA,EAAAC,OAAAnF,EAAA,IAIpB,QAAAoF,EAAAC,EAAuB9J,KAAK2B,OAA5BkD,OAAAC,cAAA4E,GAAAG,EAAAC,EAAA/E,QAAAC,MAAA0E,GAAA,EAAoC,KAAzBjD,EAAyBoD,EAAA3E,MAClC,GAAIuB,EAAS3D,gBAAgBY,SAASgC,GACpC,MAAM,IAAIS,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,qBAAAwD,OAAmDC,EAAUG,GAA7D,mCAAAJ,OACXmB,EAAS3E,KADE,6CANA,MAAA0D,GAAAmE,GAAA,EAAAC,EAAApE,EAAA,YAAAkE,GAAA,MAAAI,EAAArE,QAAAqE,EAAArE,SAAA,WAAAkE,EAAA,MAAAC,GAYpB,IAAM3G,EAAgBC,IAAGC,SACzBF,EAAcG,QAAQxB,EAAMiB,cAAgBjB,EAAMkB,iBAClDG,EAAcI,MAAMqC,GACpBzC,EAAciD,OAAO,SAAA3C,GACnB,GAA4B,WAAxBL,IAAGO,cAAcF,GACnB,MAAM,IAAI4C,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,qBAAAwD,OAAmDC,EAAUG,GAA7D,4HAOpB1F,KAAKkB,MAAL,GAAAoE,OAAgB1D,EAAME,KAAtB,kBAAAwD,OAA2CC,EAAUG,GAArD,OACA1F,KAAK0G,gCC4EMqD,cAjXb,SAAAA,EAAYpI,EAAQqI,GAAgB,IAAAnK,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+J,IAClClK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiK,GAAA5J,KAAAH,KAAM2B,KAEDsI,UAAYtI,EAAOqI,GAHUnK,wEAM3B,IAAAyE,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IACP,QAAAC,EAAAC,EAAoB3E,KAAK2B,OAAzBkD,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAAiC,CAC/B,IAD+BI,EAAAQ,MACpBpC,gBAAgBY,SAAtB,wBAAA4B,OAAuDtF,KAAKiK,UAAUrH,kBAAtE,OACH,OAAO,GAHJ,MAAA4C,GAAAjB,GAAA,EAAAC,EAAAgB,EAAA,YAAAlB,GAAA,MAAAK,EAAAc,QAAAd,EAAAc,SAAA,WAAAlB,EAAA,MAAAC,GAOP,OAAO,gCAIH5C,EAAO8D,GACX,IAAM3C,EAAa2C,EAAK5B,MAAM,mBAAmB,GAC3C6B,EAAWD,EAAK5B,MAAM,mBAAmB,GAKzCb,EAAgBC,IAAGC,SACzBF,EAAcG,QAAQxB,EAAMiB,cAAgBjB,EAAMkB,iBAClDG,EAAcI,MAAMqC,GACpBzC,EAAciD,OAAO,SAAA3C,GACnB,GAA4B,WAAxBL,IAAGO,cAAcF,GACnB,MAAM,IAAI4C,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,eAAAwD,OAA6CC,EAAUG,GAAvD,+HAZH,IAAAU,GAAA,EAAAC,GAAA,EAAAC,OAAA7B,EAAA,IAkBjB,QAAA8B,EAAAC,EAAuBxG,KAAK2B,OAA5BkD,OAAAC,cAAAsB,GAAAG,EAAAC,EAAAzB,QAAAC,MAAAoB,GAAA,EAAoC,KAAzBK,EAAyBF,EAAArB,MAClC,GAAIuB,EAAS3D,gBAAgBY,SAASgC,GACpC,MAAM,IAAIS,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,eAAAwD,OAA6CC,EAAUG,GAAvD,mCAAAJ,OACXmB,EAAS3E,KADE,6CApBH,MAAA0D,GAAAa,GAAA,EAAAC,EAAAd,EAAA,YAAAY,GAAA,MAAAI,EAAAf,QAAAe,EAAAf,SAAA,WAAAY,EAAA,MAAAC,GA2BjB,GAAI1E,IAAU5B,KAAKiK,UAAW,CAE5B,IAAKrI,EAAMsI,WAAWnH,GACpB,MAAM,IAAIoD,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,eAAAwD,OAA6CC,EAAUG,GAAvD,kFAKlB,IAAIyE,EAAe,GARSxD,GAAA,EAAAC,GAAA,EAAAC,OAAApC,EAAA,IAU5B,QAAAqC,EAAAC,EAAmBnF,EAAMiB,cAAc1B,MAAM,MAA7C0D,OAAAC,cAAA6B,GAAAG,EAAAC,EAAAhC,QAAAC,MAAA2B,GAAA,EAAoD,KAAzCyD,EAAyCtD,EAAA5B,MAClD,GAAI,2BAA2BmF,KAAKD,GAAO,KAAAtC,GAAA,EAAAC,GAAA,EAAAC,OAAAvD,EAAA,IACzC,QAAAwD,EAAAC,EAAoBkC,EAAKtG,MAAM,sCAA/Be,OAAAC,cAAAgD,GAAAG,EAAAC,EAAAnD,QAAAC,MAAA8C,GAAA,EAAsE,KAA3DhE,EAA2DmE,EAAA/C,MAC/DiF,EAAazG,SAASI,IACzBqG,EAAa3G,KAAKM,IAHmB,MAAA0B,GAAAuC,GAAA,EAAAC,EAAAxC,EAAA,YAAAsC,GAAA,MAAAI,EAAAzC,QAAAyC,EAAAzC,SAAA,WAAAsC,EAAA,MAAAC,MAXjB,MAAAxC,GAAAoB,GAAA,EAAAC,EAAArB,EAAA,YAAAmB,GAAA,MAAAI,EAAAtB,QAAAsB,EAAAtB,SAAA,WAAAmB,EAAA,MAAAC,GAoB5B,IAAK,IAAIyD,EAAI,EAAGA,EAAIH,EAAanJ,OAAQsJ,IAAK,KAAArD,GAAA,EAAAC,GAAA,EAAAC,OAAA1C,EAAA,IAC5C,QAAA2C,EAAAC,EAAmBzF,EAAMiB,cAAc1B,MAAM,MAA7C0D,OAAAC,cAAAmC,GAAAG,EAAAC,EAAAtC,QAAAC,MAAAiC,GAAA,EAAoD,KAAzCmD,EAAyChD,EAAAlC,MAClD,GAAI,IAAIqF,OAAO,IAAMJ,EAAaG,GAAK,QAAQD,KAAKD,GAAO,KAAA7C,GAAA,EAAAC,GAAA,EAAAC,OAAAhD,EAAA,IACzD,QAAAiD,EAAAC,EAAoByC,EAAKtG,MAAM,sCAA/Be,OAAAC,cAAAyC,GAAAG,EAAAC,EAAA5C,QAAAC,MAAAuC,GAAA,EAAsE,KAA3DzD,EAA2D4D,EAAAxC,MAC/DiF,EAAazG,SAASI,IACzBqG,EAAa3G,KAAKM,IAHmC,MAAA0B,GAAAgC,GAAA,EAAAC,EAAAjC,EAAA,YAAA+B,GAAA,MAAAI,EAAAlC,QAAAkC,EAAAlC,SAAA,WAAA+B,EAAA,MAAAC,MAFjB,MAAAjC,GAAA0B,GAAA,EAAAC,EAAA3B,EAAA,YAAAyB,GAAA,MAAAI,EAAA5B,QAAA4B,EAAA5B,SAAA,WAAAyB,EAAA,MAAAC,IAY9C,IAAKgD,EAAazG,SAASiC,GACzB,MAAM,IAAIQ,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,eAAAwD,OAA6CC,EAAUG,GAAvD,0HAYpB,GAJA9D,EAAMkB,iBAAN,GAAAwC,OAA4BI,EAA5B,MAII9D,IAAU5B,KAAKiK,UAAW,CAE5BhH,EAAcI,MAAd,wBAAAiC,OAA4CvC,EAA5C,OACAE,EAAciD,OAAO,SAAA3C,GACS,WAAxBL,IAAGO,cAAcF,IAAoB3B,EAAMkB,gBAAgBY,SAAtB,wBAAA4B,OAAuDvC,EAAvD,SACvCnB,EAAMkB,iBAAN,wBAAAwC,OAAiDvC,EAAjD,WALwB,IAAAqF,GAAA,EAAAC,GAAA,EAAAC,OAAA7D,EAAA,IAU5B,QAAA8D,EAAAC,GAAoB5G,EAAMiB,cAAgBjB,EAAMkB,iBAAiB3B,MAAM,MAAvE0D,OAAAC,cAAAsD,GAAAG,EAAAC,EAAAzD,QAAAC,MAAAoD,GAAA,EAA8E,KAAnEgC,EAAmE7B,EAAArD,MACxE,IAAIqF,OAAO,IAAM5E,EAAW,sBAAwBD,EAAK5B,MAAM,oBAAoB,GAAK,KAAKuG,KAAKD,KAC/FxI,EAAMkB,gBAAgBY,SAAS0G,KAClCxI,EAAMkB,iBAAN,GAAAwC,OAA4B8E,EAA5B,SAbsB,MAAA5E,GAAA6C,GAAA,EAAAC,EAAA9C,EAAA,YAAA4C,GAAA,MAAAI,EAAA/C,QAAA+C,EAAA/C,SAAA,WAAA4C,EAAA,MAAAC,IAqB9BtI,KAAKkB,MAAL,GAAAoE,OAAgB1D,EAAME,KAAtB,MAAAwD,OAA+BC,EAAUG,GAAzC,OACA1F,KAAK0G,4DAIM9E,EAAO8D,GAClB,IAAMC,EAAWD,EAAK5B,MAAM,mBAAmB,GAKzCb,EAAgBC,IAAGC,SACzBF,EAAcG,QAAQxB,EAAMiB,cAAgBjB,EAAMkB,iBAClDG,EAAcI,MAAMqC,GACpBzC,EAAciD,OAAO,SAAA3C,GACnB,GAA4B,WAAxBL,IAAGO,cAAcF,GACnB,MAAM,IAAI4C,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,sBAAAwD,OAAoDC,EAAUG,GAA9D,+HAXI,IAAA+C,GAAA,EAAAC,GAAA,EAAAC,OAAAlE,EAAA,IAiBxB,QAAAmE,EAAAC,EAAuB7I,KAAK2B,OAA5BkD,OAAAC,cAAA2D,GAAAG,EAAAC,EAAA9D,QAAAC,MAAAyD,GAAA,EAAoC,KAAzBhC,EAAyBmC,EAAA1D,MAClC,GAAIuB,EAAS3D,gBAAgBY,SAASgC,GACpC,MAAM,IAAIS,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,sBAAAwD,OAAoDC,EAAUG,GAA9D,mCAAAJ,OACXmB,EAAS3E,KADE,6CAnBI,MAAA0D,GAAAkD,GAAA,EAAAC,EAAAnD,EAAA,YAAAiD,GAAA,MAAAI,EAAApD,QAAAoD,EAAApD,SAAA,WAAAiD,EAAA,MAAAC,GA0BxB,GAAI/G,IAAU5B,KAAKiK,UAAW,CAE5B,GAAIrI,EAAMsI,WAAWxE,EAAK5B,MAAM,mBAAmB,IACjD,MAAM,IAAIqC,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,sBAAAwD,OAAoDC,EAAUG,GAA9D,8EAKlB,IAAIyE,EAAe,GARSrB,GAAA,EAAAC,GAAA,EAAAC,OAAAvE,EAAA,IAU5B,QAAAwE,EAAAC,EAAmBtH,EAAMiB,cAAc1B,MAAM,MAA7C0D,OAAAC,cAAAgE,GAAAG,EAAAC,EAAAnE,QAAAC,MAAA8D,GAAA,EAAoD,KAAzCsB,EAAyCnB,EAAA/D,MAClD,GAAI,2BAA2BmF,KAAKD,GAAO,KAAAI,GAAA,EAAAC,GAAA,EAAAC,OAAAjG,EAAA,IACzC,QAAAkG,EAAAC,EAAoBR,EAAKtG,MAAM,sCAA/Be,OAAAC,cAAA0F,GAAAG,EAAAC,EAAA7F,QAAAC,MAAAwF,GAAA,EAAsE,KAA3D1G,EAA2D6G,EAAAzF,MAC/DiF,EAAazG,SAASI,IACzBqG,EAAa3G,KAAKM,IAHmB,MAAA0B,GAAAiF,GAAA,EAAAC,EAAAlF,EAAA,YAAAgF,GAAA,MAAAI,EAAAnF,QAAAmF,EAAAnF,SAAA,WAAAgF,EAAA,MAAAC,MAXjB,MAAAlF,GAAAuD,GAAA,EAAAC,EAAAxD,EAAA,YAAAsD,GAAA,MAAAI,EAAAzD,QAAAyD,EAAAzD,SAAA,WAAAsD,EAAA,MAAAC,GAoB5B,IAAK,IAAIsB,EAAI,EAAGA,EAAIH,EAAanJ,OAAQsJ,IAAK,KAAAlB,GAAA,EAAAC,GAAA,EAAAC,OAAA7E,EAAA,IAC5C,QAAA8E,EAAAE,EAAmB7H,EAAMiB,cAAc1B,MAAM,MAA7C0D,OAAAC,cAAAsE,GAAAG,EAAAE,EAAA1E,QAAAC,MAAAoE,GAAA,EAAoD,KAAzCgB,EAAyCb,EAAArE,MAClD,GAAI,IAAIqF,OAAO,IAAMJ,EAAaG,GAAK,QAAQD,KAAKD,GAAO,KAAAV,GAAA,EAAAC,GAAA,EAAAC,OAAAnF,EAAA,IACzD,QAAAoF,EAAAC,EAAoBM,EAAKtG,MAAM,sCAA/Be,OAAAC,cAAA4E,GAAAG,EAAAC,EAAA/E,QAAAC,MAAA0E,GAAA,EAAsE,KAA3D5F,EAA2D+F,EAAA3E,MAC/DiF,EAAazG,SAASI,IACzBqG,EAAa3G,KAAKM,IAHmC,MAAA0B,GAAAmE,GAAA,EAAAC,EAAApE,EAAA,YAAAkE,GAAA,MAAAI,EAAArE,QAAAqE,EAAArE,SAAA,WAAAkE,EAAA,MAAAC,MAFjB,MAAApE,GAAA6D,GAAA,EAAAC,EAAA9D,EAAA,YAAA4D,GAAA,MAAAK,EAAAhE,QAAAgE,EAAAhE,SAAA,WAAA4D,EAAA,MAAAC,IAY9C,IAAKa,EAAazG,SAASiC,GACzB,MAAM,IAAIQ,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,sBAAAwD,OAAoDC,EAAUG,GAA9D,0HAYpB,GAJA9D,EAAMkB,iBAAN,GAAAwC,OAA4BI,EAA5B,MAII9D,IAAU5B,KAAKiK,UAAW,KAAAY,GAAA,EAAAC,GAAA,EAAAC,OAAAtG,EAAA,IAE5B,QAAAuG,EAAAC,GAAoBrJ,EAAMiB,cAAgBjB,EAAMkB,iBAAiB3B,MAAM,MAAvE0D,OAAAC,cAAA+F,GAAAG,EAAAC,EAAAlG,QAAAC,MAAA6F,GAAA,EAA8E,KAAnET,EAAmEY,EAAA9F,MACxE,IAAIqF,OAAO,IAAM5E,EAAW,sBAAwBD,EAAK5B,MAAM,oBAAoB,GAAK,KAAKuG,KAAKD,KAC/FxI,EAAMkB,gBAAgBY,SAAS0G,KAClCxI,EAAMkB,iBAAN,GAAAwC,OAA4B8E,EAA5B,SALsB,MAAA5E,GAAAsF,GAAA,EAAAC,EAAAvF,EAAA,YAAAqF,GAAA,MAAAI,EAAAxF,QAAAwF,EAAAxF,SAAA,WAAAqF,EAAA,MAAAC,IAa9B/K,KAAKkB,MAAL,GAAAoE,OAAgB1D,EAAME,KAAtB,UAAAwD,OAAmCC,EAAUG,GAA7C,OACA1F,KAAK0G,uDAIC9E,EAAO8D,GACb,IAAMC,EAAWD,EAAK5B,MAAM,mBAAmB,GAK3CkD,GAAa,EANEkE,GAAA,EAAAC,GAAA,EAAAC,OAAA3G,EAAA,IAQnB,QAAA4G,EAAAC,EAAwBtL,KAAK2B,OAA7BkD,OAAAC,cAAAoG,GAAAG,EAAAC,EAAAvG,QAAAC,MAAAkG,GAAA,EAAqC,KAA1B5D,EAA0B+D,EAAAnG,MAC/BoC,IAAc1F,GAAS0F,EAAUxE,gBAAgBY,SAASgC,KAC5DsB,GAAa,IAVE,MAAAxB,GAAA2F,GAAA,EAAAC,EAAA5F,EAAA,YAAA0F,GAAA,MAAAI,EAAA7F,QAAA6F,EAAA7F,SAAA,WAAA0F,EAAA,MAAAC,GAcnB,IAAmB,IAAfpE,EACF,MAAM,IAAIb,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,mBAAAwD,OAAiDC,EAAUG,GAA3D,yFAKlB,GAAKA,EAAKhC,SAAS,SAAY9B,EAAMkB,gBAAgBY,SAAtB,GAAA4B,OAAkCI,EAAKkC,UAAU,EAAGlC,EAAK1E,OAAS,GAAlE,QACxB0E,EAAKhC,SAAS,SAAW9B,EAAMkB,gBAAgBY,SAAtB,OAAA4B,OAAsCI,EAAKkC,UAAU,EAAGlC,EAAK1E,OAAS,GAAtE,OAC9B,MAAM,IAAImF,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,mBAAAwD,OAAiDC,EAAUG,GAA3D,oGAMlB,GAAI9D,IAAU5B,KAAKiK,UAAW,CAE5B,IAAIE,EAAe,CAAC,wBAFQoB,GAAA,EAAAC,GAAA,EAAAC,OAAAhH,EAAA,IAI5B,QAAAiH,EAAAC,EAAmB/J,EAAMiB,cAAc1B,MAAM,MAA7C0D,OAAAC,cAAAyG,GAAAG,EAAAC,EAAA5G,QAAAC,MAAAuG,GAAA,EAAoD,KAAzCnB,EAAyCsB,EAAAxG,MAClD,GAAI,2BAA2BmF,KAAKD,GAAO,KAAAwB,GAAA,EAAAC,GAAA,EAAAC,OAAArH,EAAA,IACzC,QAAAsH,EAAAC,EAAoB5B,EAAKtG,MAAM,sCAA/Be,OAAAC,cAAA8G,GAAAG,EAAAC,EAAAjH,QAAAC,MAAA4G,GAAA,EAAsE,KAA3D9H,EAA2DiI,EAAA7G,MAC/DiF,EAAazG,SAASI,IACzBqG,EAAa3G,KAAKM,IAHmB,MAAA0B,GAAAqG,GAAA,EAAAC,EAAAtG,EAAA,YAAAoG,GAAA,MAAAI,EAAAvG,QAAAuG,EAAAvG,SAAA,WAAAoG,EAAA,MAAAC,MALjB,MAAAtG,GAAAgG,GAAA,EAAAC,EAAAjG,EAAA,YAAA+F,GAAA,MAAAI,EAAAlG,QAAAkG,EAAAlG,SAAA,WAAA+F,EAAA,MAAAC,GAc5B,IAAK,IAAInB,EAAI,EAAGA,EAAIH,EAAanJ,OAAQsJ,IAAK,KAAA2B,GAAA,EAAAC,GAAA,EAAAC,OAAA1H,EAAA,IAC5C,QAAA2H,EAAAC,EAAmBzK,EAAMiB,cAAc1B,MAAM,MAA7C0D,OAAAC,cAAAmH,GAAAG,EAAAC,EAAAtH,QAAAC,MAAAiH,GAAA,EAAoD,KAAzC7B,EAAyCgC,EAAAlH,MAClD,GAAI,IAAIqF,OAAO,IAAMJ,EAAaG,GAAK,QAAQD,KAAKD,GAAO,KAAAkC,GAAA,EAAAC,GAAA,EAAAC,OAAA/H,EAAA,IACzD,QAAAgI,EAAAC,EAAoBtC,EAAKtG,MAAM,sCAA/Be,OAAAC,cAAAwH,GAAAG,EAAAC,EAAA3H,QAAAC,MAAAsH,GAAA,EAAsE,KAA3DxI,EAA2D2I,EAAAvH,MAC/DiF,EAAazG,SAASI,IACzBqG,EAAa3G,KAAKM,IAHmC,MAAA0B,GAAA+G,GAAA,EAAAC,EAAAhH,EAAA,YAAA8G,GAAA,MAAAI,EAAAjH,QAAAiH,EAAAjH,SAAA,WAAA8G,EAAA,MAAAC,MAFjB,MAAAhH,GAAA0G,GAAA,EAAAC,EAAA3G,EAAA,YAAAyG,GAAA,MAAAI,EAAA5G,QAAA4G,EAAA5G,SAAA,WAAAyG,EAAA,MAAAC,IAY9C,IAAKhC,EAAazG,SAASiC,GACzB,MAAM,IAAIQ,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,mBAAAwD,OAAiDC,EAAUG,GAA3D,0HAcpB,GANK9D,EAAMkB,gBAAgBY,SAASgC,KAClC9D,EAAMkB,iBAAN,GAAAwC,OAA4BI,EAA5B,OAKE9D,IAAU5B,KAAKiK,UAAW,KAAA0C,GAAA,EAAAC,GAAA,EAAAC,OAAApI,EAAA,IAE5B,QAAAqI,EAAAC,GAAoBnL,EAAMiB,cAAgBjB,EAAMkB,iBAAiB3B,MAAM,MAAvE0D,OAAAC,cAAA6H,GAAAG,EAAAC,EAAAhI,QAAAC,MAAA2H,GAAA,EAA8E,KAAnEvC,EAAmE0C,EAAA5H,MACxE,IAAIqF,OAAO,IAAM5E,EAAW,sBAAwBD,EAAK5B,MAAM,oBAAoB,GAAK,KAAKuG,KAAKD,KAC/FxI,EAAMkB,gBAAgBY,SAAS0G,KAClCxI,EAAMkB,iBAAN,GAAAwC,OAA4B8E,EAA5B,SALsB,MAAA5E,GAAAoH,GAAA,EAAAC,EAAArH,EAAA,YAAAmH,GAAA,MAAAI,EAAAtH,QAAAsH,EAAAtH,SAAA,WAAAmH,EAAA,MAAAC,IAa9B7M,KAAKkB,MAAL,GAAAoE,OAAgB1D,EAAME,KAAtB,oBAAAwD,OAA6CC,EAAUG,GAAvD,OACA1F,KAAK0G,wDAIE9E,EAAO8D,GACd,IAAMC,EAAWD,EAAK5B,MAAM,mBAAmB,GAD3BkJ,GAAA,EAAAC,GAAA,EAAAC,OAAAzI,EAAA,IAMpB,QAAA0I,EAAAC,EAAuBpN,KAAK2B,OAA5BkD,OAAAC,cAAAkI,GAAAG,EAAAC,EAAArI,QAAAC,MAAAgI,GAAA,EAAoC,KAAzBvG,EAAyB0G,EAAAjI,MAClC,GAAIuB,EAAS3D,gBAAgBY,SAASgC,GACpC,MAAM,IAAIS,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,qBAAAwD,OAAmDC,EAAUG,GAA7D,mCAAAJ,OACXmB,EAAS3E,KADE,6CARA,MAAA0D,GAAAyH,GAAA,EAAAC,EAAA1H,EAAA,YAAAwH,GAAA,MAAAI,EAAA3H,QAAA2H,EAAA3H,SAAA,WAAAwH,EAAA,MAAAC,GAcpB,IAAMjK,EAAgBC,IAAGC,SAYzB,GAXAF,EAAcG,QAAQxB,EAAMiB,cAAgBjB,EAAMkB,iBAClDG,EAAcI,MAAMqC,GACpBzC,EAAciD,OAAO,SAAA3C,GACnB,GAA4B,WAAxBL,IAAGO,cAAcF,GACnB,MAAM,IAAI4C,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,qBAAAwD,OAAmDC,EAAUG,GAA7D,4HAOhB9D,IAAU5B,KAAKiK,UAAW,CAE5B,IAAIE,EAAe,GAFSkD,GAAA,EAAAC,GAAA,EAAAC,OAAA9I,EAAA,IAI5B,QAAA+I,EAAAC,EAAmB7L,EAAMiB,cAAc1B,MAAM,MAA7C0D,OAAAC,cAAAuI,GAAAG,EAAAC,EAAA1I,QAAAC,MAAAqI,GAAA,EAAoD,KAAzCjD,EAAyCoD,EAAAtI,MAClD,GAAI,2BAA2BmF,KAAKD,GAAO,KAAAsD,GAAA,EAAAC,GAAA,EAAAC,OAAAnJ,EAAA,IACzC,QAAAoJ,EAAAC,EAAoB1D,EAAKtG,MAAM,sCAA/Be,OAAAC,cAAA4I,GAAAG,EAAAC,EAAA/I,QAAAC,MAAA0I,GAAA,EAAsE,KAA3D5J,EAA2D+J,EAAA3I,MAC/DiF,EAAazG,SAASI,IACzBqG,EAAa3G,KAAKM,IAHmB,MAAA0B,GAAAmI,GAAA,EAAAC,EAAApI,EAAA,YAAAkI,GAAA,MAAAI,EAAArI,QAAAqI,EAAArI,SAAA,WAAAkI,EAAA,MAAAC,MALjB,MAAApI,GAAA8H,GAAA,EAAAC,EAAA/H,EAAA,YAAA6H,GAAA,MAAAI,EAAAhI,QAAAgI,EAAAhI,SAAA,WAAA6H,EAAA,MAAAC,GAc5B,IAAK,IAAIjD,EAAI,EAAGA,EAAIH,EAAanJ,OAAQsJ,IAAK,KAAAyD,GAAA,EAAAC,GAAA,EAAAC,OAAAxJ,EAAA,IAC5C,QAAAyJ,EAAAC,EAAmBvM,EAAMiB,cAAc1B,MAAM,MAA7C0D,OAAAC,cAAAiJ,GAAAG,EAAAC,EAAApJ,QAAAC,MAAA+I,GAAA,EAAoD,KAAzC3D,EAAyC8D,EAAAhJ,MAClD,GAAI,IAAIqF,OAAO,IAAMJ,EAAaG,GAAK,QAAQD,KAAKD,GAAO,KAAAgE,GAAA,EAAAC,GAAA,EAAAC,OAAA7J,EAAA,IACzD,QAAA8J,EAAAC,EAAoBpE,EAAKtG,MAAM,sCAA/Be,OAAAC,cAAAsJ,GAAAG,EAAAC,EAAAzJ,QAAAC,MAAAoJ,GAAA,EAAsE,KAA3DtK,EAA2DyK,EAAArJ,MAC/DiF,EAAazG,SAASI,IACzBqG,EAAa3G,KAAKM,IAHmC,MAAA0B,GAAA6I,GAAA,EAAAC,EAAA9I,EAAA,YAAA4I,GAAA,MAAAI,EAAA/I,QAAA+I,EAAA/I,SAAA,WAAA4I,EAAA,MAAAC,MAFjB,MAAA9I,GAAAwI,GAAA,EAAAC,EAAAzI,EAAA,YAAAuI,GAAA,MAAAI,EAAA1I,QAAA0I,EAAA1I,SAAA,WAAAuI,EAAA,MAAAC,IAY9C,IAAK9D,EAAazG,SAASiC,GACzB,MAAM,IAAIQ,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,qBAAAwD,OAAmDC,EAAUG,GAA7D,0HAOpB,GAAI9D,IAAU5B,KAAKiK,UAAW,KAAAwE,GAAA,EAAAC,GAAA,EAAAC,OAAAlK,EAAA,IAE5B,QAAAmK,EAAAC,GAAoBjN,EAAMiB,cAAgBjB,EAAMkB,iBAAiB3B,MAAM,MAAvE0D,OAAAC,cAAA2J,GAAAG,EAAAC,EAAA9J,QAAAC,MAAAyJ,GAAA,EAA8E,KAAnErE,EAAmEwE,EAAA1J,MACxE,IAAIqF,OAAO,IAAM5E,EAAW,sBAAwBD,EAAK5B,MAAM,oBAAoB,GAAK,KAAKuG,KAAKD,KAC/FxI,EAAMkB,gBAAgBY,SAAS0G,KAClCxI,EAAMkB,iBAAN,GAAAwC,OAA4B8E,EAA5B,SALsB,MAAA5E,GAAAkJ,GAAA,EAAAC,EAAAnJ,EAAA,YAAAiJ,GAAA,MAAAI,EAAApJ,QAAAoJ,EAAApJ,SAAA,WAAAiJ,EAAA,MAAAC,IAa9B3O,KAAKkB,MAAL,GAAAoE,OAAgB1D,EAAME,KAAtB,kBAAAwD,OAA2CC,EAAUG,GAArD,OACA1F,KAAK0G,8BA9WwBZ,WCyXlBgJ,cAxXb,SAAAA,EAAYnN,GAAQ,IAAA9B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8O,IAClBjP,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgP,GAAA3O,KAAAH,KAAM2B,KAEDoN,qBAAuB,4BAC5BlP,EAAKsC,4BAA8B,CAACtC,EAAKkP,sBAJvBlP,sFAQlBC,OAAAkP,EAAA,EAAAlP,QAAAI,EAAA,EAAAJ,CAAAgP,EAAAG,WAAA,uBAAAjP,MAAAG,KAAAH,MAEAA,KAAKmC,4BAA4BqB,KAAKxD,KAAK+O,uDAI3C,IAAIG,EAA4B,GADzB5K,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAGP,QAAAC,EAAAC,EAAoB3E,KAAK2B,OAAzBkD,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAAiC,KAAtB1C,EAAsB8C,EAAAQ,MAAAyB,GAAA,EAAAC,GAAA,EAAAC,OAAApC,EAAA,IAC/B,QAAAqC,EAAAC,EAAmBnF,EAAMkB,gBAAgB3B,MAAM,MAA/C0D,OAAAC,cAAA6B,GAAAG,EAAAC,EAAAhC,QAAAC,MAAA2B,GAAA,EAAsD,KAA3CyD,EAA2CtD,EAAA5B,MAC/C,0BAA0BmF,KAAKD,KAClC8E,GAAyB,GAAA5J,OAAO8E,EAAP,QAHE,MAAA5E,GAAAoB,GAAA,EAAAC,EAAArB,EAAA,YAAAmB,GAAA,MAAAI,EAAAtB,QAAAsB,EAAAtB,SAAA,WAAAmB,EAAA,MAAAC,KAH1B,MAAArB,GAAAjB,GAAA,EAAAC,EAAAgB,EAAA,YAAAlB,GAAA,MAAAK,EAAAc,QAAAd,EAAAc,SAAA,WAAAlB,EAAA,MAAAC,GAWP0K,GAA6BlP,KAAK+O,qBAElC,IAAII,EAAmB,GAEjBlM,EAAgBC,IAAGC,SACzBF,EAAcG,QAAQ8L,GACtBjM,EAAcI,MAAM,4BACpBJ,EAAciD,OAAO,SAAA3C,GACnB4L,EAAmBjM,IAAGO,cAAcF,GAAGpC,MAAM,KAAK,KAnB7C,IAAAiF,GAAA,EAAAC,GAAA,EAAAC,OAAA7B,EAAA,IAsBP,QAAA8B,EAAAC,EAAoBxG,KAAK2B,OAAzBkD,OAAAC,cAAAsB,GAAAG,EAAAC,EAAAzB,QAAAC,MAAAoB,GAAA,EAAiC,CAC/B,IAD+BG,EAAArB,MACpBpC,gBAAgBY,SAAtB,wBAAA4B,OAAuD6J,EAAvD,MACH,OAAO,GAxBJ,MAAA3J,GAAAa,GAAA,EAAAC,EAAAd,EAAA,YAAAY,GAAA,MAAAI,EAAAf,QAAAe,EAAAf,SAAA,WAAAY,EAAA,MAAAC,GA2BP,OAAO,wDAGqBZ,GAC5B,IAAM3C,EAAa2C,EAAK5B,MAAM,oBAAoB,GAE7C9D,KAAK+O,qBAAqBrL,SAASgC,EAAKkC,UAAU,EAAGlC,EAAK1E,OAAS,GAAG6C,QAAQd,EAAY,QACrB,MAApE/C,KAAK+O,qBAAqB/O,KAAK+O,qBAAqB/N,OAAS,GAC/DhB,KAAK+O,sBAAwBrJ,EAAK7B,QAAQd,EAAY,KAEtD/C,KAAK+O,qBAAL,GAAAzJ,OAA+BtF,KAAK+O,qBAAqBnH,UAAU,EAAG5H,KAAK+O,qBAAqB/N,OAAS,GAAzG,KAAAsE,OAA+GI,EAAK7B,QAAQd,EAAY,qCAMxInB,EAAO8D,GACX,IAAM3C,EAAa2C,EAAK5B,MAAM,mBAAmB,GAC3C6B,EAAWD,EAAK5B,MAAM,mBAAmB,GAKzCb,EAAgBC,IAAGC,SACzBF,EAAcG,QAAQxB,EAAMiB,cAAgBjB,EAAMkB,iBAClDG,EAAcI,MAAMqC,GACpBzC,EAAciD,OAAO,SAAA3C,GACnB,GAA4B,WAAxBL,IAAGO,cAAcF,GACnB,MAAM,IAAI4C,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,eAAAwD,OAA6CC,EAAUG,GAAvD,+HAZH,IAAAuB,GAAA,EAAAC,GAAA,EAAAC,OAAA1C,EAAA,IAkBjB,QAAA2C,EAAAC,EAAuBrH,KAAK2B,OAA5BkD,OAAAC,cAAAmC,GAAAG,EAAAC,EAAAtC,QAAAC,MAAAiC,GAAA,EAAoC,KAAzBR,EAAyBW,EAAAlC,MAClC,GAAIuB,EAAS3D,gBAAgBY,SAASgC,GACpC,MAAM,IAAIS,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,eAAAwD,OAA6CC,EAAUG,GAAvD,mCAAAJ,OACXmB,EAAS3E,KADE,6CApBH,MAAA0D,GAAA0B,GAAA,EAAAC,EAAA3B,EAAA,YAAAyB,GAAA,MAAAI,EAAA5B,QAAA4B,EAAA5B,SAAA,WAAAyB,EAAA,MAAAC,GA4BjB,IAAKvF,EAAMsI,WAAWnH,GACpB,MAAM,IAAIoD,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,eAAAwD,OAA6CC,EAAUG,GAAvD,kFAKlB,IAAIyE,EAAe,GAlCF5C,GAAA,EAAAC,GAAA,EAAAC,OAAAhD,EAAA,IAoCjB,QAAAiD,EAAAC,EAAmB/F,EAAMiB,cAAc1B,MAAM,MAA7C0D,OAAAC,cAAAyC,GAAAG,EAAAC,EAAA5C,QAAAC,MAAAuC,GAAA,EAAoD,KAAzC6C,EAAyC1C,EAAAxC,MAClD,GAAI,2BAA2BmF,KAAKD,GAAO,KAAAtB,GAAA,EAAAC,GAAA,EAAAC,OAAAvE,EAAA,IACzC,QAAAwE,EAAAC,EAAoBkB,EAAKtG,MAAM,sCAA/Be,OAAAC,cAAAgE,GAAAG,EAAAC,EAAAnE,QAAAC,MAAA8D,GAAA,EAAsE,KAA3DhF,EAA2DmF,EAAA/D,MAC/DiF,EAAazG,SAASI,IACzBqG,EAAa3G,KAAKM,IAHmB,MAAA0B,GAAAuD,GAAA,EAAAC,EAAAxD,EAAA,YAAAsD,GAAA,MAAAI,EAAAzD,QAAAyD,EAAAzD,SAAA,WAAAsD,EAAA,MAAAC,MArC5B,MAAAxD,GAAAgC,GAAA,EAAAC,EAAAjC,EAAA,YAAA+B,GAAA,MAAAI,EAAAlC,QAAAkC,EAAAlC,SAAA,WAAA+B,EAAA,MAAAC,GA8CjB,IAAK,IAAI6C,EAAI,EAAGA,EAAIH,EAAanJ,OAAQsJ,IAAK,KAAAxC,GAAA,EAAAC,GAAA,EAAAC,OAAAvD,EAAA,IAC5C,QAAAwD,EAAAC,EAAmBtG,EAAMiB,cAAc1B,MAAM,MAA7C0D,OAAAC,cAAAgD,GAAAG,EAAAC,EAAAnD,QAAAC,MAAA8C,GAAA,EAAoD,KAAzCsC,EAAyCnC,EAAA/C,MAClD,GAAI,IAAIqF,OAAO,IAAMJ,EAAaG,GAAK,QAAQD,KAAKD,GAAO,KAAAhC,GAAA,EAAAC,GAAA,EAAAC,OAAA7D,EAAA,IACzD,QAAA8D,EAAAC,EAAoB4B,EAAKtG,MAAM,sCAA/Be,OAAAC,cAAAsD,GAAAG,EAAAC,EAAAzD,QAAAC,MAAAoD,GAAA,EAAsE,KAA3DtE,EAA2DyE,EAAArD,MAC/DiF,EAAazG,SAASI,IACzBqG,EAAa3G,KAAKM,IAHmC,MAAA0B,GAAA6C,GAAA,EAAAC,EAAA9C,EAAA,YAAA4C,GAAA,MAAAI,EAAA/C,QAAA+C,EAAA/C,SAAA,WAAA4C,EAAA,MAAAC,MAFjB,MAAA9C,GAAAuC,GAAA,EAAAC,EAAAxC,EAAA,YAAAsC,GAAA,MAAAI,EAAAzC,QAAAyC,EAAAzC,SAAA,WAAAsC,EAAA,MAAAC,IAY9C,IAAKmC,EAAazG,SAASiC,GACzB,MAAM,IAAIQ,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,eAAAwD,OAA6CC,EAAUG,GAAvD,0HAOlB9D,EAAMkB,iBAAN,GAAAwC,OAA4BI,EAA5B,MAKAzC,EAAcI,MAAd,wBAAAiC,OAA4CvC,EAA5C,OACAE,EAAciD,OAAO,SAAA3C,GACS,WAAxBL,IAAGO,cAAcF,IAAoB3B,EAAMkB,gBAAgBY,SAAtB,wBAAA4B,OAAuDvC,EAAvD,SACvCnB,EAAMkB,iBAAN,wBAAAwC,OAAiDvC,EAAjD,WA1Ea,IAAA0F,GAAA,EAAAC,GAAA,EAAAC,OAAAlE,EAAA,IA+EjB,QAAAmE,EAAAC,GAAoBjH,EAAMiB,cAAgBjB,EAAMkB,iBAAiB3B,MAAM,MAAvE0D,OAAAC,cAAA2D,GAAAG,EAAAC,EAAA9D,QAAAC,MAAAyD,GAAA,EAA8E,KAAnE2B,EAAmExB,EAAA1D,MACxE,IAAIqF,OAAO,IAAM5E,EAAW,sBAAwBD,EAAK5B,MAAM,oBAAoB,GAAK,KAAKuG,KAAKD,KAC/FxI,EAAMkB,gBAAgBY,SAAS0G,KAClCxI,EAAMkB,iBAAN,GAAAwC,OAA4B8E,EAA5B,SAlFW,MAAA5E,GAAAkD,GAAA,EAAAC,EAAAnD,EAAA,YAAAiD,GAAA,MAAAI,EAAApD,QAAAoD,EAAApD,SAAA,WAAAiD,EAAA,MAAAC,GAyFjB3I,KAAKkB,MAAL,GAAAoE,OAAgB1D,EAAME,KAAtB,MAAAwD,OAA+BC,EAAUG,GAAzC,OACA1F,KAAK0G,4DAIM9E,EAAO8D,GAClB,IAAMC,EAAWD,EAAK5B,MAAM,mBAAmB,GAKzCb,EAAgBC,IAAGC,SACzBF,EAAcG,QAAQxB,EAAMiB,cAAgBjB,EAAMkB,iBAClDG,EAAcI,MAAMqC,GACpBzC,EAAciD,OAAO,SAAA3C,GACnB,GAA4B,WAAxBL,IAAGO,cAAcF,GACnB,MAAM,IAAI4C,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,sBAAAwD,OAAoDC,EAAUG,GAA9D,+HAXI,IAAA0D,GAAA,EAAAC,GAAA,EAAAC,OAAA7E,EAAA,IAiBxB,QAAA8E,EAAAE,EAAuBzJ,KAAK2B,OAA5BkD,OAAAC,cAAAsE,GAAAG,EAAAE,EAAA1E,QAAAC,MAAAoE,GAAA,EAAoC,KAAzB3C,EAAyB8C,EAAArE,MAClC,GAAIuB,EAAS3D,gBAAgBY,SAASgC,GACpC,MAAM,IAAIS,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,sBAAAwD,OAAoDC,EAAUG,GAA9D,mCAAAJ,OACXmB,EAAS3E,KADE,6CAnBI,MAAA0D,GAAA6D,GAAA,EAAAC,EAAA9D,EAAA,YAAA4D,GAAA,MAAAK,EAAAhE,QAAAgE,EAAAhE,SAAA,WAAA4D,EAAA,MAAAC,GA2BxB,GAAI1H,EAAMsI,WAAWxE,EAAK5B,MAAM,mBAAmB,IACjD,MAAM,IAAIqC,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,sBAAAwD,OAAoDC,EAAUG,GAA9D,8EAKlB,IAAIyE,EAAe,GAjCKT,GAAA,EAAAC,GAAA,EAAAC,OAAAnF,EAAA,IAmCxB,QAAAoF,EAAAC,EAAmBlI,EAAMiB,cAAc1B,MAAM,MAA7C0D,OAAAC,cAAA4E,GAAAG,EAAAC,EAAA/E,QAAAC,MAAA0E,GAAA,EAAoD,KAAzCU,EAAyCP,EAAA3E,MAClD,GAAI,2BAA2BmF,KAAKD,GAAO,KAAAmB,GAAA,EAAAC,GAAA,EAAAC,OAAAhH,EAAA,IACzC,QAAAiH,EAAAC,EAAoBvB,EAAKtG,MAAM,sCAA/Be,OAAAC,cAAAyG,GAAAG,EAAAC,EAAA5G,QAAAC,MAAAuG,GAAA,EAAsE,KAA3DzH,EAA2D4H,EAAAxG,MAC/DiF,EAAazG,SAASI,IACzBqG,EAAa3G,KAAKM,IAHmB,MAAA0B,GAAAgG,GAAA,EAAAC,EAAAjG,EAAA,YAAA+F,GAAA,MAAAI,EAAAlG,QAAAkG,EAAAlG,SAAA,WAAA+F,EAAA,MAAAC,MApCrB,MAAAjG,GAAAmE,GAAA,EAAAC,EAAApE,EAAA,YAAAkE,GAAA,MAAAI,EAAArE,QAAAqE,EAAArE,SAAA,WAAAkE,EAAA,MAAAC,GA6CxB,IAAK,IAAIU,EAAI,EAAGA,EAAIH,EAAanJ,OAAQsJ,IAAK,KAAAE,GAAA,EAAAC,GAAA,EAAAC,OAAAjG,EAAA,IAC5C,QAAAkG,EAAAC,EAAmBhJ,EAAMiB,cAAc1B,MAAM,MAA7C0D,OAAAC,cAAA0F,GAAAG,EAAAC,EAAA7F,QAAAC,MAAAwF,GAAA,EAAoD,KAAzCJ,EAAyCO,EAAAzF,MAClD,GAAI,IAAIqF,OAAO,IAAMJ,EAAaG,GAAK,QAAQD,KAAKD,GAAO,KAAAS,GAAA,EAAAC,GAAA,EAAAC,OAAAtG,EAAA,IACzD,QAAAuG,EAAAC,EAAoBb,EAAKtG,MAAM,sCAA/Be,OAAAC,cAAA+F,GAAAG,EAAAC,EAAAlG,QAAAC,MAAA6F,GAAA,EAAsE,KAA3D/G,EAA2DkH,EAAA9F,MAC/DiF,EAAazG,SAASI,IACzBqG,EAAa3G,KAAKM,IAHmC,MAAA0B,GAAAsF,GAAA,EAAAC,EAAAvF,EAAA,YAAAqF,GAAA,MAAAI,EAAAxF,QAAAwF,EAAAxF,SAAA,WAAAqF,EAAA,MAAAC,MAFjB,MAAAvF,GAAAiF,GAAA,EAAAC,EAAAlF,EAAA,YAAAgF,GAAA,MAAAI,EAAAnF,QAAAmF,EAAAnF,SAAA,WAAAgF,EAAA,MAAAC,IAY9C,IAAKP,EAAazG,SAASiC,GACzB,MAAM,IAAIQ,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,sBAAAwD,OAAoDC,EAAUG,GAA9D,0HAOlB9D,EAAMkB,iBAAN,GAAAwC,OAA4BI,EAA5B,MAjEwB,IAAAwF,GAAA,EAAAC,GAAA,EAAAC,OAAA3G,EAAA,IAsExB,QAAA4G,EAAAC,GAAoB1J,EAAMiB,cAAgBjB,EAAMkB,iBAAiB3B,MAAM,MAAvE0D,OAAAC,cAAAoG,GAAAG,EAAAC,EAAAvG,QAAAC,MAAAkG,GAAA,EAA8E,KAAnEd,EAAmEiB,EAAAnG,MACxE,IAAIqF,OAAO,IAAM5E,EAAW,sBAAwBD,EAAK5B,MAAM,oBAAoB,GAAK,KAAKuG,KAAKD,KAC/FxI,EAAMkB,gBAAgBY,SAAS0G,KAClCxI,EAAMkB,iBAAN,GAAAwC,OAA4B8E,EAA5B,SAzEkB,MAAA5E,GAAA2F,GAAA,EAAAC,EAAA5F,EAAA,YAAA0F,GAAA,MAAAI,EAAA7F,QAAA6F,EAAA7F,SAAA,WAAA0F,EAAA,MAAAC,GAgFxBpL,KAAKkB,MAAL,GAAAoE,OAAgB1D,EAAME,KAAtB,UAAAwD,OAAmCC,EAAUG,GAA7C,OACA1F,KAAK0G,uDAIC9E,EAAO8D,GACb,IAAM3C,EAAa2C,EAAK5B,MAAM,oBAAoB,GAC5C6B,EAAWD,EAAK5B,MAAM,mBAAmB,GAK3CkD,GAAa,EAPEiF,GAAA,EAAAC,GAAA,EAAAC,OAAA1H,EAAA,IASnB,QAAA2H,EAAAC,EAAwBrM,KAAK2B,OAA7BkD,OAAAC,cAAAmH,GAAAG,EAAAC,EAAAtH,QAAAC,MAAAiH,GAAA,EAAqC,KAA1B3E,EAA0B8E,EAAAlH,MAC/BoC,IAAc1F,GAAS0F,EAAUxE,gBAAgBY,SAASgC,KAC5DsB,GAAa,IAXE,MAAAxB,GAAA0G,GAAA,EAAAC,EAAA3G,EAAA,YAAAyG,GAAA,MAAAI,EAAA5G,QAAA4G,EAAA5G,SAAA,WAAAyG,EAAA,MAAAC,GAenB,IAAmB,IAAfnF,EACF,MAAM,IAAIb,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,mBAAAwD,OAAiDC,EAAUG,GAA3D,yFAKlB,GAAKA,EAAKhC,SAAS,SAAY9B,EAAMkB,gBAAgBY,SAAtB,GAAA4B,OAAkCI,EAAKkC,UAAU,EAAGlC,EAAK1E,OAAS,GAAlE,QACxB0E,EAAKhC,SAAS,SAAW9B,EAAMkB,gBAAgBY,SAAtB,OAAA4B,OAAsCI,EAAKkC,UAAU,EAAGlC,EAAK1E,OAAS,GAAtE,OAC9B,MAAM,IAAImF,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,mBAAAwD,OAAiDC,EAAUG,GAA3D,oGAKlB1F,KAAKoP,8BAA8B1J,GAK9B9D,EAAMkB,gBAAgBY,SAASgC,KAClC9D,EAAMkB,iBAAN,GAAAwC,OAA4BI,EAA5B,OAlCiB,IAAA4G,GAAA,EAAAC,GAAA,EAAAC,OAAA/H,EAAA,IAwCnB,QAAAgI,EAAAC,GAAoB9K,EAAMiB,cAAgBjB,EAAMkB,iBAAiB3B,MAAM,MAAvE0D,OAAAC,cAAAwH,GAAAG,EAAAC,EAAA3H,QAAAC,MAAAsH,GAAA,EAA8E,KAAnElC,EAAmEqC,EAAAvH,MACxE,IAAIqF,OAAO,IAAM5E,EAAW,sBAAwBD,EAAK5B,MAAM,oBAAoB,GAAK,KAAKuG,KAAKD,KAC/FxI,EAAMkB,gBAAgBY,SAAS0G,KAClCxI,EAAMkB,iBAAN,GAAAwC,OAA4B8E,EAA5B,SA3Ca,MAAA5E,GAAA+G,GAAA,EAAAC,EAAAhH,EAAA,YAAA8G,GAAA,MAAAI,EAAAjH,QAAAiH,EAAAjH,SAAA,WAAA8G,EAAA,MAAAC,GAmDjBxM,KAAKkB,MADU,yBAAbyE,EACF,GAAAL,OAAgB1D,EAAME,KAAtB,oBAAAwD,OAA6CC,EAAUG,GAAvD,sCAAAJ,OAAiGC,EAAUG,EAAK7B,QAAQd,EAAY,MAApI,OAEA,GAAAuC,OAAgB1D,EAAME,KAAtB,oBAAAwD,OAA6CC,EAAUG,GAAvD,OAGF1F,KAAK0G,4DAIM9E,EAAO8D,EAAMtB,GACxB,IAAI+D,EAA4B,GADQyD,GAAA,EAAAC,GAAA,EAAAC,OAAArH,EAAA,IAGxC,QAAAsH,EAAAC,EAA4B5H,EAA5BS,OAAAC,cAAA8G,GAAAG,EAAAC,EAAAjH,QAAAC,MAAA4G,GAAA,EAA4C,KAAjCvG,EAAiC0G,EAAA7G,MAC1CiD,GAAyB,GAAA7C,OAAOD,EAAP,OAJa,MAAAG,IAAAqG,GAAA,EAAAC,EAAAtG,GAAA,YAAAoG,GAAA,MAAAI,EAAAvG,QAAAuG,EAAAvG,SAAA,WAAAoG,EAAA,MAAAC,GAUxC,IAAM7I,EAAgBC,IAAGC,SACzBF,EAAcG,QAAQxB,EAAMiB,cAAgBjB,EAAMkB,gBAAkBqF,GACpElF,EAAcI,MAAMqC,GACpBzC,EAAciD,OAAO,SAAA3C,GACnB,GAA4B,WAAxBL,IAAGO,cAAcF,GACnB,MAAM,IAAI4C,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,8CAAAwD,OAA4EC,EAAUG,GAAtF,oJAMpB,IAAI2J,GAAqB,EArBe1C,GAAA,EAAAC,GAAA,EAAAC,OAAApI,EAAA,IAuBxC,QAAAqI,EAAAC,EAAwB/M,KAAK2B,OAA7BkD,OAAAC,cAAA6H,GAAAG,EAAAC,EAAAhI,QAAAC,MAAA2H,GAAA,EAAqC,KAA1BrF,EAA0BwF,EAAA5H,MAC/BoK,GAAoB,EADWlB,GAAA,EAAAC,GAAA,EAAAC,OAAA7J,EAAA,IAGnC,QAAA8J,EAAAC,EAA4BpK,EAA5BS,OAAAC,cAAAsJ,GAAAG,EAAAC,EAAAzJ,QAAAC,MAAAoJ,GAAA,EAA4C,KAAjC/I,EAAiCkJ,EAAArJ,MACtCoC,IAAc1F,GAAU0F,EAAUxE,gBAAgBY,SAAS2B,KAC7DiK,GAAoB,IALW,MAAA9J,IAAA6I,GAAA,EAAAC,EAAA9I,GAAA,YAAA4I,GAAA,MAAAI,EAAA/I,QAAA+I,EAAA/I,SAAA,WAAA4I,EAAA,MAAAC,GAS/BhH,IAAc1F,IAA+B,IAAtB0N,IACzBD,GAAqB,IAjCe,MAAA7J,IAAAoH,GAAA,EAAAC,EAAArH,GAAA,YAAAmH,GAAA,MAAAI,EAAAtH,QAAAsH,EAAAtH,SAAA,WAAAmH,EAAA,MAAAC,GAqCxC,IAA2B,IAAvBwC,EACF,MAAM,IAAIlJ,MAAM,qBAAAb,OAAqB1D,EAAME,KAA3B,8CAAAwD,OAA4EC,EAAUG,GAAtF,kGAtCsB,IAAAsH,GAAA,EAAAC,GAAA,EAAAC,OAAAzI,EAAA,IA4CxC,QAAA0I,EAAAC,EAA4BhJ,EAA5BS,OAAAC,cAAAkI,GAAAG,EAAAC,EAAArI,QAAAC,MAAAgI,GAAA,EAA4C,KAAjC3H,EAAiC8H,EAAAjI,MAC1ClF,KAAKoP,8BAA8B/J,IA7CG,MAAAG,IAAAyH,GAAA,EAAAC,EAAA1H,GAAA,YAAAwH,GAAA,MAAAI,EAAA3H,QAAA2H,EAAA3H,SAAA,WAAAwH,EAAA,MAAAC,GAAA,IAAAG,GAAA,EAAAC,GAAA,EAAAC,OAAA9I,EAAA,IAmDxC,QAAA+I,EAAAC,EAA4BrJ,EAA5BS,OAAAC,cAAAuI,GAAAG,EAAAC,EAAA1I,QAAAC,MAAAqI,GAAA,EAA4C,KAAjChI,EAAiCmI,EAAAtI,MACrCtD,EAAMkB,gBAAgBY,SAAS2B,KAClCzD,EAAMkB,iBAAN,GAAAwC,OAA4BD,EAA5B,QArDoC,MAAAG,IAAA8H,GAAA,EAAAC,EAAA/H,GAAA,YAAA6H,GAAA,MAAAI,EAAAhI,QAAAgI,EAAAhI,SAAA,WAAA6H,EAAA,MAAAC,GAAA,IAAAQ,GAAA,EAAAC,GAAA,EAAAC,OAAAxJ,EAAA,IA0DxC,QAAAyJ,EAAAC,EAA4B/J,EAA5BS,OAAAC,cAAAiJ,GAAAG,EAAAC,EAAApJ,QAAAC,MAAA+I,GAAA,EAA4C,KAAjC1I,EAAiC6I,EAAAhJ,MAAAwI,GAAA,EAAAC,GAAA,EAAAC,OAAAnJ,EAAA,IAC1C,QAAAoJ,EAAAC,GAAoBlM,EAAMiB,cAAgBjB,EAAMkB,iBAAiB3B,MAAM,MAAvE0D,OAAAC,cAAA4I,GAAAG,EAAAC,EAAA/I,QAAAC,MAAA0I,GAAA,EAA8E,KAAnEtD,EAAmEyD,EAAA3I,MACxE,IAAIqF,OAAO,IAAMlF,EAAcvB,MAAM,oBAAoB,GAAK,sBAAwBuB,EAAcvB,MAAM,oBAAoB,GAAK,KAAKuG,KAAKD,KAC1IxI,EAAMkB,gBAAgBY,SAAS0G,KAClCxI,EAAMkB,iBAAN,GAAAwC,OAA4B8E,EAA5B,SAJoC,MAAA5E,IAAAmI,GAAA,EAAAC,EAAApI,GAAA,YAAAkI,GAAA,MAAAI,EAAArI,QAAAqI,EAAArI,SAAA,WAAAkI,EAAA,MAAAC,KA1DJ,MAAApI,IAAAwI,GAAA,EAAAC,EAAAzI,GAAA,YAAAuI,GAAA,MAAAI,EAAA1I,QAAA0I,EAAA1I,SAAA,WAAAuI,EAAA,MAAAC,GAoExCjO,KAAKkB,MAAL,GAAAoE,OAAgB1D,EAAME,KAAtB,YAAAwD,OAAqCnB,EAAOC,GAA5C,iBAAAkB,OAA2EpB,EAAWwB,EAAK5B,MAAM,mBAAmB,IAApH,+BAIA,IAFA,IAAMyL,EAA+B,GAE5BjF,GAAI,EAAGA,GAAIlG,EAAepD,OAAQsJ,KACzCiF,EAA6B/L,KAAKY,EAAekG,IAAGzG,QAAQO,EAAekG,IAAGxG,MAAM,mBAAmB,GAAI,MAG7G9D,KAAKkB,MAAL,sCAAAoE,OAAmDnB,EAAOoL,GAA1D,OACAvP,KAAK0G,8BArX0BZ,GCiCpB0J,EAvCW,8pDCkJXC,aA1Ib,SAAAA,EAAYC,EAAYC,EAAiBC,EAAoBC,GAAW/P,OAAAC,EAAA,EAAAD,CAAAE,KAAAyP,GACtEzP,KAAK0P,WAAaA,EAClB1P,KAAK2P,gBAAkBA,EACvB3P,KAAK4P,mBAAqBA,EAC1B5P,KAAK6P,SAAWA,EAChB7P,KAAKwP,qBAAuBA,EACzB3L,QAAQ,iBAAkBF,EAASgM,EAAgB,KACnD9L,QAAQ,iBAAkBF,EAASgM,EAAgB,KACnD9L,QAAQ,mBAAoBF,EAASgM,EAAgB,KACrD9L,QAAQ,cAAeF,EAASiM,EAAmB,KACnD/L,QAAQ,cAAeF,EAASiM,EAAmB,KACnD/L,QAAQ,gBAAiBF,EAASiM,EAAmB,KACrD/L,QAAQ,YAAaF,EAASkM,IAEjC7P,KAAK8P,mBAAqB9P,KAAK+P,6BAC/B/P,KAAKgQ,qBAAuBhQ,KAAKiQ,wGAIjC,IAAIC,EAAmB,GAAIC,EAAmB,GAAIC,EAAqB,GAD5C9L,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAG3B,QAAAC,EAAAC,EAA4B3E,KAAKwP,qBAAqBrO,MAAM,MAAMyD,UAAlEC,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAA6E,KAAAW,EAAAP,EAAAQ,MAAAC,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAmF,EAAA,GAAjElB,EAAiEoB,EAAA,GAA1DiF,EAA0DjF,EAAA,GACvE,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAIzB,SAASK,KACvCmM,GAAgB,GAAA5K,OAAO8E,EAAP,OAGd,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAI1G,SAASK,KACxDoM,GAAgB,GAAA7K,OAAO8E,EAAP,OAGd,CAAC,EAAG,GAAI,EAAG,GAAI,GAAI,IAAI1G,SAASK,KAClCqM,GAAkB,GAAA9K,OAAO8E,EAAP,QAbK,MAAA5E,GAAAjB,GAAA,EAAAC,EAAAgB,EAAA,YAAAlB,GAAA,MAAAK,EAAAc,QAAAd,EAAAc,SAAA,WAAAlB,EAAA,MAAAC,GAiB3B,IAAMsL,EAAqB,IAAI/F,EAAmB,CAChD,IAAIpH,EAAM3C,KAAK0P,WAAW,GAAI/L,EAAS3D,KAAK2P,gBAAgB,IAAKO,GACjE,IAAIvN,EAAM3C,KAAK0P,WAAW,GAAI/L,EAAS3D,KAAK2P,gBAAgB,IAAKQ,GACjE,IAAIxN,EAAM3C,KAAK0P,WAAW,GAAI/L,EAAS3D,KAAK2P,gBAAgB,IAAKS,IAChE,GA6BH,GA3BAN,EAAmBO,MAAMP,EAAmBnO,OAAO,GAAnD,wBAAA2D,OAA+E3B,EAAS3D,KAAK2P,gBAAgB,IAA7G,OACAG,EAAmBO,MAAMP,EAAmBnO,OAAO,GAAnD,WAAA2D,OAAkE3B,EAAS3D,KAAK2P,gBAAgB,IAAhG,KAAArK,OAAuG3B,EAAS3D,KAAK4P,mBAAmB,IAAxI,OACAE,EAAmBQ,aAAaR,EAAmBnO,OAAO,GAA1D,YAAA2D,OAA0E3B,EAAS3D,KAAK2P,gBAAgB,IAAxG,YACAG,EAAmBO,MAAMP,EAAmBnO,OAAO,GAAnD,WAAA2D,OAAkE3B,EAAS3D,KAAK2P,gBAAgB,IAAhG,YACAG,EAAmBO,MAAMP,EAAmBnO,OAAO,GAAnD,eAAA2D,OAAsE3B,EAAS3D,KAAK2P,gBAAgB,IAApG,gBACAG,EAAmBS,SAAST,EAAmBnO,OAAO,GAAtD,WAAA2D,OAAqE3B,EAAS3D,KAAK2P,gBAAgB,IAAnG,YACAG,EAAmBU,QAAQV,EAAmBnO,OAAO,GAArD,eAAA2D,OAAwE3B,EAAS3D,KAAK2P,gBAAgB,IAAtG,gBACAG,EAAmBQ,aAAaR,EAAmBnO,OAAO,GAA1D,WAAA2D,OAAyE3B,EAAS3D,KAAK2P,gBAAgB,IAAvG,YACAG,EAAmBO,MAAMP,EAAmBnO,OAAO,GAAnD,WAAA2D,OAAkE3B,EAAS3D,KAAK2P,gBAAgB,IAAhG,YACAG,EAAmBO,MAAMP,EAAmBnO,OAAO,GAAnD,WAAA2D,OAAkE3B,EAAS3D,KAAK2P,gBAAgB,IAAhG,OACAG,EAAmBO,MAAMP,EAAmBnO,OAAO,GAAnD,WAAA2D,OAAkE3B,EAAS3D,KAAK2P,gBAAgB,IAAhG,OACAG,EAAmBO,MAAMP,EAAmBnO,OAAO,GAAnD,SAAA2D,OAAgE3B,EAAS3D,KAAK2P,gBAAgB,IAA9F,UACAG,EAAmBQ,aAAaR,EAAmBnO,OAAO,GAA1D,SAAA2D,OAAuE3B,EAAS3D,KAAK2P,gBAAgB,IAArG,UACAG,EAAmBQ,aAAaR,EAAmBnO,OAAO,GAA1D,YAAA2D,OAA0E3B,EAAS3D,KAAK2P,gBAAgB,IAAxG,YACAG,EAAmBU,QAAQV,EAAmBnO,OAAO,GAArD,YAAA2D,OAAqE3B,EAAS3D,KAAK2P,gBAAgB,IAAnG,YACAG,EAAmBQ,aAAaR,EAAmBnO,OAAO,GAA1D,eAAA2D,OAA6E3B,EAAS3D,KAAK2P,gBAAgB,IAA3G,KAAArK,OAAkH3B,EAAS3D,KAAK2P,gBAAgB,IAAhJ,QACAG,EAAmBU,QAAQV,EAAmBnO,OAAO,GAArD,wBAAA2D,OAAiF3B,EAAS3D,KAAK2P,gBAAgB,IAA/G,OACAG,EAAmBU,QAAQV,EAAmBnO,OAAO,GAArD,wBAAA2D,OAAiF3B,EAAS3D,KAAK2P,gBAAgB,IAA/G,OAEAG,EAAmB5O,KAAO4O,EAAmB5O,KAC1C2C,QAAQ,IAAI0G,OAAOrG,EAAWP,EAAS3D,KAAK2P,gBAAgB,KAAM,MAAO3P,KAAK2P,gBAAgB,IAC9F9L,QAAQ,IAAI0G,OAAOrG,EAAWP,EAAS3D,KAAK2P,gBAAgB,KAAM,MAAO3P,KAAK2P,gBAAgB,IAC9F9L,QAAQ,IAAI0G,OAAOrG,EAAWP,EAAS3D,KAAK2P,gBAAgB,KAAM,MAAO3P,KAAK2P,gBAAgB,IAC9F9L,QAAQ,IAAI0G,OAAOvK,KAAK4P,mBAAmB,GAAI,MAAO5P,KAAK4P,mBAAmB,IAC9E/L,QAAQ,IAAI0G,OAAOvK,KAAK4P,mBAAmB,GAAI,MAAO5P,KAAK4P,mBAAmB,IAC9E/L,QAAQ,IAAI0G,OAAOvK,KAAK4P,mBAAmB,GAAI,MAAO5P,KAAK4P,mBAAmB,IAE7EE,EAAmBW,SACrB,OAAOX,EAEP,MAAM,IAAI3J,MAAM,4GAKlB,IAAI+J,EAAmB,GAAIC,EAAmB,GAAIC,EAAqB,GAD1ChK,GAAA,EAAAC,GAAA,EAAAC,OAAA7B,EAAA,IAG7B,QAAA8B,EAAAC,EAA4BxG,KAAKwP,qBAAqBrO,MAAM,MAAMyD,UAAlEC,OAAAC,cAAAsB,GAAAG,EAAAC,EAAAzB,QAAAC,MAAAoB,GAAA,EAA6E,KAAAsK,EAAAnK,EAAArB,MAAAyL,EAAA7Q,OAAAsF,EAAA,EAAAtF,CAAA4Q,EAAA,GAAjE3M,EAAiE4M,EAAA,GAA1DvG,EAA0DuG,EAAA,GACvE,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,IAAIjN,SAASK,KACtDmM,GAAgB,GAAA5K,OAAO8E,EAAP,OAGd,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAAI1G,SAASK,KACnEoM,GAAgB,GAAA7K,OAAO8E,EAAP,OAGd,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,IAAI1G,SAASK,KACpDqM,GAAkB,GAAA9K,OAAO8E,EAAP,QAbO,MAAA5E,GAAAa,GAAA,EAAAC,EAAAd,EAAA,YAAAY,GAAA,MAAAI,EAAAf,QAAAe,EAAAf,SAAA,WAAAY,EAAA,MAAAC,GAiB7B,IAAM0J,EAAuB,IAAIlB,EAAqB,CACpD,IAAInM,EAAM3C,KAAK0P,WAAW,GAAI/L,EAAS3D,KAAK2P,gBAAgB,IAAKO,GACjE,IAAIvN,EAAM3C,KAAK0P,WAAW,GAAI/L,EAAS3D,KAAK2P,gBAAgB,IAAKQ,GACjE,IAAIxN,EAAM3C,KAAK0P,WAAW,GAAI/L,EAAS3D,KAAK2P,gBAAgB,IAAKS,KAmCnE,GAhCAJ,EAAqBK,MAAML,EAAqBrO,OAAO,GAAvD,WAAA2D,OAAsE3B,EAAS3D,KAAK2P,gBAAgB,IAApG,KAAArK,OAA2G3B,EAAS3D,KAAK4P,mBAAmB,IAA5I,OACAI,EAAqBM,aAAaN,EAAqBrO,OAAO,GAA9D,YAAA2D,OAA8E3B,EAAS3D,KAAK2P,gBAAgB,IAA5G,YACAK,EAAqBK,MAAML,EAAqBrO,OAAO,GAAvD,YAAA2D,OAAuE3B,EAAS3D,KAAK2P,gBAAgB,IAArG,WACAK,EAAqBK,MAAML,EAAqBrO,OAAO,GAAvD,YAAA2D,OAAuE3B,EAAS3D,KAAK2P,gBAAgB,IAArG,WACAK,EAAqBK,MAAML,EAAqBrO,OAAO,GAAvD,WAAA2D,OAAsE3B,EAAS3D,KAAK2P,gBAAgB,IAApG,YACAK,EAAqBM,aAAaN,EAAqBrO,OAAO,GAA9D,SAAA2D,OAA2E3B,EAAS3D,KAAK2P,gBAAgB,IAAzG,UACAK,EAAqBK,MAAML,EAAqBrO,OAAO,GAAvD,SAAA2D,OAAoE3B,EAAS3D,KAAK2P,gBAAgB,IAAlG,SACAK,EAAqBM,aAAaN,EAAqBrO,OAAO,GAA9D,OAAA2D,OAAyE3B,EAAS3D,KAAK6P,UAAvF,KAAAvK,OAAoG3B,EAAS3D,KAAK2P,gBAAgB,IAAlI,QACAK,EAAqBK,MAAML,EAAqBrO,OAAO,GAAvD,GAAA2D,OAA8D3B,EAAS3D,KAAK6P,UAA5E,KAAAvK,OAAyF3B,EAAS3D,KAAK2P,gBAAgB,IAAvH,OACAK,EAAqBM,aAAaN,EAAqBrO,OAAO,GAA9D,kBAAA2D,OAAoF3B,EAAS3D,KAAK2P,gBAAgB,IAAlH,QACAK,EAAqBK,MAAML,EAAqBrO,OAAO,GAAvD,cAAA2D,OAAyE3B,EAAS3D,KAAK2P,gBAAgB,IAAvG,OACAK,EAAqBK,MAAML,EAAqBrO,OAAO,GAAvD,cAAA2D,OAAyE3B,EAAS3D,KAAK2P,gBAAgB,IAAvG,OACAK,EAAqBK,MAAML,EAAqBrO,OAAO,GAAvD,WAAA2D,OAAsE3B,EAAS3D,KAAK2P,gBAAgB,IAApG,YACAK,EAAqBM,aAAaN,EAAqBrO,OAAO,GAA9D,YAAA2D,OAA8E3B,EAAS3D,KAAK2P,gBAAgB,IAA5G,YACAK,EAAqBK,MAAML,EAAqBrO,OAAO,GAAvD,WAAA2D,OAAsE3B,EAAS3D,KAAK2P,gBAAgB,IAApG,OACAK,EAAqBK,MAAML,EAAqBrO,OAAO,GAAvD,WAAA2D,OAAsE3B,EAAS3D,KAAK2P,gBAAgB,IAApG,OACAK,EAAqBY,aAAaZ,EAAqBrO,OAAO,GAA9D,wBAAA2D,OAA0F3B,EAAS3D,KAAK2P,gBAAgB,IAAxH,MAAiI,YAAArK,OAAY3B,EAAS3D,KAAK2P,gBAAgB,IAA1C,yBAAArK,OAAsE3B,EAAS3D,KAAK2P,gBAAgB,IAApG,QACjIK,EAAqBY,aAAaZ,EAAqBrO,OAAO,GAA9D,wBAAA2D,OAA0F3B,EAAS3D,KAAK2P,gBAAgB,IAAxH,MAAiI,YAAArK,OAAY3B,EAAS3D,KAAK2P,gBAAgB,IAA1C,yBAAArK,OAAsE3B,EAAS3D,KAAK2P,gBAAgB,IAApG,QACjIK,EAAqBQ,QAAQR,EAAqBrO,OAAO,GAAzD,GAAA2D,OAAgE3B,EAAS3D,KAAK6P,UAA9E,KAAAvK,OAA2F3B,EAAS3D,KAAK2P,gBAAgB,IAAzH,OACAK,EAAqBK,MAAML,EAAqBrO,OAAO,GAAvD,GAAA2D,OAA8D3B,EAAS3D,KAAK6P,UAA5E,KAAAvK,OAAyF3B,EAAS3D,KAAK2P,gBAAgB,IAAvH,OACAK,EAAqBY,aAAaZ,EAAqBrO,OAAO,GAA9D,wBAAA2D,OAA0F3B,EAAS3D,KAAK2P,gBAAgB,IAAxH,MAAiI,aAAArK,OAAa3B,EAAS3D,KAAK2P,gBAAgB,IAA3C,YACjIK,EAAqBQ,QAAQR,EAAqBrO,OAAO,GAAzD,wBAAA2D,OAAqF3B,EAAS3D,KAAK2P,gBAAgB,IAAnH,OACAK,EAAqBQ,QAAQR,EAAqBrO,OAAO,GAAzD,wBAAA2D,OAAqF3B,EAAS3D,KAAK2P,gBAAgB,IAAnH,OAEAK,EAAqB9O,KAAO8O,EAAqB9O,KAC9C2C,QAAQ,IAAI0G,OAAOrG,EAAWP,EAAS3D,KAAK2P,gBAAgB,KAAM,MAAO3P,KAAK2P,gBAAgB,IAC9F9L,QAAQ,IAAI0G,OAAOrG,EAAWP,EAAS3D,KAAK2P,gBAAgB,KAAM,MAAO3P,KAAK2P,gBAAgB,IAC9F9L,QAAQ,IAAI0G,OAAOrG,EAAWP,EAAS3D,KAAK2P,gBAAgB,KAAM,MAAO3P,KAAK2P,gBAAgB,IAC9F9L,QAAQ,IAAI0G,OAAOvK,KAAK4P,mBAAmB,GAAI,MAAO5P,KAAK4P,mBAAmB,IAC9E/L,QAAQ,IAAI0G,OAAOvK,KAAK4P,mBAAmB,GAAI,MAAO5P,KAAK4P,mBAAmB,IAC9E/L,QAAQ,IAAI0G,OAAOvK,KAAK4P,mBAAmB,GAAI,MAAO5P,KAAK4P,mBAAmB,IAE7EI,EAAqBS,SACvB,OAAOT,EAEP,MAAM,IAAI7J,MAAM,gECwQP0K,qBA5Yb,SAAAA,IAAc,IAAAhR,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6Q,IACZhR,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+Q,GAAA1Q,KAAAH,QAEKI,MAAQ,CACX0Q,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,GACjBC,0BAA0B,EAC1BC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,qBAAsB,GACtBC,sBAAuB,GACvBC,qBAAsB,GACtBC,+BAA+B,EAC/BC,gCAAgC,EAChCC,+BAA+B,EAC/BC,wBAAyB,UACzBC,yBAA0B,OAC1BC,wBAAyB,WACzB/B,SAAU,OACVgC,4BAA4B,EAC5BC,WAAY,MAGdjS,EAAKkS,SAAWlS,EAAKkS,SAASvR,KAAdV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAChBA,EAAKmS,iBAAmBnS,EAAKmS,iBAAiBxR,KAAtBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KACxBA,EAAKoS,kBAAoBpS,EAAKoS,kBAAkBzR,KAAvBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KACzBA,EAAKqS,WAAarS,EAAKqS,WAAW1R,KAAhBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KA3BNA,wEA8BLsS,GACPnS,KAAKY,SAALd,OAAAsS,EAAA,EAAAtS,CAAA,GACGqS,EAAME,OAAOC,GAAKH,EAAME,OAAOnN,mDAYlC,MAP+B,KAA/BlF,KAAKI,MAAM0Q,gBAAyB9Q,KAAKY,SAAS,CAAEqQ,0BAA0B,IAAUjR,KAAKY,SAAS,CAAEqQ,0BAA0B,IAClG,KAAhCjR,KAAKI,MAAM2Q,iBAA0B/Q,KAAKY,SAAS,CAAEsQ,2BAA2B,IAAUlR,KAAKY,SAAS,CAAEsQ,2BAA2B,IACtG,KAA/BlR,KAAKI,MAAM4Q,gBAAyBhR,KAAKY,SAAS,CAAEuQ,0BAA0B,IAAUnR,KAAKY,SAAS,CAAEuQ,0BAA0B,IAC9F,KAApCnR,KAAKI,MAAMgR,qBAA8BpR,KAAKY,SAAS,CAAE2Q,+BAA+B,IAAUvR,KAAKY,SAAS,CAAE2Q,+BAA+B,IAC5G,KAArCvR,KAAKI,MAAMiR,sBAA+BrR,KAAKY,SAAS,CAAE4Q,gCAAgC,IAAUxR,KAAKY,SAAS,CAAE4Q,gCAAgC,IAChH,KAApCxR,KAAKI,MAAMkR,qBAA8BtR,KAAKY,SAAS,CAAE6Q,+BAA+B,IAAUzR,KAAKY,SAAS,CAAE6Q,+BAA+B,IAE9G,KAA/BzR,KAAKI,MAAM0Q,iBAA0D,KAAhC9Q,KAAKI,MAAM2Q,kBAA0D,KAA/B/Q,KAAKI,MAAM4Q,iBACjD,KAApChR,KAAKI,MAAMgR,sBAAoE,KAArCpR,KAAKI,MAAMiR,uBAAoE,KAApCrR,KAAKI,MAAMkR,uBAEnGtR,KAAKY,SAAS,CACZiR,4BAA4B,KAGvB,+CAOL7R,KAAKgS,oBACPhS,KAAKY,SAAS,CACZkR,WAAY,IAAIrC,EACd,CAACzP,KAAKI,MAAM0Q,gBAAiB9Q,KAAKI,MAAM2Q,iBAAkB/Q,KAAKI,MAAM4Q,iBACrE,CAAChR,KAAKI,MAAMgR,qBAAsBpR,KAAKI,MAAMiR,sBAAuBrR,KAAKI,MAAMkR,sBAC/E,CAACtR,KAAKI,MAAMsR,wBAAyB1R,KAAKI,MAAMuR,yBAA0B3R,KAAKI,MAAMwR,yBACrF5R,KAAKI,MAAMyP,iDAOjB7P,KAAKY,SAAS,CACZkQ,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,GACjBC,0BAA0B,EAC1BC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,qBAAsB,GACtBC,sBAAuB,GACvBC,qBAAsB,GACtBC,+BAA+B,EAC/BC,gCAAgC,EAChCC,+BAA+B,EAC/BC,wBAAyB,UACzBC,yBAA0B,OAC1BC,wBAAyB,WACzB/B,SAAU,OACVgC,4BAA4B,EAC5BC,WAAY,wCAIP,IAAA7Q,EAAAjB,KACP,OACEd,EAAAC,EAAAC,cAAA,YACIY,KAAKI,MAAM0R,YACX5S,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,eAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,qLAMJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,mBAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,8EAKJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACmT,EAAA,EAAD,CACED,GAAG,kBACHE,UAAU,qBACVC,QAASzS,KAAKI,MAAM6Q,yBACpByB,YAAY,8BACZX,SAAU/R,KAAK+R,cAKvB7S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACmT,EAAA,EAAD,CACED,GAAG,mBACHE,UAAU,sBACVC,QAASzS,KAAKI,MAAM8Q,0BACpBwB,YAAY,8BACZX,SAAU/R,KAAK+R,cAKvB7S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACmT,EAAA,EAAD,CACED,GAAG,kBACHE,UAAU,qBACVC,QAASzS,KAAKI,MAAM+Q,yBACpBuB,YAAY,8BACZX,SAAU/R,KAAK+R,cAKvB7S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,wBAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,+EAKJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACmT,EAAA,EAAD,CACED,GAAG,uBACHE,UAAU,0BACVC,QAASzS,KAAKI,MAAMmR,8BACpBmB,YAAY,8BACZX,SAAU/R,KAAK+R,cAKvB7S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACmT,EAAA,EAAD,CACED,GAAG,wBACHE,UAAU,2BACVC,QAASzS,KAAKI,MAAMoR,+BACpBkB,YAAY,8BACZX,SAAU/R,KAAK+R,cAKvB7S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACmT,EAAA,EAAD,CACED,GAAG,uBACHE,UAAU,0BACVC,QAASzS,KAAKI,MAAMqR,8BACpBiB,YAAY,8BACZX,SAAU/R,KAAK+R,cAKvB7S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,2BAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,4CAKJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAACuT,EAAA,EAAD,CAAWC,WAAW,8BACpB1T,EAAAC,EAAAC,cAACyT,EAAA,EAAD,CACE/Q,KAAK,+CACLgR,cAAc,UACdf,SAAU,SAACI,GAAD,OAAWlR,EAAKL,SAAS,CAAE8Q,wBAAyBS,MAE9DjT,EAAAC,EAAAC,cAAC2T,EAAA,EAAD,CAAa7N,MAAM,UAAUsN,UAAU,YACvCtT,EAAAC,EAAAC,cAAC2T,EAAA,EAAD,CAAa7N,MAAM,QAAQsN,UAAU,UACrCtT,EAAAC,EAAAC,cAAC2T,EAAA,EAAD,CAAa7N,MAAM,UAAUsN,UAAU,gBAK/CtT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAACuT,EAAA,EAAD,CAAWC,WAAW,+BACpB1T,EAAAC,EAAAC,cAACyT,EAAA,EAAD,CACE/Q,KAAK,gDACLgR,cAAc,OACdf,SAAU,SAACI,GAAD,OAAWlR,EAAKL,SAAS,CAAE+Q,yBAA0BQ,MAE/DjT,EAAAC,EAAAC,cAAC2T,EAAA,EAAD,CAAa7N,MAAM,OAAOsN,UAAU,SACpCtT,EAAAC,EAAAC,cAAC2T,EAAA,EAAD,CAAa7N,MAAM,SAASsN,UAAU,WACtCtT,EAAAC,EAAAC,cAAC2T,EAAA,EAAD,CAAa7N,MAAM,WAAWsN,UAAU,iBAKhDtT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAACuT,EAAA,EAAD,CAAWC,WAAW,8BACpB1T,EAAAC,EAAAC,cAACyT,EAAA,EAAD,CACE/Q,KAAK,+CACLgR,cAAc,WACdf,SAAU,SAACI,GAAD,OAAWlR,EAAKL,SAAS,CAAEgR,wBAAyBO,MAE9DjT,EAAAC,EAAAC,cAAC2T,EAAA,EAAD,CAAa7N,MAAM,WAAWsN,UAAU,aACxCtT,EAAAC,EAAAC,cAAC2T,EAAA,EAAD,CAAa7N,MAAM,YAAYsN,UAAU,cACzCtT,EAAAC,EAAAC,cAAC2T,EAAA,EAAD,CAAa7N,MAAM,UAAUsN,UAAU,gBAK/CtT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,cAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,6DAKJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAACuT,EAAA,EAAD,CAAWC,WAAW,YACpB1T,EAAAC,EAAAC,cAACyT,EAAA,EAAD,CACE/Q,KAAK,8BACLgR,cAAc,OACdf,SAAU,SAACI,GAAD,OAAWlR,EAAKL,SAAS,CAAEiP,SAAUsC,MAE/CjT,EAAAC,EAAAC,cAAC2T,EAAA,EAAD,CAAa7N,MAAM,OAAOsN,UAAU,SACpCtT,EAAAC,EAAAC,cAAC2T,EAAA,EAAD,CAAa7N,MAAM,YAAYsN,UAAU,cACzCtT,EAAAC,EAAAC,cAAC2T,EAAA,EAAD,CAAa7N,MAAM,YAAYsN,UAAU,kBAKjDtT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,cAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,4DAEGW,KAAKI,MAAMyR,4BACV3S,EAAAC,EAAAC,cAAC4T,EAAA,EAAD,CACEC,iBAAiB,EACjBzQ,KAAK,QACLf,MAAM,gBACNyR,SAAS,oEAMnBhU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAQI,QAAS1C,KAAKiS,mBAAtB,eAOPjS,KAAKI,MAAM0R,YACV5S,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,aAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,4LAKAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,sDACsDW,KAAKI,MAAM0R,WAAWpC,WAAW,GADvF,eAEiB1P,KAAKI,MAAM0R,WAAWnC,gBAAgB,GAFvD,gMAMAzQ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,sBACsBW,KAAKI,MAAM0R,WAAWpC,WAAW,GADvD,sPAQJxQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACbH,EAAAC,EAAAC,cAAC+T,EAAD,CAAmBrS,SAAUd,KAAKI,MAAM0R,WAAWhC,mBAAoB5N,aAAa,gBAEtFhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAC+T,EAAD,CAAmBrS,SAAUd,KAAKI,MAAM0R,WAAW9B,qBAAsB9N,aAAa,mBAG1FhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,WAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,mEAKJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAQE,KAAK,SAASE,QAAS1C,KAAKkS,YAApC,oBAjYOvS,sBC+KRyT,0LAhLX,OACElU,EAAAC,EAAAC,cAACgD,EAAA,EAAD,KACElD,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEE,MAAOvC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,sBAAL,kDACLF,EAAAC,EAAAC,cAACiU,EAAA,EAAD,CAASC,YAAY,QACnBpU,EAAAC,EAAAC,cAAA,6IAIJF,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KACExC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,aAApB,2BAEEH,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAeK,QAAM,EAAC1C,UAAU,yBAC9BH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,wCAEEH,EAAAC,EAAAC,cAACiU,EAAA,EAAD,CAASC,YAAY,QACnBpU,EAAAC,EAAAC,cAAA,iGAKRF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,aAApB,4BAEEH,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAeK,QAAM,EAAC1C,UAAU,6BAKtCH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEE,MAAOvC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,uBAAL,sCACLF,EAAAC,EAAAC,cAACiU,EAAA,EAAD,CAASC,YAAY,QACnBpU,EAAAC,EAAAC,cAAA,8FAIJF,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KACExC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,aAApB,2BAEEH,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAeK,QAAM,EAAC1C,UAAU,yBAC9BH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,2CAKJH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,aAApB,4BAEEH,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAeK,QAAM,EAAC1C,UAAU,yBAC9BH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,4BAORH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEE,MAAOvC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,sBAAL,qDACLF,EAAAC,EAAAC,cAACiU,EAAA,EAAD,CAASC,YAAY,QACnBpU,EAAAC,EAAAC,cAAA,0FAIJF,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KACExC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,aAApB,2BAEEH,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAeK,QAAM,EAAC1C,UAAU,yBAC9BH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,2CAKJH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,aAApB,4BAEEH,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAeK,QAAM,EAAC1C,UAAU,yBAC9BH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,4BAORH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEE,MAAOvC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,uBAAL,gFACLF,EAAAC,EAAAC,cAACiU,EAAA,EAAD,CAASC,YAAY,QACnBpU,EAAAC,EAAAC,cAAA,0HAIJF,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KACExC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,aAApB,2BAEEH,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAeK,QAAM,EAAC1C,UAAU,yBAC9BH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,yCAGAH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,8BAGAH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,mCAGAH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,+BAKJH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,aAApB,4BAEEH,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAeK,QAAM,EAAC1C,UAAU,yBAC9BH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,wBAGAH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,8BAGAH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,mCAGAH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,iCAORH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEE,MAAOvC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,sBAAL,oDACLF,EAAAC,EAAAC,cAACiU,EAAA,EAAD,CAASC,YAAY,QACnBpU,EAAAC,EAAAC,cAAA,qFAIJF,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KACExC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,aAApB,2BAEEH,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAeK,QAAM,EAAC1C,UAAU,yBAC9BH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,yCAGAH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,8BAGAH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,mCAGAH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,6BAGAH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,0BAKJH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,aAApB,4BAEEH,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAeK,QAAM,EAAC1C,UAAU,yBAC9BH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,wBAGAH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,8BAGAH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,mCAGAH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUL,UAAU,oBAApB,yCAtKWM,cCsDZ4T,0LAnDX,OACErU,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,aAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,4UAMAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,gIAIAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,+DAKJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,mBAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,mPAQJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAACoU,EAAD,gBA7CO7T,cC+EJ8T,qBA3Eb,SAAAA,IAAc,IAAA5T,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyT,IACZ5T,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2T,GAAAtT,KAAAH,QAEKI,MAAQ,CACXsT,YAAa,GAGf7T,EAAKkS,SAAWlS,EAAKkS,SAASvR,KAAdV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAPJA,wEAULsS,GACPnS,KAAKY,SAAS,CACZ8S,YAAavB,EAAMpO,yCAKrB,OACE7E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,8CACAH,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAQC,OAAK,EAAClD,UAAU,eAAemD,KAAK,WAAWE,QAAS,kBAAMiR,OAAOC,KAAK,iDAAkD,UAAUC,UAA9I,iBAIF3U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,yBAKRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAC0U,EAAA,EAAD,CAAiBzU,UAAU,mBAAmB0S,SAAU/R,KAAK+R,UAC3D7S,EAAAC,EAAAC,cAAC2U,EAAA,EAAD,CAAQjS,KAAK,OAAOZ,KAAK,SACzBhC,EAAAC,EAAAC,cAAC2U,EAAA,EAAD,CAAQjS,KAAK,aAAaZ,KAAK,eAC/BhC,EAAAC,EAAAC,cAAC2U,EAAA,EAAD,CAAQjS,KAAK,WAAWZ,KAAK,gBAInChC,EAAAC,EAAAC,cAAA,OAAK4U,OAAmC,IAA3BhU,KAAKI,MAAMsT,aACtBxU,EAAAC,EAAAC,cAAC6U,EAAD,OAEF/U,EAAAC,EAAAC,cAAA,OAAK4U,OAAmC,IAA3BhU,KAAKI,MAAMsT,aACtBxU,EAAAC,EAAAC,cAAC8U,EAAD,OAEFhV,EAAAC,EAAAC,cAAA,OAAK4U,OAAmC,IAA3BhU,KAAKI,MAAMsT,aACtBxU,EAAAC,EAAAC,cAAC+U,EAAD,QAGJjV,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8CAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,qCACAH,EAAAC,EAAAC,cAACgV,EAAA,EAAD,CAAMC,KAAK,mCAAX,uBAEFnV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,wCACAH,EAAAC,EAAAC,cAACgV,EAAA,EAAD,CAAMC,KAAK,sCAAX,yBAEFnV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,yBACAH,EAAAC,EAAAC,cAACgV,EAAA,EAAD,CAAMC,KAAK,yBAAX,yBAnEI1U,cCGE2U,QACW,cAA7BX,OAAOY,SAASC,UAEe,UAA7Bb,OAAOY,SAASC,UAEhBb,OAAOY,SAASC,SAAS1Q,MACvB,iECVN2Q,IAASC,OAAOxV,EAAAC,EAAAC,cAACuV,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c4550a3a.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { ListItem, OrderedList, StructuredListBody, StructuredListCell, StructuredListHead, StructuredListRow, StructuredListWrapper } from 'carbon-components-react';\n\nimport './Background.css';\n\nclass Background extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"bx--row\">\n          <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n            <div className=\"heading\"></div>\n            <h2 className=\"heading\">Purpose</h2>\n          </div>\n        </div>\n        <div className=\"bx--row\">\n          <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n            <p>\n              Diners' Discourse is a web application developed by Yanko Kirchev in 2019\n              as part of his Honours Year Computer Science Project—<em>Implementing Dialogue Protocols</em>—to\n              earn the degree of B.Sc. (Hons) Computer Science with Year in Industry\n              at the Department of Computer Science at the University of Liverpool.\n            </p>\n            <p className=\"not-first\">\n              The application implements dialogue protocols for multi-agent systems\n              based on the characterisations of persuasion and deliberation dialogues\n              established by Atkinson, Bench-Capon, and Walton [2],\n              which draw out the distinctive features of the two types.\n            </p>\n            <p className=\"not-first\">\n              Diners' Discourse uses the protocols to generate custom persuasion and deliberation dialogues,\n              which are parallel to the ones laid out in [2],\n              and verifies that the protocols exhibit the expected behaviour when they are put to practice.\n            </p>\n          </div>\n        </div>\n        <div className=\"bx--row\">\n          <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n            <div className=\"heading\"></div>\n            <h2 className=\"heading\">Implementation</h2>\n          </div>\n        </div>\n        <div className=\"bx--row\">\n          <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n            <p>\n              The application is developed using the Node.js and React.js frameworks.\n              The protocols rely heavily on the Tau Prolog module—a Prolog interpreter written entirely in JavaScript—\n              which brings the required support for knowledge representation to Diners' Discourse.\n            </p>\n            <p className=\"not-first\">\n              On the front-end's side, Carbon Design's React.js components are utilised,\n              which allowed for the efficient construction of an intuitive and responsive web interface.\n            </p>\n          </div>\n        </div>\n        <div className=\"bx--row\">\n          <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n            <div className=\"heading\"></div>\n            <h2 className=\"heading\">Glossary</h2>\n          </div>\n        </div>\n        <div className=\"bx--row\">\n          <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n            <StructuredListWrapper className=\"structured-list\">\n              <StructuredListHead>\n                <StructuredListRow head>\n                  <StructuredListCell head>Term</StructuredListCell>\n                  <StructuredListCell head>Definition</StructuredListCell>\n                </StructuredListRow>\n              </StructuredListHead>\n              <StructuredListBody>\n                <StructuredListRow>\n                  <StructuredListCell noWrap>Agent</StructuredListCell>\n                  <StructuredListCell>\n                    An autonomous computer entity that learns and uses knowledge\n                    to execute independent actions towards achieving goals [1].\n                  </StructuredListCell>\n                </StructuredListRow>\n                <StructuredListRow>\n                  <StructuredListCell>Commitment Store</StructuredListCell>\n                  <StructuredListCell>\n                    A set of statements to which an agent becomes committed\n                    in the course of a dialogue [2].\n                  </StructuredListCell>\n                </StructuredListRow>\n                <StructuredListRow>\n                  <StructuredListCell>Deliberation dialogue</StructuredListCell>\n                  <StructuredListCell>\n                    A dialogue in which deliberation arises from a dilemma\n                    about what option is collectively acceptable\n                    where each party tries to find the best available course of action\n                    for the group as a whole [3].\n                  </StructuredListCell>\n                </StructuredListRow>\n                <StructuredListRow>\n                  <StructuredListCell>Persuasion dialogue</StructuredListCell>\n                  <StructuredListCell>\n                    A dialogue in which persuasion arises from a conflict of opinions\n                    on what the best available choice of action is\n                    where one party tries to persuade the other(s)\n                    towards their preferred option [3].\n                  </StructuredListCell>\n                </StructuredListRow>\n                <StructuredListRow>\n                  <StructuredListCell noWrap>Post-conditions</StructuredListCell>\n                  <StructuredListCell>\n                    A set of conditions that state the updates on the agents’ commitment stores\n                    that occur immediately after the execution of a speech act [2].\n                  </StructuredListCell>\n                </StructuredListRow>\n                <StructuredListRow>\n                  <StructuredListCell noWrap>Pre-conditions</StructuredListCell>\n                  <StructuredListCell>\n                    A set of conditions that determine the prerequisites that need to be satisfied\n                    in terms of available knowledge and prior commitments\n                    in order for a speech act to be used legally [2].\n                  </StructuredListCell>\n                </StructuredListRow>\n                <StructuredListRow>\n                  <StructuredListCell>Protocol</StructuredListCell>\n                  <StructuredListCell>\n                    Rules by which a dialogue pans out. These can specify the allowed speech acts at any point,\n                    the effects of utterances on the participants’ commitments, the outcome of the dialogue,\n                    the turn-taking function, and the termination criteria [4].\n                  </StructuredListCell>\n                </StructuredListRow>\n                <StructuredListRow>\n                  <StructuredListCell noWrap>Speech acts</StructuredListCell>\n                  <StructuredListCell>\n                    A set of moves that agents participating in a dialogue can make in regard to statements.\n                    They comprise \"claim\", \"counterclaim\", \"why\", \"concede\", \"retract\", \"since\", \"concede-since\" and “question\".\n                  </StructuredListCell>\n                </StructuredListRow>\n              </StructuredListBody>\n            </StructuredListWrapper>\n          </div>\n        </div>\n        <div className=\"bx--row\">\n          <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n            <div className=\"heading\"></div>\n            <h2 className=\"heading\">References</h2>\n          </div>\n        </div>\n        <div className=\"bx--row\">\n          <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n            <OrderedList>\n              <ListItem className=\"list-item reference\">\n                S. Russell and P. Norvig, <em>Artificial Intelligence: A Modern Approach</em>,\n                2nd ed. Upper Saddle River, NJ: Pearson Prentice Hall, 2006.\n              </ListItem>\n              <ListItem className=\"list-item reference\">\n                K. Atkinson, T. Bench-Capon, and D. Walton,\n                “Distinctive features of persuasion and deliberation dialogues”,\n                <em>Argument and Computation</em>, vol. 4, no. 2, pp. 105-127, June 2013.\n               </ListItem>\n              <ListItem className=\"list-item reference\">\n                D. Walton and E. C. W. Krabbe,\n                <em>Commitment in Dialogue: Basic Concepts of Interpersonal Reasoning. </em>\n                Albany, NY: State University of New York Press, 1995.\n              </ListItem>\n              <ListItem className=\"list-item reference\">\n                H. Prakken, “Formal systems for persuasion dialogue”,\n                <em>The Knowledge Engineering Review</em>, vol. 21, no. 2, pp. 163–188, Aug. 2006\n              </ListItem>\n            </OrderedList>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Background;\n","import React, { Component } from \"react\";\nimport { Accordion, AccordionItem, Button, ListItem, UnorderedList } from 'carbon-components-react';\n\nimport './DialogueAccordion.css';\n\nclass DialogueAccordion extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      accordionItems: null,\n      currentSpeechActIndex: 1\n    };\n\n    this.decrementSpeechActIndex = this.decrementSpeechActIndex.bind(this);\n    this.incrementSpeechActIndex = this.incrementSpeechActIndex.bind(this);\n    this.maximiseSpeechActIndex = this.maximiseSpeechActIndex.bind(this);\n  }\n\n  decrementSpeechActIndex() {\n    this.setState({\n      currentSpeechActIndex: this.state.currentSpeechActIndex - 1\n    });\n  }\n\n  incrementSpeechActIndex() {\n    this.setState({\n      currentSpeechActIndex: this.state.currentSpeechActIndex + 1\n    });\n  }\n\n  maximiseSpeechActIndex() {\n    this.setState({\n      currentSpeechActIndex: this.props.dialogue.commitmentStoreHistory.length\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      accordionItems: this.props.dialogue.text.split('\\n').map((speechAct, speechActIndex) => speechAct !== '' && (\n        <AccordionItem key={speechActIndex} title={<div><strong>{speechAct.split(':')[0]}</strong>:{speechAct.split(':')[1]}</div>}>\n          <UnorderedList>\n            {this.props.dialogue.agents.map((agent, agentIndex) =>\n              <ListItem className=\"list-item\" key={agentIndex}>\n                {agent.name}'s commitment store:\n                <UnorderedList nested className=\"unordered-nested-list\">\n                  {this.props.dialogue.commitmentStoreHistory[speechActIndex][agentIndex].split('\\n').map((commitment, commitmentIndex) => commitment !== '' &&\n                    <ListItem className=\"nested-list-item\" key={commitmentIndex}>\n                      {commitment}\n                    </ListItem>\n                  )}\n                </UnorderedList>\n              </ListItem>\n            )}\n            {this.props.dialogueType === 'Deliberation' && (\n              <ListItem className=\"list-item\">\n                Agreed preference rule:\n                <UnorderedList nested className=\"unordered-nested-list\">\n                  <ListItem className=\"nested-list-item\">\n                    {this.props.dialogue.agreedPreferenceRuleHistory[speechActIndex]}\n                  </ListItem>\n                </UnorderedList>\n              </ListItem>\n            )}\n          </UnorderedList>\n        </AccordionItem>\n      ))\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"heading\"></div>\n        <h2 className=\"heading\">{this.props.dialogueType} Dialogue</h2>\n        <Accordion className=\"dialogue-accordion\">\n          {this.state.accordionItems && this.state.accordionItems.slice(0, this.state.currentSpeechActIndex)}\n        </Accordion>\n        <div className=\"buttons-wrapper\">\n          <Button small kind='secondary' disabled={this.state.currentSpeechActIndex === 1} onClick={this.decrementSpeechActIndex}>\n            Previous\n          </Button>\n          <Button small kind='primary' disabled={this.state.currentSpeechActIndex === this.props.dialogue.commitmentStoreHistory.length} onClick={this.incrementSpeechActIndex}>\n            Next\n          </Button>\n          <Button small className=\"tertiary\" kind='tertiary' disabled={this.state.currentSpeechActIndex === this.props.dialogue.commitmentStoreHistory.length} onClick={this.maximiseSpeechActIndex}>\n            Reveal all\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DialogueAccordion;\n","import pl from 'tau-prolog';\n\nclass Agent {\n  constructor(name, initialPreference, knowledgeBase) {\n    this.name = name;\n    this.initialPreference = initialPreference;\n    this.knowledgeBase = knowledgeBase;\n    this.commitmentStore = '';\n  }\n\n  doesPrefer(restaurant) {\n    const preferredRestaurants = [this.initialPreference];\n\n    const prologSession = pl.create();\n    prologSession.consult(this.knowledgeBase + this.commitmentStore);\n    prologSession.query('acceptableRestaurant(X).');\n    prologSession.answers(x => {\n      preferredRestaurants.push(pl.format_answer(x).split(\" \")[2]);\n    });\n\n    return preferredRestaurants.includes(restaurant);\n  }\n}\n\nexport default Agent;\n","function camelise(string) {\n  return string.replace(/[']/g, '').replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, (match, index) => {\n    if (+match === 0) {\n      return '';\n    }\n\n    return index === 0 ? match.toLowerCase() : match.toUpperCase();\n  });\n}\n\nfunction decamelise(string) {\n  return string\n    .replace(/([a-z\\d])([A-Z])/g, '$1 $2')\n    .replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1 $2')\n    .toLowerCase();\n}\n\nfunction format(justifications) {\n  let formattedText = '';\n\n  for (const [index, justification] of justifications.entries()) {\n    if (justifications.length === 1) {\n      formattedText += `${translate(justification)}`;\n    } else if (index === justifications.length - 1) {\n      formattedText += `${translate(justification)}`;\n    } else if (index !== justifications.length - 2) {\n      formattedText += `${translate(justification)}, `;\n    } else if (justifications.length >= 3 && index === justifications.length - 2) {\n      formattedText += `${translate(justification)}, and `;\n    } else if (justifications.length < 3 && index === justifications.length - 2) {\n      formattedText += `${translate(justification)} and `;\n    }\n  }\n\n  return formattedText;\n}\n\nfunction translate(term) {\n  const restaurant = term.match(/([A-Za-z0-9_])+/g)[1];\n  const property = term.match(/([A-Za-z0-9])+/g)[0];\n  const value = term.match(/([A-Za-z0-9_])+/g)[2];\n  const cost = term.match(/([A-Za-z0-9_])+/g)[3];\n\n  let translation = '';\n\n  if (restaurant !== '_') {\n    if (term.includes('\\\\+(')) {\n      translation = `${decamelise(restaurant)} lacks property ${decamelise(property)}`;\n    } else {\n      translation = `${decamelise(restaurant)} has property ${decamelise(property)}`;\n    }\n  } else {\n    translation = `property ${decamelise(property)}`;\n  }\n\n  if (value && value !== '_') {\n    translation += ` of value ${decamelise(value)}`;\n\n    if (cost && cost !== '_') {\n      translation += ` and cost ${decamelise(cost)}`;\n    }\n  } else if (cost && cost !== '_') {\n    translation += ` of cost ${decamelise(cost)}`;\n  }\n\n  return translation;\n}\n\nexport {\n  camelise,\n  decamelise,\n  format,\n  translate\n};\n","import pl from 'tau-prolog';\n\nimport { format, translate } from './utils/helper';\n\nclass Dialogue {\n  constructor(agents) {\n    if (new.target === Dialogue) {\n      throw new TypeError('Cannot construct Dialogue instances directly!');\n    }\n\n    this.agents = agents;\n    this.text = `${agents[0].name}: Where shall we eat?\\n`;\n    this.commitmentStoreHistory = [['', '', '']];\n  }\n\n  saveCommitmentStores() {\n    const newCommitmentStoresRecord = [];\n\n    for (const agent of this.agents) {\n      newCommitmentStoresRecord.push(agent.commitmentStore);\n    }\n\n    this.commitmentStoreHistory.push(newCommitmentStoresRecord);\n  }\n\n  isOver() {\n    throw new TypeError('Need to implement function isOver!');\n  }\n\n  // Claim(ag_i, l)\n  claim(agent, term) {\n    /*  PRE-CONDITIONS */\n\n    // demo(∏_ag_i ∪ Com_ag_i, l)\n    const prologSession = pl.create();\n    prologSession.consult(agent.knowledgeBase + agent.commitmentStore);\n    prologSession.query(term);\n    prologSession.answer(x => {\n      if (pl.format_answer(x) !== 'true ;') {\n        throw new Error(`Pre-conditions of ${agent.name} claiming \"${translate(term)}\" are not satisfied because ` +\n          `the agent cannot demonstrate the claim through their knowledge base and commitment store!`);\n      }\n    });\n\n    // ¬l ∈ Com_ag_j for any ag_j ∈ Ag\n    for (const anyAgent of this.agents) {\n      if (anyAgent.commitmentStore.includes(term)) {\n        throw new Error(`Pre-conditions of ${agent.name} claiming \"${translate(term)}\" are not satisfied because ` +\n          `${anyAgent.name}'s commitment store contains the claim!`);\n      }\n    }\n\n    /* POST-CONDITIONS */\n\n    // Com_ag_i ⇒ Com_ag_i ∪ l\n    agent.commitmentStore += `${term}\\n`;\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    this.text += `${agent.name}: ${translate(term)}.\\n`;\n    this.saveCommitmentStores();\n  }\n\n  // Counterclaim(ag_i, l)\n  counterclaim(agent, term) {\n    /*  PRE-CONDITIONS */\n\n    // demo(∏_ag_i ∪ Com_ag_i, l)\n    const prologSession = pl.create();\n    prologSession.consult(agent.knowledgeBase + agent.commitmentStore);\n    prologSession.query(term);\n    prologSession.answer(x => {\n      if (pl.format_answer(x) !== 'true ;') {\n        throw new Error(`Pre-conditions of ${agent.name} counterclaiming \"${translate(term)}\" are not satisfied because ` +\n          `the agent cannot demonstrate the claim through their knowledge base and commitment store!`);\n      }\n    });\n\n    // ¬l ∈ Com_ag_j for any ag_j ∈ Ag\n    for (const anyAgent of this.agents) {\n      if (anyAgent.commitmentStore.includes(term)) {\n        throw new Error(`Pre-conditions of ${agent.name} counterclaiming \"${translate(term)}\" are not satisfied because ` +\n          `${anyAgent.name}'s commitment store contains the claim!`);\n      }\n    }\n\n    /* POST-CONDITIONS */\n\n    // Com_ag_i ⇒ Com_ag_i ∪ l\n    agent.commitmentStore += `${term}\\n`;\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    this.text += `${agent.name}: But ${translate(term)}.\\n`;\n    this.saveCommitmentStores();\n  }\n\n  // Why(ag_i, l)\n  why(agent, term) {\n    /*  PRE-CONDITIONS */\n\n    // not demo(∏_ag_i ∪ Com_ag_i, l)\n    const prologSession = pl.create();\n    prologSession.consult(agent.knowledgeBase + agent.commitmentStore);\n    prologSession.query(term);\n    prologSession.answer(x => {\n      if (pl.format_answer(x) === 'true ;') {\n        throw new Error(`Pre-conditions of ${agent.name} asking why \"${translate(term)}\" are not satisfied because ` +\n          `the agent can demonstrate the claim through their knowledge base and commitment store!`);\n      }\n    });\n\n    // for some agent ag_j ≠ ag_i, l ∈ Com_ag_j\n    let doesAppear = false;\n\n    for (const someAgent of this.agents) {\n      if (someAgent !== agent && someAgent.commitmentStore.includes(term)) {\n        doesAppear = true;\n      }\n    }\n\n    if (doesAppear === false) {\n      throw new Error(`Pre-conditions of ${agent.name} asking why \"${translate(term)}\" are not satisfied because ` +\n        `no other agent's commitment store contains the claim!`);\n    }\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    this.text += `${agent.name}: Why is it that ${translate(term)}?\\n`;\n    this.saveCommitmentStores();\n  }\n\n  // Concede(ag_i, l)\n  concede(agent, term) {\n    /* PRE-CONDITIONS */\n\n    // for some agent ag_j ≠ ag_i, l ∈ Com_ag_j\n    let doesAppear = false;\n\n    for (const someAgent of this.agents) {\n      if (someAgent !== agent && someAgent.commitmentStore.includes(term)) {\n        doesAppear = true;\n      }\n    }\n\n    if (doesAppear === false) {\n      throw new Error(`Pre-conditions of ${agent.name} conceding to \"${translate(term)}\" are not satisfied because ` +\n        `no other agent's commitment store contains the claim!`);\n    }\n\n    // not(¬l ∈ Com_ag_i)\n    if ((term.includes('\\\\+(') && (agent.commitmentStore.includes(`${term.substring(3, term.length - 2)}.`)))\n      || (!term.includes('\\\\+(') && agent.commitmentStore.includes(`\\\\+(${term.substring(0, term.length - 1)}).`))) {\n      throw new Error(`Pre-conditions of ${agent.name} conceding to \"${translate(term)}\" are not satisfied because ` +\n        `the agent's commitment store contains the negation of the claim!`);\n    }\n\n    /* POST-CONDITIONS */\n\n    // Com_ag_i ⇒ Com_ag_i ∪ l\n    if (!agent.commitmentStore.includes(term)) {\n      agent.commitmentStore += `${term}\\n`;\n    }\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    this.text += `${agent.name}: I accept that ${translate(term)}.\\n`;\n    this.saveCommitmentStores();\n  }\n\n  // Retract(ag_i, l)\n  retract(agent, term) {\n    /* PRE-CONDITIONS */\n\n    // not demo(∏_ag_i ∪ Com_ag_i \\ l, l)\n    const prologSession = pl.create();\n    prologSession.consult(agent.knowledgeBase + agent.commitmentStore.replace(term, ''));\n    prologSession.query(term);\n    prologSession.answer(x => {\n      if (pl.format_answer(x) === 'true ;') {\n        throw new Error(`Pre-conditions of ${agent.name} retracting \"${translate(term)}\" are not satisfied because ` +\n          `the agent can demonstrate the claim through their knowledge base and remaining commitment store!`);\n      }\n    });\n\n    // l ∈ Com_ag_i\n    if (!agent.commitmentStore.includes(term)) {\n      throw new Error(`Pre-conditions of ${agent.name} retracting \"${translate(term)}\" are not satisfied because ` +\n        `the agent's commitment store does not contain the claim!`);\n    }\n\n    /* POST-CONDITIONS */\n\n    // Com_ag_i ⇒ Com_ag_i \\ l\n    agent.commitmentStore = agent.commitmentStore.replace(`${term}\\n`, '');\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    this.text += `${agent.name}: I take back that ${translate(term)}.\\n`;\n    this.saveCommitmentStores();\n  }\n\n  // Since(ag_i, l, ∏)\n  since(agent, otherAgent, term, justifications) {\n    /* PRE-CONDITIONS */\n\n    // l ∈ Com_ag_i\n    if (!agent.commitmentStore.includes(term)) {\n      throw new Error(`Pre-conditions of ${agent.name} offering reasoning for \"${translate(term)}\" are not satisfied because ` +\n        `the agent's commitment store does not contain the claim!`);\n    }\n\n    // demo(∏ ∪ Com_ag_j, l) for some ∏ ⊆ ∏_ag_i\n    for (const justification of justifications) {\n      if (!agent.knowledgeBase.includes(justification)) {\n        throw new Error(`Pre-conditions of ${agent.name} offering reasoning for \"${translate(term)}\" are not satisfied because ` +\n          `the agent's knowledge base does not contain all justifications!`);\n      }\n    }\n\n    let justificationsAsOneString = '';\n\n    for (const justification of justifications) {\n      justificationsAsOneString += `${justification}\\n`;\n    }\n\n    const prologSession = pl.create();\n    prologSession.consult(justificationsAsOneString + otherAgent.commitmentStore);\n    prologSession.query(term);\n    prologSession.answer(x => {\n      if (pl.format_answer(x) !== 'true ;') {\n        throw new Error(`Pre-conditions of ${agent.name} offering reasoning for \"${translate(term)}\" are not satisfied because ` +\n          `${otherAgent.name} cannot demonstrate the claim through the justifications and their commitment store!`);\n      }\n    });\n\n    /* POST-CONDITIONS */\n\n    // Com_ag_i ⇒ Com_ag_i ∪ ∏\n    for (const justification of justifications) {\n      if (!agent.commitmentStore.includes(justification)) {\n        agent.commitmentStore += `${justification}\\n`;\n      }\n    }\n\n    // Com_ag_j ⇒ Com_ag_j ∪ ∏\n    for (const justification of justifications) {\n      if (!otherAgent.commitmentStore.includes(justification)) {\n        otherAgent.commitmentStore += `${justification}\\n`;\n      }\n    }\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    let bodyOfRuleOfClaim = justifications[0].split('-')[1].split(', ')[0].replace(/X/g, term.match(/([A-Za-z0-9])+/g)[1]);\n\n    for (const match of bodyOfRuleOfClaim.match(/([A-Za-z0-9])+/g)) {\n      if (match[0] !== match[0].toLowerCase()) {\n        const prologSession = pl.create();\n        prologSession.consult(justificationsAsOneString + otherAgent.commitmentStore);\n\n        if (bodyOfRuleOfClaim[bodyOfRuleOfClaim.length - 1] !== '.' && bodyOfRuleOfClaim[bodyOfRuleOfClaim.length - 2] !== '.') {\n          bodyOfRuleOfClaim = bodyOfRuleOfClaim + '.'\n        }\n\n        prologSession.query(bodyOfRuleOfClaim);\n        prologSession.answer(x => bodyOfRuleOfClaim = bodyOfRuleOfClaim.replace(match, pl.format_answer(x).split(\" \")[2].replace(/,|\\./g, ''))); // eslint-disable-line no-loop-func\n      }\n    }\n\n    this.text += `${agent.name}: ${translate(term)} since ${format(bodyOfRuleOfClaim.split('),'))}.\\n`;\n    this.saveCommitmentStores();\n  }\n\n  // Question(ag_i, l)\n  question(agent, term) {\n    /* PRE-CONDITIONS */\n\n    // ∀(ag_j) ∈ Ag, l ∉ Com_ag_j\n    for (const anyAgent of this.agents) {\n      if (anyAgent.commitmentStore.includes(term)) {\n        throw new Error(`Pre-conditions of ${agent.name} questioning if \"${translate(term)}\" are not satisfied because ` +\n          `${anyAgent.name}'s commitment store contains the claim!`);\n      }\n    }\n\n    // not demo(∏_ag_i ∪ Com_ag_i, l)\n    const prologSession = pl.create();\n    prologSession.consult(agent.knowledgeBase + agent.commitmentStore);\n    prologSession.query(term);\n    prologSession.answer(x => {\n      if (pl.format_answer(x) === 'true ;') {\n        throw new Error(`Pre-conditions of ${agent.name} questioning if \"${translate(term)}\" are not satisfied because ` +\n          `the agent can demonstrate the claim through their knowledge base and commitment store!`);\n      }\n    });\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    this.text += `${agent.name}: I wonder if ${translate(term)}.\\n`;\n    this.saveCommitmentStores();\n  }\n}\n\nexport default Dialogue;\n","import pl from 'tau-prolog';\n\nimport Dialogue from './Dialogue';\n\nimport { translate } from './utils/helper';\n\nclass PersuasionDialogue extends Dialogue {\n  constructor(agents, proponentIndex) {\n    super(agents);\n\n    this.proponent = agents[proponentIndex];\n  }\n\n  isOver() {\n    for (const agent of this.agents) {\n      if (!agent.commitmentStore.includes(`acceptableRestaurant(${this.proponent.initialPreference}).`)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // Claim(ag_i, l) | Claim(O, p(a))\n  claim(agent, term) {\n    const restaurant = term.match(/([A-Za-z0-9])+/g)[1];\n    const property = term.match(/([A-Za-z0-9])+/g)[0];\n\n    /* GENERAL PRE-CONDITIONS */\n\n    // demo(∏_ag_i ∪ Com_ag_i, l)\n    const prologSession = pl.create();\n    prologSession.consult(agent.knowledgeBase + agent.commitmentStore);\n    prologSession.query(term);\n    prologSession.answer(x => {\n      if (pl.format_answer(x) !== 'true ;') {\n        throw new Error(`Pre-conditions of ${agent.name} claiming \"${translate(term)}\" are not satisfied because ` +\n          `the agent cannot demonstrate the claim through their knowledge base and commitment store!`);\n      }\n    });\n\n    // ¬l ∈ Com_ag_j for any ag_j ∈ Ag\n    for (const anyAgent of this.agents) {\n      if (anyAgent.commitmentStore.includes(term)) {\n        throw new Error(`Pre-conditions of ${agent.name} claiming \"${translate(term)}\" are not satisfied because ` +\n          `${anyAgent.name}'s commitment store contains the claim!`);\n      }\n    }\n\n    /*  TYPE-SPECIFIC PRE-CONDITIONS */\n\n    if (agent !== this.proponent) {\n      // preferable(O, a)\n      if (!agent.doesPrefer(restaurant)) {\n        throw new Error(`Pre-conditions of ${agent.name} claiming \"${translate(term)}\" are not satisfied because ` +\n          `the restaurant is not preferable to the agent!`);\n      }\n\n      // p(X) ∈ B, where B is the set of terms in the body of the preference rule of O\n      let termsToCheck = [];\n\n      for (const line of agent.knowledgeBase.split('\\n')) {\n        if (/^acceptableRestaurant\\(X/.test(line)) {\n          for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n            if (!termsToCheck.includes(match)) {\n              termsToCheck.push(match);\n            }\n          }\n        }\n      }\n\n      for (let i = 0; i < termsToCheck.length; i++) {\n        for (const line of agent.knowledgeBase.split('\\n')) {\n          if (new RegExp('^' + termsToCheck[i] + '\\\\(X').test(line)) {\n            for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n              if (!termsToCheck.includes(match)) {\n                termsToCheck.push(match);\n              }\n            }\n          }\n        }\n      }\n\n      if (!termsToCheck.includes(property)) {\n        throw new Error(`Pre-conditions of ${agent.name} claiming \"${translate(term)}\" are not satisfied because ` +\n          `the claim does not correspond to a feature in the body of the agent's preference rule!`);\n      }\n    }\n\n    /* GENERAL POST-CONDITIONS */\n\n    // Com_ag_i ⇒ Com_ag_i ∪ l\n    agent.commitmentStore += `${term}\\n`;\n\n    /* TYPE-SPECIFIC POST-CONDITIONS */\n\n    if (agent !== this.proponent) {\n      // Com_O ⇒ Com_O ∪ acceptableRestaurant(a) iff demo(∏_O ∪ Com_O, acceptableRestaurant(a))\n      prologSession.query(`acceptableRestaurant(${restaurant}).`);\n      prologSession.answer(x => {\n        if (pl.format_answer(x) === 'true ;' && !agent.commitmentStore.includes(`acceptableRestaurant(${restaurant}).`)) {\n          agent.commitmentStore += `acceptableRestaurant(${restaurant}).\\n`;\n        }\n      });\n\n      // Com_O ⇒ Com_O ∪ (p(X) ∈ B), where B is the set of terms in the body of the preference rule of O\n      for (const line of (agent.knowledgeBase + agent.commitmentStore).split('\\n')) {\n        if (new RegExp('^' + property + '\\\\(X(?=\\\\)|,[A-Z]|,' + term.match(/([A-Za-z0-9_])+/g)[2] + ')').test(line)) {\n          if (!agent.commitmentStore.includes(line)) {\n            agent.commitmentStore += `${line}\\n`;\n          }\n        }\n      }\n    }\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    this.text += `${agent.name}: ${translate(term)}.\\n`;\n    this.saveCommitmentStores();\n  }\n\n  // Counterclaim(ag_i, l) | Counterclaim(O, p(a))\n  counterclaim(agent, term) {\n    const property = term.match(/([A-Za-z0-9])+/g)[0];\n\n    /* GENERAL PRE-CONDITIONS */\n\n    // demo(∏_ag_i ∪ Com_ag_i, l)\n    const prologSession = pl.create();\n    prologSession.consult(agent.knowledgeBase + agent.commitmentStore);\n    prologSession.query(term);\n    prologSession.answer(x => {\n      if (pl.format_answer(x) !== 'true ;') {\n        throw new Error(`Pre-conditions of ${agent.name} counterclaiming \"${translate(term)}\" are not satisfied because ` +\n          `the agent cannot demonstrate the claim through their knowledge base and commitment store!`);\n      }\n    });\n\n    // ¬l ∈ Com_ag_j for any ag_j ∈ Ag\n    for (const anyAgent of this.agents) {\n      if (anyAgent.commitmentStore.includes(term)) {\n        throw new Error(`Pre-conditions of ${agent.name} counterclaiming \"${translate(term)}\" are not satisfied because ` +\n          `${anyAgent.name}'s commitment store contains the claim!`);\n      }\n    }\n\n    /*  TYPE-SPECIFIC PRE-CONDITIONS */\n\n    if (agent !== this.proponent) {\n      // ¬preferable(O, a)\n      if (agent.doesPrefer(term.match(/([A-Za-z0-9])+/g)[1])) {\n        throw new Error(`Pre-conditions of ${agent.name} counterclaiming \"${translate(term)}\" are not satisfied because ` +\n          `the restaurant is preferable to the agent!`);\n      }\n\n      // p(X) ∈ B, where B is the set of terms in the body of the preference rule of O\n      let termsToCheck = [];\n\n      for (const line of agent.knowledgeBase.split('\\n')) {\n        if (/^acceptableRestaurant\\(X/.test(line)) {\n          for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n            if (!termsToCheck.includes(match)) {\n              termsToCheck.push(match);\n            }\n          }\n        }\n      }\n\n      for (let i = 0; i < termsToCheck.length; i++) {\n        for (const line of agent.knowledgeBase.split('\\n')) {\n          if (new RegExp('^' + termsToCheck[i] + '\\\\(X').test(line)) {\n            for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n              if (!termsToCheck.includes(match)) {\n                termsToCheck.push(match);\n              }\n            }\n          }\n        }\n      }\n\n      if (!termsToCheck.includes(property)) {\n        throw new Error(`Pre-conditions of ${agent.name} counterclaiming \"${translate(term)}\" are not satisfied because ` +\n          `the claim does not correspond to a feature in the body of the agent's preference rule!`);\n      }\n    }\n\n    /* GENERAL POST-CONDITIONS */\n\n    // Com_ag_i ⇒ Com_ag_i ∪ l\n    agent.commitmentStore += `${term}\\n`;\n\n    /* TYPE-SPECIFIC POST-CONDITIONS */\n\n    if (agent !== this.proponent) {\n      // Com_O ⇒ Com_O ∪ (p(X) ∈ B), where B is the set of terms in the body of the preference rule of O\n      for (const line of (agent.knowledgeBase + agent.commitmentStore).split('\\n')) {\n        if (new RegExp('^' + property + '\\\\(X(?=\\\\)|,[A-Z]|,' + term.match(/([A-Za-z0-9_])+/g)[2] + ')').test(line)) {\n          if (!agent.commitmentStore.includes(line)) {\n            agent.commitmentStore += `${line}\\n`;\n          }\n        }\n      }\n    }\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    this.text += `${agent.name}: But ${translate(term)}.\\n`;\n    this.saveCommitmentStores();\n  }\n\n  // Concede(ag_i, l) | Concede(O, p(a))\n  concede(agent, term) {\n    const property = term.match(/([A-Za-z0-9])+/g)[0];\n\n    /* GENERAL PRE-CONDITIONS */\n\n    // for some agent ag_j ≠ ag_i, l ∈ Com_ag_j\n    let doesAppear = false;\n\n    for (const someAgent of this.agents) {\n      if (someAgent !== agent && someAgent.commitmentStore.includes(term)) {\n        doesAppear = true;\n      }\n    }\n\n    if (doesAppear === false) {\n      throw new Error(`Pre-conditions of ${agent.name} conceding to \"${translate(term)}\" are not satisfied because ` +\n        `no other agent's commitment store contains the claim!`);\n    }\n\n    // not(¬l ∈ Com_ag_i)\n    if ((term.includes('\\\\+(') && (agent.commitmentStore.includes(`${term.substring(3, term.length - 2)}.`)))\n      || (!term.includes('\\\\+(') && agent.commitmentStore.includes(`\\\\+(${term.substring(0, term.length - 1)}).`))) {\n      throw new Error(`Pre-conditions of ${agent.name} conceding to \"${translate(term)}\" are not satisfied because ` +\n        `the agent's commitment store contains the negation of the claim!`);\n    }\n\n    /* TYPE-SPECIFIC PRE-CONDITIONS */\n\n    if (agent !== this.proponent) {\n      // p(X) ∈ B, where B is the set of terms in the body of the preference rule of O\n      let termsToCheck = ['acceptableRestaurant'];\n\n      for (const line of agent.knowledgeBase.split('\\n')) {\n        if (/^acceptableRestaurant\\(X/.test(line)) {\n          for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n            if (!termsToCheck.includes(match)) {\n              termsToCheck.push(match);\n            }\n          }\n        }\n      }\n\n      for (let i = 0; i < termsToCheck.length; i++) {\n        for (const line of agent.knowledgeBase.split('\\n')) {\n          if (new RegExp('^' + termsToCheck[i] + '\\\\(X').test(line)) {\n            for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n              if (!termsToCheck.includes(match)) {\n                termsToCheck.push(match);\n              }\n            }\n          }\n        }\n      }\n\n      if (!termsToCheck.includes(property)) {\n        throw new Error(`Pre-conditions of ${agent.name} conceding to \"${translate(term)}\" are not satisfied because ` +\n          `the claim does not correspond to a feature in the body of the agent's preference rule!`);\n      }\n    }\n\n    /* GENERAL POST-CONDITIONS */\n\n    // Com_ag_i ⇒ Com_ag_i ∪ l\n    if (!agent.commitmentStore.includes(term)) {\n      agent.commitmentStore += `${term}\\n`;\n    }\n\n    /* TYPE-SPECIFIC POST-CONDITIONS */\n\n    if (agent !== this.proponent) {\n      // Com_O ⇒ Com_O ∪ (p(X) ∈ B), where B is the set of terms in the body of the preference rule of O\n      for (const line of (agent.knowledgeBase + agent.commitmentStore).split('\\n')) {\n        if (new RegExp('^' + property + '\\\\(X(?=\\\\)|,[A-Z]|,' + term.match(/([A-Za-z0-9_])+/g)[2] + ')').test(line)) {\n          if (!agent.commitmentStore.includes(line)) {\n            agent.commitmentStore += `${line}\\n`;\n          }\n        }\n      }\n    }\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    this.text += `${agent.name}: I accept that ${translate(term)}.\\n`;\n    this.saveCommitmentStores();\n  }\n\n  // Question(ag_i, l) | Question(O,p(a))\n  question(agent, term) {\n    const property = term.match(/([A-Za-z0-9])+/g)[0];\n\n    /* GENERAL PRE-CONDITIONS */\n\n    // ∀(ag_j) ∈ Ag, l ∉ Com_ag_j\n    for (const anyAgent of this.agents) {\n      if (anyAgent.commitmentStore.includes(term)) {\n        throw new Error(`Pre-conditions of ${agent.name} questioning if \"${translate(term)}\" are not satisfied because ` +\n          `${anyAgent.name}'s commitment store contains the claim!`);\n      }\n    }\n\n    // not demo(∏_ag_i ∪ Com_ag_i, l)\n    const prologSession = pl.create();\n    prologSession.consult(agent.knowledgeBase + agent.commitmentStore);\n    prologSession.query(term);\n    prologSession.answer(x => {\n      if (pl.format_answer(x) === 'true ;') {\n        throw new Error(`Pre-conditions of ${agent.name} questioning if \"${translate(term)}\" are not satisfied because ` +\n          `the agent can demonstrate the claim through their knowledge base and commitment store!`);\n      }\n    });\n\n    /* TYPE-SPECIFIC PRE-CONDITIONS */\n\n    if (agent !== this.proponent) {\n      // p(X) ∈ B, where B is the set of terms in the body of the preference rule of O\n      let termsToCheck = [];\n\n      for (const line of agent.knowledgeBase.split('\\n')) {\n        if (/^acceptableRestaurant\\(X/.test(line)) {\n          for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n            if (!termsToCheck.includes(match)) {\n              termsToCheck.push(match);\n            }\n          }\n        }\n      }\n\n      for (let i = 0; i < termsToCheck.length; i++) {\n        for (const line of agent.knowledgeBase.split('\\n')) {\n          if (new RegExp('^' + termsToCheck[i] + '\\\\(X').test(line)) {\n            for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n              if (!termsToCheck.includes(match)) {\n                termsToCheck.push(match);\n              }\n            }\n          }\n        }\n      }\n\n      if (!termsToCheck.includes(property)) {\n        throw new Error(`Pre-conditions of ${agent.name} questioning if \"${translate(term)}\" are not satisfied because ` +\n          `the claim does not correspond to a feature in the body of the agent's preference rule!`);\n      }\n    }\n\n    /* TYPE-SPECIFIC POST-CONDITIONS */\n\n    if (agent !== this.proponent) {\n      // Com_O ⇒ Com_O ∪ (p(X) ∈ B), where B is the set of terms in the body of the preference rule of O\n      for (const line of (agent.knowledgeBase + agent.commitmentStore).split('\\n')) {\n        if (new RegExp('^' + property + '\\\\(X(?=\\\\)|,[A-Z]|,' + term.match(/([A-Za-z0-9_])+/g)[2] + ')').test(line)) {\n          if (!agent.commitmentStore.includes(line)) {\n            agent.commitmentStore += `${line}\\n`;\n          }\n        }\n      }\n    }\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    this.text += `${agent.name}: I wonder if ${translate(term)}.\\n`;\n    this.saveCommitmentStores();\n  }\n}\n\nexport default PersuasionDialogue;\n","import pl from 'tau-prolog';\n\nimport Dialogue from './Dialogue';\n\nimport { decamelise, format, translate } from './utils/helper';\n\nclass DeliberationDialogue extends Dialogue {\n  constructor(agents) {\n    super(agents);\n\n    this.agreedPreferenceRule = 'acceptableRestaurant(X):-';\n    this.agreedPreferenceRuleHistory = [this.agreedPreferenceRule];\n  }\n\n  saveCommitmentStores() {\n    super.saveCommitmentStores();\n\n    this.agreedPreferenceRuleHistory.push(this.agreedPreferenceRule);\n  }\n\n  isOver() {\n    let collectiveCommitmentStore = '';\n\n    for (const agent of this.agents) {\n      for (const line of agent.commitmentStore.split('\\n')) {\n        if (!/^acceptableRestaurant\\(/.test(line)) {\n          collectiveCommitmentStore += `${line}\\n`;\n        }\n      }\n    }\n\n    collectiveCommitmentStore += this.agreedPreferenceRule;\n\n    let agreedRestaurant = '';\n\n    const prologSession = pl.create();\n    prologSession.consult(collectiveCommitmentStore);\n    prologSession.query('acceptableRestaurant(X).');\n    prologSession.answer(x => {\n      agreedRestaurant = pl.format_answer(x).split(\" \")[2];\n    });\n\n    for (const agent of this.agents) {\n      if (!agent.commitmentStore.includes(`acceptableRestaurant(${agreedRestaurant})`))\n        return false;\n    }\n\n    return true;\n  }\n\n  addTermToAgreedPreferenceRule(term) {\n    const restaurant = term.match(/([A-Za-z0-9_])+/g)[1];\n\n    if (!this.agreedPreferenceRule.includes(term.substring(0, term.length - 1).replace(restaurant, 'X'))) {\n      if (this.agreedPreferenceRule[this.agreedPreferenceRule.length - 1] === '-') {\n        this.agreedPreferenceRule += term.replace(restaurant, 'X');\n      } else {\n        this.agreedPreferenceRule = `${this.agreedPreferenceRule.substring(0, this.agreedPreferenceRule.length - 1)},${term.replace(restaurant, 'X')}`;\n      }\n    }\n  }\n\n  // Claim(ag_i, l) | Claim(O, p(a))\n  claim(agent, term) {\n    const restaurant = term.match(/([A-Za-z0-9])+/g)[1];\n    const property = term.match(/([A-Za-z0-9])+/g)[0];\n\n    /* GENERAL PRE-CONDITIONS */\n\n    // demo(∏_ag_i ∪ Com_ag_i, l)\n    const prologSession = pl.create();\n    prologSession.consult(agent.knowledgeBase + agent.commitmentStore);\n    prologSession.query(term);\n    prologSession.answer(x => {\n      if (pl.format_answer(x) !== 'true ;') {\n        throw new Error(`Pre-conditions of ${agent.name} claiming \"${translate(term)}\" are not satisfied because ` +\n          `the agent cannot demonstrate the claim through their knowledge base and commitment store!`);\n      }\n    });\n\n    // ¬l ∈ Com_ag_j for any ag_j ∈ Ag\n    for (const anyAgent of this.agents) {\n      if (anyAgent.commitmentStore.includes(term)) {\n        throw new Error(`Pre-conditions of ${agent.name} claiming \"${translate(term)}\" are not satisfied because ` +\n          `${anyAgent.name}'s commitment store contains the claim!`);\n      }\n    }\n\n    /*  TYPE-SPECIFIC PRE-CONDITIONS */\n\n    // preferable(O, a)\n    if (!agent.doesPrefer(restaurant)) {\n      throw new Error(`Pre-conditions of ${agent.name} claiming \"${translate(term)}\" are not satisfied because ` +\n        `the restaurant is not preferable to the agent!`);\n    }\n\n    // p(X) ∈ B, where B is the set of terms in the body of the preference rule of O\n    let termsToCheck = [];\n\n    for (const line of agent.knowledgeBase.split('\\n')) {\n      if (/^acceptableRestaurant\\(X/.test(line)) {\n        for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n          if (!termsToCheck.includes(match)) {\n            termsToCheck.push(match);\n          }\n        }\n      }\n    }\n\n    for (let i = 0; i < termsToCheck.length; i++) {\n      for (const line of agent.knowledgeBase.split('\\n')) {\n        if (new RegExp('^' + termsToCheck[i] + '\\\\(X').test(line)) {\n          for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n            if (!termsToCheck.includes(match)) {\n              termsToCheck.push(match);\n            }\n          }\n        }\n      }\n    }\n\n    if (!termsToCheck.includes(property)) {\n      throw new Error(`Pre-conditions of ${agent.name} claiming \"${translate(term)}\" are not satisfied because ` +\n        `the claim does not correspond to a feature in the body of the agent's preference rule!`);\n    }\n\n    /* GENERAL POST-CONDITIONS */\n\n    // Com_ag_i ⇒ Com_ag_i ∪ l\n    agent.commitmentStore += `${term}\\n`;\n\n    /* TYPE-SPECIFIC POST-CONDITIONS */\n\n    // Com_O ⇒ Com_O ∪ acceptableRestaurant(a) iff demo(∏_O ∪ Com_O, acceptableRestaurant(a))\n    prologSession.query(`acceptableRestaurant(${restaurant}).`);\n    prologSession.answer(x => {\n      if (pl.format_answer(x) === 'true ;' && !agent.commitmentStore.includes(`acceptableRestaurant(${restaurant}).`)) {\n        agent.commitmentStore += `acceptableRestaurant(${restaurant}).\\n`;\n      }\n    });\n\n    // Com_O ⇒ Com_O ∪ (p(X) ∈ B), where B is the set of terms in the body of the preference rule of O\n    for (const line of (agent.knowledgeBase + agent.commitmentStore).split('\\n')) {\n      if (new RegExp('^' + property + '\\\\(X(?=\\\\)|,[A-Z]|,' + term.match(/([A-Za-z0-9_])+/g)[2] + ')').test(line)) {\n        if (!agent.commitmentStore.includes(line)) {\n          agent.commitmentStore += `${line}\\n`;\n        }\n      }\n    }\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    this.text += `${agent.name}: ${translate(term)}.\\n`;\n    this.saveCommitmentStores();\n  }\n\n  // Counterclaim(ag_i, l) | Counterclaim(O, p(a))\n  counterclaim(agent, term) {\n    const property = term.match(/([A-Za-z0-9])+/g)[0];\n\n    /* GENERAL PRE-CONDITIONS */\n\n    // demo(∏_ag_i ∪ Com_ag_i, l)\n    const prologSession = pl.create();\n    prologSession.consult(agent.knowledgeBase + agent.commitmentStore);\n    prologSession.query(term);\n    prologSession.answer(x => {\n      if (pl.format_answer(x) !== 'true ;') {\n        throw new Error(`Pre-conditions of ${agent.name} counterclaiming \"${translate(term)}\" are not satisfied because ` +\n          `the agent cannot demonstrate the claim through their knowledge base and commitment store!`);\n      }\n    });\n\n    // ¬l ∈ Com_ag_j for any ag_j ∈ Ag\n    for (const anyAgent of this.agents) {\n      if (anyAgent.commitmentStore.includes(term)) {\n        throw new Error(`Pre-conditions of ${agent.name} counterclaiming \"${translate(term)}\" are not satisfied because ` +\n          `${anyAgent.name}'s commitment store contains the claim!`);\n      }\n    }\n\n    /*  TYPE-SPECIFIC PRE-CONDITIONS */\n\n    // ¬preferable(O, a)\n    if (agent.doesPrefer(term.match(/([A-Za-z0-9])+/g)[1])) {\n      throw new Error(`Pre-conditions of ${agent.name} counterclaiming \"${translate(term)}\" are not satisfied because ` +\n        `the restaurant is preferable to the agent!`);\n    }\n\n    // p(X) ∈ B, where B is the set of terms in the body of the preference rule of O\n    let termsToCheck = [];\n\n    for (const line of agent.knowledgeBase.split('\\n')) {\n      if (/^acceptableRestaurant\\(X/.test(line)) {\n        for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n          if (!termsToCheck.includes(match)) {\n            termsToCheck.push(match);\n          }\n        }\n      }\n    }\n\n    for (let i = 0; i < termsToCheck.length; i++) {\n      for (const line of agent.knowledgeBase.split('\\n')) {\n        if (new RegExp('^' + termsToCheck[i] + '\\\\(X').test(line)) {\n          for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n            if (!termsToCheck.includes(match)) {\n              termsToCheck.push(match);\n            }\n          }\n        }\n      }\n    }\n\n    if (!termsToCheck.includes(property)) {\n      throw new Error(`Pre-conditions of ${agent.name} counterclaiming \"${translate(term)}\" are not satisfied because ` +\n        `the claim does not correspond to a feature in the body of the agent's preference rule!`);\n    }\n\n    /* GENERAL POST-CONDITIONS */\n\n    // Com_ag_i ⇒ Com_ag_i ∪ l\n    agent.commitmentStore += `${term}\\n`;\n\n    /* TYPE-SPECIFIC POST-CONDITIONS */\n\n    // Com_O ⇒ Com_O ∪ (p(X) ∈ B), where B is the set of terms in the body of the preference rule of O\n    for (const line of (agent.knowledgeBase + agent.commitmentStore).split('\\n')) {\n      if (new RegExp('^' + property + '\\\\(X(?=\\\\)|,[A-Z]|,' + term.match(/([A-Za-z0-9_])+/g)[2] + ')').test(line)) {\n        if (!agent.commitmentStore.includes(line)) {\n          agent.commitmentStore += `${line}\\n`;\n        }\n      }\n    }\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    this.text += `${agent.name}: But ${translate(term)}.\\n`;\n    this.saveCommitmentStores();\n  }\n\n  // Concede(ag_i, l) | Concede(O, p(a))\n  concede(agent, term) {\n    const restaurant = term.match(/([A-Za-z0-9_])+/g)[1];\n    const property = term.match(/([A-Za-z0-9])+/g)[0];\n\n    /* GENERAL PRE-CONDITIONS */\n\n    // for some agent ag_j ≠ ag_i, l ∈ Com_ag_j\n    let doesAppear = false;\n\n    for (const someAgent of this.agents) {\n      if (someAgent !== agent && someAgent.commitmentStore.includes(term)) {\n        doesAppear = true;\n      }\n    }\n\n    if (doesAppear === false) {\n      throw new Error(`Pre-conditions of ${agent.name} conceding to \"${translate(term)}\" are not satisfied because ` +\n        `no other agent's commitment store contains the claim!`);\n    }\n\n    // not(¬l ∈ Com_ag_i)\n    if ((term.includes('\\\\+(') && (agent.commitmentStore.includes(`${term.substring(3, term.length - 2)}.`)))\n      || (!term.includes('\\\\+(') && agent.commitmentStore.includes(`\\\\+(${term.substring(0, term.length - 1)}).`))) {\n      throw new Error(`Pre-conditions of ${agent.name} conceding to \"${translate(term)}\" are not satisfied because ` +\n        `the agent's commitment store contains the negation of the claim!`);\n    }\n\n    /* ADD TERM TO BODY OF AGREED PREFERENCE RULE */\n    this.addTermToAgreedPreferenceRule(term);\n\n    /* GENERAL POST-CONDITIONS */\n\n    // Com_ag_i ⇒ Com_ag_i ∪ l\n    if (!agent.commitmentStore.includes(term)) {\n      agent.commitmentStore += `${term}\\n`;\n    }\n\n    /* TYPE-SPECIFIC POST-CONDITIONS */\n\n    // Com_O ⇒ Com_O ∪ p(X) ∈ B, where B is the set of terms in the body of the agreed preference rule\n    for (const line of (agent.knowledgeBase + agent.commitmentStore).split('\\n')) {\n      if (new RegExp('^' + property + '\\\\(X(?=\\\\)|,[A-Z]|,' + term.match(/([A-Za-z0-9_])+/g)[2] + ')').test(line)) {\n        if (!agent.commitmentStore.includes(line)) {\n          agent.commitmentStore += `${line}\\n`;\n        }\n      }\n    }\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    if (property !== 'acceptableRestaurant') {\n      this.text += `${agent.name}: I accept that ${translate(term)}. We want to to a restaurant with ${translate(term.replace(restaurant, '_'))}.\\n`;\n    } else {\n      this.text += `${agent.name}: I accept that ${translate(term)}.\\n`;\n    }\n\n    this.saveCommitmentStores();\n  }\n\n  // Concede-Since(ag_i, g(a), p(a))\n  concedeSince(agent, term, justifications) {\n    let justificationsAsOneString = '';\n\n    for (const justification of justifications) {\n      justificationsAsOneString += `${justification}\\n`;\n    }\n\n    /* TYPE-SPECIFIC PRE-CONDITIONS */\n\n    // demo(∏_ag_i ∪ Com_ag_i ∪ p(a), g(a))\n    const prologSession = pl.create();\n    prologSession.consult(agent.knowledgeBase + agent.commitmentStore + justificationsAsOneString);\n    prologSession.query(term);\n    prologSession.answer(x => {\n      if (pl.format_answer(x) !== 'true ;') {\n        throw new Error(`Pre-conditions of ${agent.name} conceding to and offering reasoning for \"${translate(term)}\" are not satisfied because ` +\n          `the agent cannot demonstrate the claim through their knowledge base, commitment store, and the justifications!`);\n      }\n    });\n\n    // p(a) ∈ Com_ag_j for some ag_j ≠ ag_i\n    let doesAppearGlobally = false;\n\n    for (const someAgent of this.agents) {\n      let doesAppearLocally = true;\n\n      for (const justification of justifications) {\n        if (someAgent !== agent && !someAgent.commitmentStore.includes(justification)) {\n          doesAppearLocally = false;\n        }\n      }\n\n      if (someAgent !== agent && doesAppearLocally === true) {\n        doesAppearGlobally = true;\n      }\n    }\n\n    if (doesAppearGlobally === false) {\n      throw new Error(`Pre-conditions of ${agent.name} conceding to and offering reasoning for \"${translate(term)}\" are not satisfied because ` +\n        `no other agent's commitment store contains the justifications!`);\n    }\n\n    /* ADD JUSTIFICATIONS TO BODY OF AGREED PREFERENCE RULE */\n\n    for (const justification of justifications) {\n      this.addTermToAgreedPreferenceRule(justification);\n    }\n\n    /* TYPE-SPECIFIC POST-CONDITIONS */\n\n    // Com_ag_i ⇒ Com_ag_i ∪ p(a)\n    for (const justification of justifications) {\n      if (!agent.commitmentStore.includes(justification)) {\n        agent.commitmentStore += `${justification}\\n`;\n      }\n    }\n\n    // Com_O ⇒ Com_O ∪ p(X) ∈ B, where B is the set of terms in the body of the agreed preference rule\n    for (const justification of justifications) {\n      for (const line of (agent.knowledgeBase + agent.commitmentStore).split('\\n')) {\n        if (new RegExp('^' + justification.match(/([A-Za-z0-9_])+/g)[0] + '\\\\(X(?=\\\\)|,[A-Z]|,' + justification.match(/([A-Za-z0-9_])+/g)[2] + ')').test(line)) {\n          if (!agent.commitmentStore.includes(line)) {\n            agent.commitmentStore += `${line}\\n`;\n          }\n        }\n      }\n    }\n\n    this.text += `${agent.name}: Since ${format(justifications)}, that makes ${decamelise(term.match(/([A-Za-z0-9])+/g)[1])} an acceptable restaurant. `;\n\n    const uninstatitatedJustifications = [];\n\n    for (let i = 0; i < justifications.length; i++) {\n      uninstatitatedJustifications.push(justifications[i].replace(justifications[i].match(/([A-Za-z0-9])+/g)[1], '_'));\n    }\n\n    this.text += `We want to go to a restaurant with ${format(uninstatitatedJustifications)}.\\n`;\n    this.saveCommitmentStores();\n  }\n}\n\nexport default DeliberationDialogue;\n","const generalKnowledgeBase = `distance(restaurantOne,5,0).\ndistance(restaurantTwo,10,10).\ndistance(restaurantThree,1,0).\nmealTime(restaurantOne,90).\nmealTime(restaurantTwo,60).\nmealTime(restaurantThree,15).\nquality(X,good):-recommended(X,Y),trustworthy(Y).\nquality(X,poor):-recommended(X,students).\nprice(restaurantOne,25).\nprice(restaurantTwo,15).\nprice(restaurantThree,7).\natmosphere(restaurantOne).\natmosphere(restaurantTwo).\nbeverage(restaurantOne).\nbeverage(restaurantTwo).\ncuisine(restaurantOne,cuisineOne).\ncuisine(restaurantTwo,cuisineTwo).\ncuisine(restaurantThree,cuisineThree).\ncuisine(X,mediterranean):-cuisine(X,cuisineOne).\nhealthy(X):-cuisine(X,mediterranean).\nhealthy(X):-vegetables(X).\nvegetables(X):-cuisine(X,cuisineTwo).\ntrustworthy(colleague).\ntrustworthy(husband).\nrecommended(restaurantOne,husband).\nrecommended(restaurantTwo,colleague).\nrecommended(restaurantThree,students).\ntotalTime(X,T):-distance(X,Td,_),mealTime(X,Tm), T is Td+Tm.\ntotalCost(X,C):-distance(X,_,Cd),price(X,Cm), C is Cd+Cm.\nacceptableRestaurant(X):-quality(X,good),healthy(X).\nacceptableRestaurant(X):-cuisine(X,cuisineTwo).\nacceptableRestaurant(X):-quality(X,good), (quality(Y,good),cheaper(Y,X)->false;true).\nacceptableRestaurant(X):-quality(X,good),atmosphere(X),beverage(X),distance(X,_,0), (quality(Y,good),atmosphere(Y),beverage(Y),quicker(Y,X)->false;true).\nacceptableRestaurant(X):-healthy(X),atmosphere(X),beverage(X),distance(X,_,0).\nacceptableRestaurant(X):-quality(X,good),healthy(X),atmosphere(X),beverage(X).\nacceptableRestaurant(X):-quality(X,good),atmosphere(X).\ncheaper(X,Y):-totalCost(X,Cx),totalCost(Y,Cy), Cx < Cy.\nquicker(X,Y):-totalTime(X,Tx),totalTime(Y,Ty), Tx < Ty.`\n\nexport default generalKnowledgeBase;\n","import Agent from './Agent';\nimport PersuasionDialogue from './PersuasionDialogue';\nimport DeliberationDialogue from './DeliberationDialogue';\n\nimport generalKnowledgeBase from './utils/generalKnowledgeBase';\nimport { camelise, decamelise } from './utils/helper';\n\nclass Simulation {\n  constructor(agentNames, restaurantNames, restaurantCuisines, beverage) {\n    this.agentNames = agentNames;\n    this.restaurantNames = restaurantNames;\n    this.restaurantCuisines = restaurantCuisines;\n    this.beverage = beverage;\n    this.generalKnowledgeBase = generalKnowledgeBase\n      .replace(/restaurantOne/g, camelise(restaurantNames[0]))\n      .replace(/restaurantTwo/g, camelise(restaurantNames[1]))\n      .replace(/restaurantThree/g, camelise(restaurantNames[2]))\n      .replace(/cuisineOne/g, camelise(restaurantCuisines[0]))\n      .replace(/cuisineTwo/g, camelise(restaurantCuisines[1]))\n      .replace(/cuisineThree/g, camelise(restaurantCuisines[2]))\n      .replace(/beverage/g, camelise(beverage));\n\n    this.persuasionDialogue = this.simulatePersuasionDialogue();\n    this.deliberationDialogue = this.simulateDeliberationDialogue();\n  }\n\n  simulatePersuasionDialogue() {\n    let knowledgeBaseOne = '', knowledgeBaseTwo = '', knowledgeBaseThree = '';\n\n    for (const [index, line] of this.generalKnowledgeBase.split('\\n').entries()) {\n      if ([15, 23, 24, 6, 18, 19, 29].includes(index)) {\n        knowledgeBaseOne += `${line}\\n`;\n      }\n\n      if ([8, 9, 16, 22, 25, 6, 7, 20, 21, 28, 36, 30].includes(index)) {\n        knowledgeBaseTwo += `${line}\\n`;\n      }\n\n      if ([1, 26, 6, 28, 36, 31].includes(index)) {\n        knowledgeBaseThree += `${line}\\n`;\n      }\n    }\n\n    const persuasionDialogue = new PersuasionDialogue([\n      new Agent(this.agentNames[0], camelise(this.restaurantNames[0]), knowledgeBaseOne),\n      new Agent(this.agentNames[1], camelise(this.restaurantNames[1]), knowledgeBaseTwo),\n      new Agent(this.agentNames[2], camelise(this.restaurantNames[2]), knowledgeBaseThree)\n    ], 1);\n\n    persuasionDialogue.claim(persuasionDialogue.agents[1], `acceptableRestaurant(${camelise(this.restaurantNames[1])}).`);\n    persuasionDialogue.claim(persuasionDialogue.agents[1], `cuisine(${camelise(this.restaurantNames[1])},${camelise(this.restaurantCuisines[1])}).`);\n    persuasionDialogue.counterclaim(persuasionDialogue.agents[2], `distance(${camelise(this.restaurantNames[1])},10,_).`);\n    persuasionDialogue.claim(persuasionDialogue.agents[1], `quality(${camelise(this.restaurantNames[1])},good).`);\n    persuasionDialogue.claim(persuasionDialogue.agents[2], `recommended(${camelise(this.restaurantNames[2])},students).`);\n    persuasionDialogue.question(persuasionDialogue.agents[2], `quality(${camelise(this.restaurantNames[2])},good).`);\n    persuasionDialogue.concede(persuasionDialogue.agents[1], `recommended(${camelise(this.restaurantNames[2])},students).`);\n    persuasionDialogue.counterclaim(persuasionDialogue.agents[1], `quality(${camelise(this.restaurantNames[2])},poor).`);\n    persuasionDialogue.claim(persuasionDialogue.agents[0], `quality(${camelise(this.restaurantNames[0])},good).`);\n    persuasionDialogue.claim(persuasionDialogue.agents[0], `healthy(${camelise(this.restaurantNames[0])}).`);\n    persuasionDialogue.claim(persuasionDialogue.agents[1], `healthy(${camelise(this.restaurantNames[1])}).`);\n    persuasionDialogue.claim(persuasionDialogue.agents[1], `price(${camelise(this.restaurantNames[1])},15).`);\n    persuasionDialogue.counterclaim(persuasionDialogue.agents[1], `price(${camelise(this.restaurantNames[0])},25).`);\n    persuasionDialogue.counterclaim(persuasionDialogue.agents[2], `distance(${camelise(this.restaurantNames[1])},_,10).`);\n    persuasionDialogue.concede(persuasionDialogue.agents[1], `distance(${camelise(this.restaurantNames[1])},_,10).`);\n    persuasionDialogue.counterclaim(persuasionDialogue.agents[1], `\\\\+(cheaper(${camelise(this.restaurantNames[0])},${camelise(this.restaurantNames[1])})).`);\n    persuasionDialogue.concede(persuasionDialogue.agents[2], `acceptableRestaurant(${camelise(this.restaurantNames[1])}).`);\n    persuasionDialogue.concede(persuasionDialogue.agents[0], `acceptableRestaurant(${camelise(this.restaurantNames[1])}).`);\n\n    persuasionDialogue.text = persuasionDialogue.text\n      .replace(new RegExp(decamelise(camelise(this.restaurantNames[0])), 'gi'), this.restaurantNames[0])\n      .replace(new RegExp(decamelise(camelise(this.restaurantNames[1])), 'gi'), this.restaurantNames[1])\n      .replace(new RegExp(decamelise(camelise(this.restaurantNames[2])), 'gi'), this.restaurantNames[2])\n      .replace(new RegExp(this.restaurantCuisines[0], 'gi'), this.restaurantCuisines[0])\n      .replace(new RegExp(this.restaurantCuisines[1], 'gi'), this.restaurantCuisines[1])\n      .replace(new RegExp(this.restaurantCuisines[2], 'gi'), this.restaurantCuisines[2]);\n\n    if (persuasionDialogue.isOver()) {\n      return persuasionDialogue;\n    } else {\n      throw new Error('Persuasion dialogue has not reached an end state!');\n    }\n  }\n\n  simulateDeliberationDialogue() {\n    let knowledgeBaseOne = '', knowledgeBaseTwo = '', knowledgeBaseThree = '';\n\n    for (const [index, line] of this.generalKnowledgeBase.split('\\n').entries()) {\n      if ([0, 11, 13, 15, 23, 24, 6, 18, 19, 29, 33].includes(index)) {\n        knowledgeBaseOne += `${line}\\n`;\n      }\n\n      if ([12, 13, 14, 15, 16, 22, 25, 6, 18, 19, 20, 21, 30, 34].includes(index)) {\n        knowledgeBaseTwo += `${line}\\n`;\n      }\n\n      if ([1, 2, 8, 10, 23, 26, 6, 28, 36, 31, 35].includes(index)) {\n        knowledgeBaseThree += `${line}\\n`;\n      }\n    }\n\n    const deliberationDialogue = new DeliberationDialogue([\n      new Agent(this.agentNames[0], camelise(this.restaurantNames[0]), knowledgeBaseOne),\n      new Agent(this.agentNames[1], camelise(this.restaurantNames[1]), knowledgeBaseTwo),\n      new Agent(this.agentNames[2], camelise(this.restaurantNames[2]), knowledgeBaseThree)\n    ]);\n\n    deliberationDialogue.claim(deliberationDialogue.agents[1], `cuisine(${camelise(this.restaurantNames[1])},${camelise(this.restaurantCuisines[1])}).`);\n    deliberationDialogue.counterclaim(deliberationDialogue.agents[2], `distance(${camelise(this.restaurantNames[1])},10,_).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[2], `distance(${camelise(this.restaurantNames[2])},1,0).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[0], `distance(${camelise(this.restaurantNames[0])},_,0).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[0], `quality(${camelise(this.restaurantNames[0])},good).`);\n    deliberationDialogue.counterclaim(deliberationDialogue.agents[2], `price(${camelise(this.restaurantNames[0])},25).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[2], `price(${camelise(this.restaurantNames[2])},7).`);\n    deliberationDialogue.counterclaim(deliberationDialogue.agents[1], `\\\\+(${camelise(this.beverage)}(${camelise(this.restaurantNames[2])})).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[1], `${camelise(this.beverage)}(${camelise(this.restaurantNames[1])}).`);\n    deliberationDialogue.counterclaim(deliberationDialogue.agents[0], `\\\\+(atmosphere(${camelise(this.restaurantNames[2])})).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[0], `atmosphere(${camelise(this.restaurantNames[0])}).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[1], `atmosphere(${camelise(this.restaurantNames[1])}).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[1], `quality(${camelise(this.restaurantNames[1])},good).`);\n    deliberationDialogue.counterclaim(deliberationDialogue.agents[2], `distance(${camelise(this.restaurantNames[1])},_,10).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[1], `healthy(${camelise(this.restaurantNames[1])}).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[0], `healthy(${camelise(this.restaurantNames[0])}).`);\n    deliberationDialogue.concedeSince(deliberationDialogue.agents[1], `acceptableRestaurant(${camelise(this.restaurantNames[0])}).`, [`quality(${camelise(this.restaurantNames[0])},good).`, `atmosphere(${camelise(this.restaurantNames[0])}).`]);\n    deliberationDialogue.concedeSince(deliberationDialogue.agents[2], `acceptableRestaurant(${camelise(this.restaurantNames[1])}).`, [`quality(${camelise(this.restaurantNames[1])},good).`, `atmosphere(${camelise(this.restaurantNames[1])}).`]);\n    deliberationDialogue.concede(deliberationDialogue.agents[0], `${camelise(this.beverage)}(${camelise(this.restaurantNames[1])}).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[0], `${camelise(this.beverage)}(${camelise(this.restaurantNames[0])}).`);\n    deliberationDialogue.concedeSince(deliberationDialogue.agents[1], `acceptableRestaurant(${camelise(this.restaurantNames[0])}).`, [`distance(${camelise(this.restaurantNames[0])},_,0).`]);\n    deliberationDialogue.concede(deliberationDialogue.agents[2], `acceptableRestaurant(${camelise(this.restaurantNames[0])}).`);\n    deliberationDialogue.concede(deliberationDialogue.agents[1], `acceptableRestaurant(${camelise(this.restaurantNames[0])}).`);\n\n    deliberationDialogue.text = deliberationDialogue.text\n      .replace(new RegExp(decamelise(camelise(this.restaurantNames[0])), 'gi'), this.restaurantNames[0])\n      .replace(new RegExp(decamelise(camelise(this.restaurantNames[1])), 'gi'), this.restaurantNames[1])\n      .replace(new RegExp(decamelise(camelise(this.restaurantNames[2])), 'gi'), this.restaurantNames[2])\n      .replace(new RegExp(this.restaurantCuisines[0], 'gi'), this.restaurantCuisines[0])\n      .replace(new RegExp(this.restaurantCuisines[1], 'gi'), this.restaurantCuisines[1])\n      .replace(new RegExp(this.restaurantCuisines[2], 'gi'), this.restaurantCuisines[2]);\n\n    if (deliberationDialogue.isOver()) {\n      return deliberationDialogue;\n    } else {\n      throw new Error('Deliberation dialogue has not reached an end state!');\n    }\n  }\n}\n\nexport default Simulation;\n","import React, { Component } from \"react\";\nimport { Button, FormGroup, InlineNotification, RadioButton, RadioButtonGroup, TextInput } from 'carbon-components-react';\n\nimport DialogueAccordion from './DialogueAccordion';\nimport Simulation from './protocols/Simulation';\n\nimport './Generate.css';\n\nclass Generate extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      firstAgentsName: '',\n      secondAgentsName: '',\n      thirdAgentsName: '',\n      isFirstAgentsNameInvalid: false,\n      isSecondAgentsNameInvalid: false,\n      isThirdAgentsNameInvalid: false,\n      firstRestaurantsName: '',\n      secondRestaurantsName: '',\n      thirdRestaurantsName: '',\n      isFirstRestaurantsNameInvalid: false,\n      isSecondRestaurantsNameInvalid: false,\n      isThirdRestaurantsNameInvalid: false,\n      firstRestaurantsCuisine: 'Italian',\n      secondRestaurantsCuisine: 'Thai',\n      thirdRestaurantsCuisine: 'American',\n      beverage: 'Wine',\n      isErrorNotificationVisible: false,\n      simulation: null\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.checkInputValues = this.checkInputValues.bind(this);\n    this.generateDialogues = this.generateDialogues.bind(this);\n    this.resetState = this.resetState.bind(this);\n  }\n\n  onChange(event) {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  checkInputValues() {\n    this.state.firstAgentsName === '' ? this.setState({ isFirstAgentsNameInvalid: true }) : this.setState({ isFirstAgentsNameInvalid: false });\n    this.state.secondAgentsName === '' ? this.setState({ isSecondAgentsNameInvalid: true }) : this.setState({ isSecondAgentsNameInvalid: false });\n    this.state.thirdAgentsName === '' ? this.setState({ isThirdAgentsNameInvalid: true }) : this.setState({ isThirdAgentsNameInvalid: false });\n    this.state.firstRestaurantsName === '' ? this.setState({ isFirstRestaurantsNameInvalid: true }) : this.setState({ isFirstRestaurantsNameInvalid: false });\n    this.state.secondRestaurantsName === '' ? this.setState({ isSecondRestaurantsNameInvalid: true }) : this.setState({ isSecondRestaurantsNameInvalid: false });\n    this.state.thirdRestaurantsName === '' ? this.setState({ isThirdRestaurantsNameInvalid: true }) : this.setState({ isThirdRestaurantsNameInvalid: false });\n\n    if (this.state.firstAgentsName === '' || this.state.secondAgentsName === '' || this.state.thirdAgentsName === ''\n      || this.state.firstRestaurantsName === '' || this.state.secondRestaurantsName === '' || this.state.thirdRestaurantsName === '') {\n\n      this.setState({\n        isErrorNotificationVisible: true\n      });\n\n      return false;\n    }\n\n    return true;\n  }\n\n  generateDialogues() {\n    if (this.checkInputValues()) {\n      this.setState({\n        simulation: new Simulation(\n          [this.state.firstAgentsName, this.state.secondAgentsName, this.state.thirdAgentsName],\n          [this.state.firstRestaurantsName, this.state.secondRestaurantsName, this.state.thirdRestaurantsName],\n          [this.state.firstRestaurantsCuisine, this.state.secondRestaurantsCuisine, this.state.thirdRestaurantsCuisine],\n          this.state.beverage\n        )\n      });\n    }\n  }\n\n  resetState() {\n    this.setState({\n      firstAgentsName: '',\n      secondAgentsName: '',\n      thirdAgentsName: '',\n      isFirstAgentsNameInvalid: false,\n      isSecondAgentsNameInvalid: false,\n      isThirdAgentsNameInvalid: false,\n      firstRestaurantsName: '',\n      secondRestaurantsName: '',\n      thirdRestaurantsName: '',\n      isFirstRestaurantsNameInvalid: false,\n      isSecondRestaurantsNameInvalid: false,\n      isThirdRestaurantsNameInvalid: false,\n      firstRestaurantsCuisine: 'Italian',\n      secondRestaurantsCuisine: 'Thai',\n      thirdRestaurantsCuisine: 'American',\n      beverage: 'Wine',\n      isErrorNotificationVisible: false,\n      simulation: null\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {!this.state.simulation && (\n          <div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <div className=\"heading\"></div>\n                <h2 className=\"heading\">Customise</h2>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <p>\n                  Use the form below to generate your own custom persuasion and deliberation dialogues.\n                  None of the information you provide will be stored for future use by the system.\n                </p>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <div className=\"heading\"></div>\n                <h2 className=\"heading\">Agents' names</h2>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <p className=\"description\">\n                  Choose names for the agents that will be participating in the dialogues.\n                </p>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <div className=\"text-input\">\n                  <TextInput\n                    id=\"firstAgentsName\"\n                    labelText=\"First agent's name\"\n                    invalid={this.state.isFirstAgentsNameInvalid}\n                    invalidText=\"Please provide a valid name\"\n                    onChange={this.onChange}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <div className=\"text-input\">\n                  <TextInput\n                    id=\"secondAgentsName\"\n                    labelText=\"Second agent's name\"\n                    invalid={this.state.isSecondAgentsNameInvalid}\n                    invalidText=\"Please provide a valid name\"\n                    onChange={this.onChange}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <div className=\"text-input\">\n                  <TextInput\n                    id=\"thirdAgentsName\"\n                    labelText=\"Third agent's name\"\n                    invalid={this.state.isThirdAgentsNameInvalid}\n                    invalidText=\"Please provide a valid name\"\n                    onChange={this.onChange}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <div className=\"heading\"></div>\n                <h2 className=\"heading\">Restaurants' names</h2>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <p className=\"description\">\n                  Choose names for the restaurants around which the dialogues will revolve.\n                </p>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <div className=\"text-input\">\n                  <TextInput\n                    id=\"firstRestaurantsName\"\n                    labelText=\"First restaurant's name\"\n                    invalid={this.state.isFirstRestaurantsNameInvalid}\n                    invalidText=\"Please provide a valid name\"\n                    onChange={this.onChange}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <div className=\"text-input\">\n                  <TextInput\n                    id=\"secondRestaurantsName\"\n                    labelText=\"Second restaurant's name\"\n                    invalid={this.state.isSecondRestaurantsNameInvalid}\n                    invalidText=\"Please provide a valid name\"\n                    onChange={this.onChange}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <div className=\"text-input\">\n                  <TextInput\n                    id=\"thirdRestaurantsName\"\n                    labelText=\"Third restaurant's name\"\n                    invalid={this.state.isThirdRestaurantsNameInvalid}\n                    invalidText=\"Please provide a valid name\"\n                    onChange={this.onChange}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <div className=\"heading\"></div>\n                <h2 className=\"heading\">Restaurants' cuisines</h2>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <p className=\"description\">\n                  Pick the cuisines for each restaurant.\n                </p>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <FormGroup legendText=\"First restaurant's cuisine\">\n                  <RadioButtonGroup\n                    name=\"first-restaurants-cuisine-radio-button-group\"\n                    valueSelected=\"Italian\"\n                    onChange={(event) => this.setState({ firstRestaurantsCuisine: event })}\n                  >\n                    <RadioButton value=\"Italian\" labelText=\"Italian\" />\n                    <RadioButton value=\"Greek\" labelText=\"Greek\" />\n                    <RadioButton value=\"Spanish\" labelText=\"Spanish\" />\n                  </RadioButtonGroup>\n                </FormGroup>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <FormGroup legendText=\"Second restaurant's cuisine\">\n                  <RadioButtonGroup\n                    name=\"second-restaurants-cuisine-radio-button-group\"\n                    valueSelected=\"Thai\"\n                    onChange={(event) => this.setState({ secondRestaurantsCuisine: event })}\n                  >\n                    <RadioButton value=\"Thai\" labelText=\"Thai\" />\n                    <RadioButton value=\"Indian\" labelText=\"Indian\" />\n                    <RadioButton value=\"Japanese\" labelText=\"Japanese\" />\n                  </RadioButtonGroup>\n                </FormGroup>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <FormGroup legendText=\"Third restaurant's cuisine\">\n                  <RadioButtonGroup\n                    name=\"third-restaurants-cuisine-radio-button-group\"\n                    valueSelected=\"American\"\n                    onChange={(event) => this.setState({ thirdRestaurantsCuisine: event })}\n                  >\n                    <RadioButton value=\"American\" labelText=\"American\" />\n                    <RadioButton value=\"Bulgarian\" labelText=\"Bulgarian\" />\n                    <RadioButton value=\"Turkish\" labelText=\"Turkish\" />\n                  </RadioButtonGroup>\n                </FormGroup>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <div className=\"heading\"></div>\n                <h2 className=\"heading\">Beverage</h2>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <p className=\"description\">\n                  Pick the beverage that will be preferred by the agents.\n                </p>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <FormGroup legendText=\"Beverage\">\n                  <RadioButtonGroup\n                    name=\"beverage-radio-button-group\"\n                    valueSelected=\"Wine\"\n                    onChange={(event) => this.setState({ beverage: event })}\n                  >\n                    <RadioButton value=\"Wine\" labelText=\"Wine\" />\n                    <RadioButton value=\"Champagne\" labelText=\"Champagne\" />\n                    <RadioButton value=\"Cocktails\" labelText=\"Cocktails\" />\n                  </RadioButtonGroup>\n                </FormGroup>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <div className=\"heading\"></div>\n                <h2 className=\"heading\">Generate</h2>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <p className=\"description\">\n                  Click the button below to generate your custom dialogues.\n                  {this.state.isErrorNotificationVisible && (\n                    <InlineNotification\n                      hideCloseButton={true}\n                      kind=\"error\"\n                      title=\"Invalid names\"\n                      subtitle=\"Some of the names for the agents or restaurants are invalid.\"\n                    />\n                  )}\n                </p>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <Button onClick={this.generateDialogues}>\n                  Generate\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n        {this.state.simulation && (\n          <div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <div className=\"heading\"></div>\n                <h2 className=\"heading\">Remarks</h2>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <p>\n                  Check out your custom dialogues below.\n                  You can observe the differences between the two types speech act by speech act,\n                  but you can also reveal their full lengths at any point.\n                </p>\n                <p className=\"not-first\">\n                  While inspecting the persuasion dialogue, note how {this.state.simulation.agentNames[1]}\n                  &nbsp;asserts {this.state.simulation.restaurantNames[1]} as an acceptable choice at the very start.\n                  The agent then tries to prove that it is acceptable for the others\n                  as they make objections indicating points on which they wish to be convinced.\n                </p>\n                <p className=\"not-first\">\n                  On the other hand, {this.state.simulation.agentNames[1]} is not committed\n                  to their preferred option in the deliberation dialogue.\n                  The agents rather collectively introduce properties that are later either rejected or accepted\n                  as part of an agreed rule of what constitutes an acceptable restaurant.\n                </p>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-5 bx--offset-xl-2 bx--col-xl-4\">\n                <DialogueAccordion dialogue={this.state.simulation.persuasionDialogue} dialogueType=\"Persuasion\" />\n              </div>\n              <div className=\"bx--col-md-5 bx--col-xl-4\">\n                <DialogueAccordion dialogue={this.state.simulation.deliberationDialogue} dialogueType=\"Deliberation\" />\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <div className=\"heading\"></div>\n                <h2 className=\"heading\">Reset</h2>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <p className=\"description\">\n                  Click the button below to reset the dialogues and start over.\n                </p>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <Button kind=\"danger\" onClick={this.resetState}>\n                  Reset\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Generate;\n","import React, { Component } from \"react\";\nimport { Accordion, AccordionItem, ListItem, Tooltip, UnorderedList } from 'carbon-components-react';\n\nimport './DemoDialogue.css';\n\nclass DemoDialogue extends Component {\n  render() {\n    return (\n      <Accordion>\n        <AccordionItem\n          title={<div><strong>Jane</strong>: I wonder if Thai Palace has property healthy.\n            <Tooltip triggerText=\"&nbsp;\">\n              <p>Jane poses a question seeking information about Thai Palace and indicating that \"quality\" is a criterion she finds desirable.</p>\n            </Tooltip>\n          </div>}\n        >\n          <UnorderedList>\n            <ListItem className=\"list-item\">\n              Jane's commitment store:\n              <UnorderedList nested className=\"unordered-nested-list\">\n                <ListItem className=\"nested-list-item\">\n                  healthy(X):-cuisine(X,mediterranean).\n                  <Tooltip triggerText=\"&nbsp;\">\n                    <p>Jane considers a healthy restaurant to be one that offers mediterranean cuisine.</p>\n                  </Tooltip>\n                </ListItem>\n              </UnorderedList>\n            </ListItem>\n            <ListItem className=\"list-item\">\n              Harry's commitment store:\n              <UnorderedList nested className=\"unordered-nested-list\">\n              </UnorderedList>\n            </ListItem>\n          </UnorderedList>\n        </AccordionItem>\n        <AccordionItem\n          title={<div><strong>Harry</strong>: Thai Palace has property healthy.\n            <Tooltip triggerText=\"&nbsp;\">\n              <p>Harry asserts the claim as true in order to persuade Jane towards Thai Palace.</p>\n            </Tooltip>\n          </div>}\n        >\n          <UnorderedList>\n            <ListItem className=\"list-item\">\n              Jane's commitment store:\n              <UnorderedList nested className=\"unordered-nested-list\">\n                <ListItem className=\"nested-list-item\">\n                  healthy(X):-cuisine(X,mediterranean).\n                </ListItem>\n              </UnorderedList>\n            </ListItem>\n            <ListItem className=\"list-item\">\n              Harry's commitment store:\n              <UnorderedList nested className=\"unordered-nested-list\">\n                <ListItem className=\"nested-list-item\">\n                  healthy(thaiPalace).\n                </ListItem>\n              </UnorderedList>\n            </ListItem>\n          </UnorderedList>\n        </AccordionItem>\n        <AccordionItem\n          title={<div><strong>Jane</strong>: Why is it that Thai Palace has property healthy?\n            <Tooltip triggerText=\"&nbsp;\">\n              <p>Jane seeks reasoning for Harry's claim as she cannot derive it on her own.</p>\n            </Tooltip>\n          </div>}\n        >\n          <UnorderedList>\n            <ListItem className=\"list-item\">\n              Jane's commitment store:\n              <UnorderedList nested className=\"unordered-nested-list\">\n                <ListItem className=\"nested-list-item\">\n                  healthy(X):-cuisine(X,mediterranean).\n                </ListItem>\n              </UnorderedList>\n            </ListItem>\n            <ListItem className=\"list-item\">\n              Harry's commitment store:\n              <UnorderedList nested className=\"unordered-nested-list\">\n                <ListItem className=\"nested-list-item\">\n                  healthy(thaiPalace).\n                </ListItem>\n              </UnorderedList>\n            </ListItem>\n          </UnorderedList>\n        </AccordionItem>\n        <AccordionItem\n          title={<div><strong>Harry</strong>: Thai Palace has property healthy since Thai Palace has property vegetables.\n            <Tooltip triggerText=\"&nbsp;\">\n              <p>Harry offers reasoning for his claim and contributes a new rule for what constitutes a healthy restaurant.</p>\n            </Tooltip>\n          </div>}\n        >\n          <UnorderedList>\n            <ListItem className=\"list-item\">\n              Jane's commitment store:\n              <UnorderedList nested className=\"unordered-nested-list\">\n                <ListItem className=\"nested-list-item\">\n                  healthy(X):-cuisine(X,mediterranean).\n                </ListItem>\n                <ListItem className=\"nested-list-item\">\n                  healthy(X):-vegetables(X).\n                </ListItem>\n                <ListItem className=\"nested-list-item\">\n                  vegetables(X):-cuisine(X,thai).\n                </ListItem>\n                <ListItem className=\"nested-list-item\">\n                  cuisine(thaiPalace,thai).\n                </ListItem>\n              </UnorderedList>\n            </ListItem>\n            <ListItem className=\"list-item\">\n              Harry's commitment store:\n              <UnorderedList nested className=\"unordered-nested-list\">\n                <ListItem className=\"nested-list-item\">\n                  healthy(thaiPalace).\n                </ListItem>\n                <ListItem className=\"nested-list-item\">\n                  healthy(X):-vegetables(X).\n                </ListItem>\n                <ListItem className=\"nested-list-item\">\n                  vegetables(X):-cuisine(X,thai).\n                </ListItem>\n                <ListItem className=\"nested-list-item\">\n                  cuisine(thaiPalace,thai).\n                </ListItem>\n              </UnorderedList>\n            </ListItem>\n          </UnorderedList>\n        </AccordionItem>\n        <AccordionItem\n          title={<div><strong>Jane</strong>: I accept that Thai Palace has property healthy.\n            <Tooltip triggerText=\"&nbsp;\">\n              <p>Jane concedes to the claim as she now has the knowledge to derive it.</p>\n            </Tooltip>\n          </div>}\n        >\n          <UnorderedList>\n            <ListItem className=\"list-item\">\n              Jane's commitment store:\n              <UnorderedList nested className=\"unordered-nested-list\">\n                <ListItem className=\"nested-list-item\">\n                  healthy(X):-cuisine(X,mediterranean).\n                </ListItem>\n                <ListItem className=\"nested-list-item\">\n                  healthy(X):-vegetables(X).\n                </ListItem>\n                <ListItem className=\"nested-list-item\">\n                  vegetables(X):-cuisine(X,thai).\n                </ListItem>\n                <ListItem className=\"nested-list-item\">\n                  cuisine(thaiPalace,thai).\n                </ListItem>\n                <ListItem className=\"nested-list-item\">\n                  healthy(thaiPalace).\n                </ListItem>\n              </UnorderedList>\n            </ListItem>\n            <ListItem className=\"list-item\">\n              Harry's commitment store:\n              <UnorderedList nested className=\"unordered-nested-list\">\n                <ListItem className=\"nested-list-item\">\n                  healthy(thaiPalace).\n                </ListItem>\n                <ListItem className=\"nested-list-item\">\n                  healthy(X):-vegetables(X).\n                </ListItem>\n                <ListItem className=\"nested-list-item\">\n                  vegetables(X):-cuisine(X,thai).\n                </ListItem>\n                <ListItem className=\"nested-list-item\">\n                  cuisine(thaiPalace,thai).\n                </ListItem>\n              </UnorderedList>\n            </ListItem>\n          </UnorderedList>\n        </AccordionItem>\n      </Accordion>\n    );\n  }\n}\n\nexport default DemoDialogue;\n","import React, { Component } from 'react';\n\nimport DemoDialogue from './DemoDialogue';\n\nimport './Home.css'\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"bx--row\">\n          <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n            <div className=\"heading\"></div>\n            <h2 className=\"heading\">Welcome</h2>\n          </div>\n        </div>\n        <div className=\"bx--row\">\n          <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n            <p>\n              Diners' Discourse lets you customise and generate persuasion and deliberation dialogues\n              that are set in a classic restaurant selection scenario.\n              The application also allows you to observe the differences between the two types side-by-side\n              and to peek into the commitment stores of the participating agents at any point.\n            </p>\n            <p className=\"not-first\">\n              To learn more about the creation of Diners' Discourse\n              and to gain more insight into dialogue protocols, go to \"Background\".\n            </p>\n            <p className=\"not-first\">\n              To start generating your own dialogues, go to \"Generate\".\n            </p>\n          </div>\n        </div>\n        <div className=\"bx--row\">\n          <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n            <div className=\"heading\"></div>\n            <h2 className=\"heading\">Demo Dialogue</h2>\n          </div>\n        </div>\n        <div className=\"bx--row\">\n          <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n            <p className=\"description\">\n              Check out a snippet of a persuasion dialogue below.\n              You can see how the commitment stores of the agents evolve\n              as they carry out various speech acts by expanding the accordion components.\n              Hover over the tooltips for further explanations.\n            </p>\n          </div>\n        </div>\n        <div className=\"bx--row\">\n          <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n            <DemoDialogue />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Button, ContentSwitcher, Link, Switch } from 'carbon-components-react';\n\nimport Background from './Background';\nimport Generate from './Generate';\nimport Home from './Home';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      switchIndex: 0\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(event) {\n    this.setState({\n      switchIndex: event.index\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"announcement\">\n          <p className=\"announcement\">Check out the source code of this website.</p>\n          <Button small className=\"announcement\" kind=\"tertiary\" onClick={() => window.open('https://github.com/yankirchev/diners-discourse', '_blank').focus()}>\n            Go to GitHub\n          </Button>\n        </div>\n        <div className=\"header\">\n          <div className=\"bx--grid\">\n            <div className=\"bx--row\">\n              <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n                <h1 className=\"header\">Diners' Discourse</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--offset-md-1 bx--col-md-10 bx--offset-xl-2 bx--col-xl-8\">\n              <ContentSwitcher className=\"content-switcher\" onChange={this.onChange}>\n                <Switch name=\"home\" text=\"Home\" />\n                <Switch name=\"background\" text=\"Background\" />\n                <Switch name=\"generate\" text=\"Generate\" />\n              </ContentSwitcher>\n            </div>\n          </div>\n          <div hidden={this.state.switchIndex !== 0}>\n            <Home />\n          </div>\n          <div hidden={this.state.switchIndex !== 1}>\n            <Background />\n          </div>\n          <div hidden={this.state.switchIndex !== 2}>\n            <Generate />\n          </div>\n        </div>\n        <footer className=\"bx--footer bx--footer--bottom-fixed footer\">\n          <div className=\"bx--footer-info\">\n            <div className=\"bx--footer-info__item\">\n              <p className=\"bx--footer-label\">Copyright &copy; Yanko Kirchev 2019</p>\n              <Link href=\"mailto:sgykirch@liverpool.ac.uk\">Contact the author</Link>\n            </div>\n            <div className=\"bx--footer-info__item\">\n              <p className=\"bx--footer-label\">Powered by Carbon Components (React)</p>\n              <Link href=\"https://www.carbondesignsystem.com\">Carbon Design System</Link>\n            </div>\n            <div className=\"bx--footer-info__item\">\n              <p className=\"bx--footer-label\">Powered by Tau Prolog</p>\n              <Link href=\"http://tau-prolog.org\">Tau Prolog</Link>\n            </div>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}