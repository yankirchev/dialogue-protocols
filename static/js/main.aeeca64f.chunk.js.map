{"version":3,"sources":["DialogueAccordion.js","protocols/Agent.js","protocols/utils/helper.js","protocols/Dialogue.js","protocols/PersuasionDialogue.js","protocols/DeliberationDialogue.js","protocols/utils/generalKnowledgeBase.js","protocols/Simulation.js","Generate.js","App.js","serviceWorker.js","index.js"],"names":["DialogueAccordion","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentSpeechActIndex","decrementSpeechActIndex","bind","assertThisInitialized","incrementSpeechActIndex","setState","_this2","react_default","a","createElement","Accordion","className","props","dialogue","text","split","map","speechAct","speechActIndex","AccordionItem","key","title","UnorderedList","agents","agent","agentIndex","ListItem","name","nested","commitmentStoreHistory","commitment","commitmentIndex","Button","kind","disabled","onClick","length","Component","Agent","initialPreference","knowledgeBase","commitmentStore","commitmentDependencies","restaurant","preferredRestaurants","prologSession","pl","create","consult","query","answers","x","push","format_answer","includes","camelise","string","replace","match","index","toLowerCase","toUpperCase","decamelise","format","justifications","formattedText","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","value","_ref2","slicedToArray","justification","concat","translate","err","return","term","property","cost","translation","Dialogue","constructor","TypeError","newCommitmentStoresRecord","answer","Error","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","anyAgent","saveCommitmentStores","doesAppear","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","someAgent","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","substring","otherAgent","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","justificationsAsOneString","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","bodyOfRuleOfClaim","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_loop","_iterator9","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","PersuasionDialogue","proponentIndex","proponent","doesPrefer","isPreferableToAnotherAgent","termsToCheck","line","test","i","RegExp","termsToAdd","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","_iteratorNormalCompletion24","_didIteratorError24","_iteratorError24","_step24","_iterator24","_iteratorNormalCompletion25","_didIteratorError25","_iteratorError25","_step25","_iterator25","_iteratorNormalCompletion26","_didIteratorError26","_iteratorError26","_step26","_iterator26","DeliberationDialogue","agreedPreferenceRule","collectiveCommitmentStore","agreedRestaurant","doesAppearGlobally","doesAppearLocally","addTermToAgreedPreferenceRule","uninstatitatedJustifications","_iteratorNormalCompletion27","_didIteratorError27","_iteratorError27","_step27","_iterator27","_iteratorNormalCompletion28","_didIteratorError28","_iteratorError28","_step28","_iterator28","_iteratorNormalCompletion29","_didIteratorError29","_iteratorError29","_step29","_iterator29","generalKnowledgeBase","Simulation","agentNames","restaurantNames","restaurantCuisines","beverage","knowledgeBaseOne","knowledgeBaseTwo","knowledgeBaseThree","persuasionDialogue","claim","question","concede","isOver","_ref6","_ref5","deliberationDialogue","since","console","log","Generate","progressIndex","firstAgentsName","secondAgentsName","thirdAgentsName","isFirstAgentsNameInvalid","isSecondAgentsNameInvalid","isThirdAgentsNameInvalid","firstRestaurantsName","secondRestaurantsName","thirdRestaurantsName","isFirstRestaurantsNameInvalid","isSecondRestaurantsNameInvalid","isThirdRestaurantsNameInvalid","firstRestaurantsCuisine","secondRestaurantsCuisine","thirdRestaurantsCuisine","simulation","decrementProgressIndex","incrementProgressIndex","onChange","checkInputValues","resetState","event","defineProperty","target","id","hidden","TextInput","labelText","invalid","invalidText","FormGroup","legendText","RadioButtonGroup","valueSelected","RadioButton","ProgressIndicator","currentIndex","label","description","src_DialogueAccordion_0","simulatePersuasionDialogue","simulateDeliberationDialogue","App","switchIndex","ContentSwitcher","Switch","src_Generate_0","Footer","labelOne","linkTextOne","linkHrefOne","labelTwo","linkTextTwo","linkHrefTwo","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aeeca64f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Accordion, AccordionItem, UnorderedList, ListItem, Button } from 'carbon-components-react';\n\nimport './DialogueAccordion.css';\n\nclass DialogueAccordion extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      currentSpeechActIndex: 1\n    };\n\n    this.decrementSpeechActIndex = this.decrementSpeechActIndex.bind(this);\n    this.incrementSpeechActIndex = this.incrementSpeechActIndex.bind(this);\n  }\n\n  decrementSpeechActIndex() {\n    this.setState({\n      currentSpeechActIndex: this.state.currentSpeechActIndex - 1\n    });\n  }\n\n  incrementSpeechActIndex() {\n    this.setState({\n      currentSpeechActIndex: this.state.currentSpeechActIndex + 1\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Accordion className=\"dialogue-accordion\">\n          {this.props.dialogue.text.split('\\n').map((speechAct, speechActIndex) => speechAct !== '' && speechActIndex < this.state.currentSpeechActIndex && (\n            <AccordionItem key={speechActIndex} title={<div><strong>{speechAct.split(':')[0]}</strong>:{speechAct.split(':')[1]}</div>}>\n              <UnorderedList>\n                {this.props.dialogue.agents.map((agent, agentIndex) =>\n                  <ListItem key={agent.name}>\n                    {agent.name}'s commitment store:\n                    <UnorderedList nested>\n                      {this.props.dialogue.commitmentStoreHistory[speechActIndex][agentIndex].split('\\n').map((commitment, commitmentIndex) => commitment !== '' &&\n                        <ListItem key={commitmentIndex}>\n                          {commitment}\n                        </ListItem>\n                      )}\n                    </UnorderedList>\n                  </ListItem>\n                )}\n              </UnorderedList>\n            </AccordionItem>\n          ))}\n        </Accordion>\n        <div className=\"speech-acts-buttons-wrapper\">\n          <Button kind='secondary' disabled={this.state.currentSpeechActIndex === 1} onClick={this.decrementSpeechActIndex}>\n            Previous\n          </Button>\n          <Button kind='primary' disabled={this.state.currentSpeechActIndex === this.props.dialogue.commitmentStoreHistory.length} onClick={this.incrementSpeechActIndex}>\n            Next\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DialogueAccordion;\n","import pl from 'tau-prolog';\n\nclass Agent {\n  constructor(name, initialPreference, knowledgeBase) {\n    this.name = name;\n    this.initialPreference = initialPreference;\n    this.knowledgeBase = knowledgeBase;\n    this.commitmentStore = '';\n    this.commitmentDependencies = '';\n  }\n\n  doesPrefer(restaurant) {\n    const preferredRestaurants = [this.initialPreference];\n\n    const prologSession = pl.create();\n    prologSession.consult(this.knowledgeBase + this.commitmentStore);\n    prologSession.query('acceptableRestaurant(X).');\n    prologSession.answers(x => {\n      preferredRestaurants.push(pl.format_answer(x).split(\" \")[2]);\n    });\n\n    return preferredRestaurants.includes(restaurant);\n  }\n}\n\nexport default Agent;\n","function camelise(string) {\n  return string.replace(/[']/g, '').replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, (match, index) => {\n    if (+match === 0) {\n      return '';\n    }\n\n    return index === 0 ? match.toLowerCase() : match.toUpperCase();\n  });\n}\n\nfunction decamelise(string) {\n  return string\n    .replace(/([a-z\\d])([A-Z])/g, '$1 $2')\n    .replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1 $2')\n    .toLowerCase();\n}\n\nfunction format(justifications) {\n  let formattedText = '';\n\n  for (const [index, justification] of justifications.entries()) {\n    if (justifications.length === 1) {\n      formattedText += `${translate(justification)}`;\n    } else if (index === justifications.length - 1) {\n      formattedText += `${translate(justification)}`;\n    } else if (index !== justifications.length - 2) {\n      formattedText += `${translate(justification)}, `;\n    } else if (justifications.length >= 3 && index === justifications.length - 2) {\n      formattedText += `${translate(justification)}, and `;\n    } else if (justifications.length < 3 && index === justifications.length - 2) {\n      formattedText += `${translate(justification)} and `;\n    }\n  }\n\n  return formattedText;\n}\n\nfunction translate(term) {\n  const restaurant = term.match(/([A-Za-z0-9_])+/g)[1];\n  const property = term.match(/([A-Za-z0-9])+/g)[0];\n  const value = term.match(/([A-Za-z0-9_])+/g)[2];\n  const cost = term.match(/([A-Za-z0-9_])+/g)[3];\n\n  let translation = '';\n\n  if (restaurant !== '_') {\n    if (term.includes('\\\\+(')) {\n      translation = `${decamelise(restaurant)} lacks property ${decamelise(property)}`;\n    } else {\n      translation = `${decamelise(restaurant)} has property ${decamelise(property)}`;\n    }\n  } else {\n    translation = `property ${decamelise(property)}`;\n  }\n\n  if (value && value !== '_') {\n    translation += ` of value ${decamelise(value)}`;\n\n    if (cost && cost !== '_') {\n      translation += ` and cost ${decamelise(cost)}`;\n    }\n  } else if (cost && cost !== '_') {\n    translation += ` of cost ${decamelise(cost)}`;\n  }\n\n  return translation;\n}\n\nexport {\n  camelise,\n  decamelise,\n  format,\n  translate\n};\n","import pl from 'tau-prolog';\n\nimport { format, translate } from './utils/helper';\n\nclass Dialogue {\n  constructor(agents) {\n    if (new.target === Dialogue) {\n      throw new TypeError('Cannot construct Dialogue instances directly!');\n    }\n\n    this.agents = agents;\n    this.text = `${agents[0].name}: Where shall we eat?\\n`;\n    this.commitmentStoreHistory = [['', '', '']];\n  }\n\n  saveCommitmentStores() {\n    const newCommitmentStoresRecord = [];\n\n    for (const agent of this.agents) {\n      newCommitmentStoresRecord.push(agent.commitmentStore);\n    }\n\n    this.commitmentStoreHistory.push(newCommitmentStoresRecord);\n  }\n\n  // Claim(ag_i, l)\n  claim(agent, term) {\n    /*  PRE-CONDITIONS */\n\n    // demo(∏_ag_i ∪ Com_ag_i, l)\n    const prologSession = pl.create();\n    prologSession.consult(agent.knowledgeBase + agent.commitmentStore);\n    prologSession.query(term);\n    prologSession.answer(x => {\n      if (pl.format_answer(x) !== 'true ;') {\n        throw new Error(`Pre-conditions of ${agent.name} claiming \"${translate(term)}\" are not satisfied because ` +\n          `the agent cannot demonstrate the claim through their knowledge base and commitment store!`);\n      }\n    });\n\n    // ¬l ∈ Com_ag_j for any ag_j ∈ Ag\n    for (const anyAgent of this.agents) {\n      if (anyAgent.commitmentStore.includes(term)) {\n        throw new Error(`Pre-conditions of ${agent.name} claiming \"${translate(term)}\" are not satisfied because ` +\n          `${anyAgent.name}'s commitment store contains the claim!`);\n      }\n    }\n\n    /* POST-CONDITIONS */\n\n    // Com_ag_i ⇒ Com_ag_i ∪ l\n    agent.commitmentStore += `${term}\\n`;\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    this.text += `${agent.name}: ${translate(term)}.\\n`;\n    this.saveCommitmentStores();\n  }\n\n  // Why(ag_i, l)\n  why(agent, term) {\n    /*  PRE-CONDITIONS */\n\n    // not demo(∏_ag_i ∪ Com_ag_i, l)\n    const prologSession = pl.create();\n    prologSession.consult(agent.knowledgeBase + agent.commitmentStore);\n    prologSession.query(term);\n    prologSession.answer(x => {\n      if (pl.format_answer(x) === 'true ;') {\n        throw new Error(`Pre-conditions of ${agent.name} asking why \"${translate(term)}\" are not satisfied because ` +\n          `the agent can demonstrate the claim through their knowledge base and commitment store!`);\n      }\n    });\n\n    // for some agent ag_j ≠ ag_i, l ∈ Com_ag_j\n    let doesAppear = false;\n\n    for (const someAgent of this.agents) {\n      if (someAgent !== agent && someAgent.commitmentStore.includes(term)) {\n        doesAppear = true;\n      }\n    }\n\n    if (doesAppear === false) {\n      throw new Error(`Pre-conditions of ${agent.name} asking why \"${translate(term)}\" are not satisfied because ` +\n        `no other agent's commitment store contains the claim!`);\n    }\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    this.text += `${agent.name}: Why is it that ${translate(term)}?\\n`;\n    this.saveCommitmentStores();\n  }\n\n  // Concede(ag_i, l)\n  concede(agent, term) {\n    /* PRE-CONDITIONS */\n\n    // for some agent ag_j ≠ ag_i, l ∈ Com_ag_j\n    let doesAppear = false;\n\n    for (const someAgent of this.agents) {\n      if (someAgent !== agent && someAgent.commitmentStore.includes(term)) {\n        doesAppear = true;\n      }\n    }\n\n    if (doesAppear === false) {\n      throw new Error(`Pre-conditions of ${agent.name} conceding to \"${translate(term)}\" are not satisfied because ` +\n        `no other agent's commitment store contains the claim!`);\n    }\n\n    // not(¬l ∈ Com_ag_i)\n    if ((term.includes('\\\\+(') && (agent.commitmentStore.includes(`${term.substring(3, term.length - 2)}.`)))\n      || (!term.includes('\\\\+(') && agent.commitmentStore.includes(`\\\\+(${term.substring(0, term.length - 1)}).`))) {\n      throw new Error(`Pre-conditions of ${agent.name} conceding to \"${translate(term)}\" are not satisfied because ` +\n        `the agent's commitment store contains the negation of the claim!`);\n    }\n\n    /* POST-CONDITIONS */\n\n    // Com_ag_i ⇒ Com_ag_i ∪ l\n    if (!agent.commitmentStore.includes(term)) {\n      agent.commitmentStore += `${term}\\n`;\n    }\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    this.text += `${agent.name}: I accept that ${translate(term)}.\\n`;\n    this.saveCommitmentStores();\n  }\n\n  // Retract(ag_i, l)\n  retract(agent, term) {\n    /* PRE-CONDITIONS */\n\n    // not demo(∏_ag_i ∪ Com_ag_i \\ l, l)\n    const prologSession = pl.create();\n    prologSession.consult(agent.knowledgeBase + agent.commitmentStore.replace(term, ''));\n    prologSession.query(term);\n    prologSession.answer(x => {\n      if (pl.format_answer(x) === 'true ;') {\n        throw new Error(`Pre-conditions of ${agent.name} retracting \"${translate(term)}\" are not satisfied because ` +\n          `the agent can demonstrate the claim through their knowledge base and remaining commitment store!`);\n      }\n    });\n\n    // l ∈ Com_ag_i\n    if (!agent.commitmentStore.includes(term)) {\n      throw new Error(`Pre-conditions of ${agent.name} retracting \"${translate(term)}\" are not satisfied because ` +\n        `the agent's commitment store does not contain the claim!`);\n    }\n\n    /* POST-CONDITIONS */\n\n    // Com_ag_i ⇒ Com_ag_i \\ l\n    agent.commitmentStore = agent.commitmentStore.replace(`${term}\\n`, '');\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    this.text += `${agent.name}: I take back that ${translate(term)}.\\n`;\n    this.saveCommitmentStores();\n  }\n\n  // Since(ag_i, l, ∏)\n  since(agent, otherAgent, term, justifications) {\n    /* PRE-CONDITIONS */\n\n    // l ∈ Com_ag_i\n    if (!agent.commitmentStore.includes(term)) {\n      throw new Error(`Pre-conditions of ${agent.name} offering reasoning for \"${translate(term)}\" are not satisfied because ` +\n        `the agent's commitment store does not contain the claim!`);\n    }\n\n    // demo(∏ ∪ Com_ag_j, l) for some ∏ ⊆ ∏_ag_i\n    for (const justification of justifications) {\n      if (!agent.knowledgeBase.includes(justification)) {\n        throw new Error(`Pre-conditions of ${agent.name} offering reasoning for \"${translate(term)}\" are not satisfied because ` +\n          `the agent's knowledge base does not contain all justifications!`);\n      }\n    }\n\n    let justificationsAsOneString = '';\n\n    for (const justification of justifications) {\n      justificationsAsOneString += `${justification}\\n`;\n    }\n\n    const prologSession = pl.create();\n    prologSession.consult(justificationsAsOneString + otherAgent.commitmentStore + otherAgent.commitmentDependencies);\n    prologSession.query(term);\n    prologSession.answer(x => {\n      if (pl.format_answer(x) !== 'true ;') {\n        throw new Error(`Pre-conditions of ${agent.name} offering reasoning for \"${translate(term)}\" are not satisfied because ` +\n          `${otherAgent.name} cannot demonstrate the claim through the justifications and their commitment store!`);\n      }\n    });\n\n    /* POST-CONDITIONS */\n\n    // Com_ag_i ⇒ Com_ag_i ∪ ∏\n    for (const justification of justifications) {\n      if (!agent.commitmentStore.includes(justification)) {\n        agent.commitmentStore += `${justification}\\n`;\n      }\n    }\n\n    // Com_ag_j ⇒ Com_ag_j ∪ ∏\n    for (const justification of justifications) {\n      if (!otherAgent.commitmentStore.includes(justification)) {\n        otherAgent.commitmentStore += `${justification}\\n`;\n      }\n    }\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    let bodyOfRuleOfClaim = justifications[0].split('-')[1].split(', ')[0].replace(/X/g, term.match(/([A-Za-z0-9])+/g)[1]);\n\n    for (const match of bodyOfRuleOfClaim.match(/([A-Za-z0-9])+/g)) {\n      if (match[0] !== match[0].toLowerCase()) {\n        const prologSession = pl.create();\n        prologSession.consult(justificationsAsOneString + otherAgent.commitmentStore + otherAgent.commitmentDependencies);\n\n        if (bodyOfRuleOfClaim[bodyOfRuleOfClaim.length - 1] !== '.' && bodyOfRuleOfClaim[bodyOfRuleOfClaim.length - 2] !== '.') {\n          bodyOfRuleOfClaim = bodyOfRuleOfClaim + '.'\n        }\n\n        prologSession.query(bodyOfRuleOfClaim);\n        prologSession.answer(x => bodyOfRuleOfClaim = bodyOfRuleOfClaim.replace(match, pl.format_answer(x).split(\" \")[2].replace(/,|\\./g, ''))); // eslint-disable-line no-loop-func\n      }\n    }\n\n    this.text += `${agent.name}: ${translate(term)} since ${format(bodyOfRuleOfClaim.split('),'))}.\\n`;\n    this.saveCommitmentStores();\n  }\n\n  // Question(ag_i, l)\n  question(agent, term) {\n    /* PRE-CONDITIONS */\n\n    // ∀(ag_j) ∈ Ag, l ∉ Com_ag_j\n    for (const anyAgent of this.agents) {\n      if (anyAgent.commitmentStore.includes(term)) {\n        throw new Error(`Pre-conditions of ${agent.name} questioning if \"${translate(term)}\" are not satisfied because ` +\n          `${anyAgent.name}'s commitment store contains the claim!`);\n      }\n    }\n\n    // not demo(∏_ag_i ∪ Com_ag_i, l)\n    const prologSession = pl.create();\n    prologSession.consult(agent.knowledgeBase + agent.commitmentStore);\n    prologSession.query(term);\n    prologSession.answer(x => {\n      if (pl.format_answer(x) === 'true ;') {\n        throw new Error(`Pre-conditions of ${agent.name} questioning if \"${translate(term)}\" are not satisfied because ` +\n          `the agent can demonstrate the claim through their knowledge base and commitment store!`);\n      }\n    });\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    this.text += `${agent.name}: I wonder if ${translate(term)}.\\n`;\n    this.saveCommitmentStores();\n  }\n}\n\nexport default Dialogue;\n","import pl from 'tau-prolog';\n\nimport Dialogue from './Dialogue';\n\nimport { translate } from './utils/helper';\n\nclass PersuasionDialogue extends Dialogue {\n  constructor(agents, proponentIndex) {\n    super(agents);\n\n    this.proponent = agents[proponentIndex];\n  }\n\n  isOver() {\n    for (const agent of this.agents) {\n      if (!agent.commitmentStore.includes(`acceptableRestaurant(${this.proponent.initialPreference}).`)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // (Counter)Claim(ag_i, l) | (Counter)Claim(O, p(a))\n  claim(agent, term) {\n    const restaurant = term.match(/([A-Za-z0-9])+/g)[1];\n    const property = term.match(/([A-Za-z0-9])+/g)[0];\n\n    /* GENERAL PRE-CONDITIONS */\n\n    // demo(∏_ag_i ∪ Com_ag_i, l)\n    const prologSession = pl.create();\n    prologSession.consult(agent.knowledgeBase + agent.commitmentStore);\n    prologSession.query(term);\n    prologSession.answer(x => {\n      if (pl.format_answer(x) !== 'true ;') {\n        throw new Error(`Pre-conditions of ${agent.name} claiming \"${translate(term)}\" are not satisfied because ` +\n          `the agent cannot demonstrate the claim through their knowledge base and commitment store!`);\n      }\n    });\n\n    // ¬l ∈ Com_ag_j for any ag_j ∈ Ag\n    for (const anyAgent of this.agents) {\n      if (anyAgent.commitmentStore.includes(term)) {\n        throw new Error(`Pre-conditions of ${agent.name} claiming \"${translate(term)}\" are not satisfied because ` +\n          `${anyAgent.name}'s commitment store contains the claim!`);\n      }\n    }\n\n    /*  TYPE-SPECIFIC PRE-CONDITIONS */\n\n    if (agent !== this.proponent) {\n      if (!agent.doesPrefer(restaurant)) {\n        // for some agent ag_j ≠ O, preferable(ag_j, a)\n        let isPreferableToAnotherAgent = false;\n\n        for (const otherAgent of this.agents) {\n          if (otherAgent !== agent && otherAgent.doesPrefer(restaurant)) {\n            isPreferableToAnotherAgent = true;\n          }\n        }\n\n        if (!isPreferableToAnotherAgent) {\n          throw new Error(`Pre-conditions of ${agent.name} claiming \"${translate(term)}\" are not satisfied because ` +\n            `the restaurant is not preferable to any other agent!`);\n        }\n      }\n\n      // p(X) ∈ B, where B is the set of terms in the body of the preference rule of O\n      let termsToCheck = [];\n\n      for (const line of agent.knowledgeBase.split('\\n')) {\n        if (/^acceptableRestaurant\\(X/.test(line)) {\n          for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n            if (!termsToCheck.includes(match)) {\n              termsToCheck.push(match);\n            }\n          }\n        }\n      }\n\n      for (let i = 0; i < termsToCheck.length; i++) {\n        for (const line of agent.knowledgeBase.split('\\n')) {\n          if (new RegExp('^' + termsToCheck[i] + '\\\\(X').test(line)) {\n            for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n              if (!termsToCheck.includes(match)) {\n                termsToCheck.push(match);\n              }\n            }\n          }\n        }\n      }\n\n      if (!termsToCheck.includes(property)) {\n        throw new Error(`Pre-conditions of ${agent.name} claiming \"${translate(term)}\" are not satisfied because ` +\n          `the claim does not correspond to a feature in the body of the agent's preference rule!`);\n      }\n    }\n\n    /* GENERAL POST-CONDITIONS */\n\n    // Com_ag_i ⇒ Com_ag_i ∪ l\n    agent.commitmentStore += `${term}\\n`;\n\n    /* TYPE-SPECIFIC POST-CONDITIONS */\n\n    if (agent !== this.proponent) {\n      if (agent.doesPrefer(restaurant)) {\n        // Com_O ⇒ Com_O ∪ acceptableRestaurant(a) iff demo(∏_O ∪ Com_O, acceptableRestaurant(a))\n        prologSession.query(`acceptableRestaurant(${restaurant}).`);\n        prologSession.answer(x => {\n          if (pl.format_answer(x) === 'true ;' && !agent.commitmentStore.includes(`acceptableRestaurant(${restaurant}).`)) {\n            agent.commitmentStore += `acceptableRestaurant(${restaurant}).\\n`;\n          }\n        });\n      }\n\n      // Com_O ⇒ Com_O ∪ (p(X) ∈ B), where B is the set of terms in the body of the preference rule of O\n      let termsToAdd = [];\n\n      for (const line of (agent.knowledgeBase + agent.commitmentStore).split('\\n')) {\n        if (new RegExp('^' + property + '\\\\(X(?=\\\\)|,[A-Z]|,' + term.match(/([A-Za-z0-9_])+/g)[2] + ')').test(line)) {\n          if (!agent.commitmentStore.includes(line)) {\n            agent.commitmentStore += `${line}\\n`;\n          }\n\n          termsToAdd = termsToAdd.concat(line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g));\n        }\n      }\n\n      for (let i = 0; i < termsToAdd.length; i++) {\n        for (const line of agent.knowledgeBase.split('\\n')) {\n          if (new RegExp('^' + termsToAdd[i] + '\\\\(').test(line)) {\n            if (line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n              for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n                if (!termsToAdd.includes(match)) {\n                  termsToAdd.push(match);\n                }\n              }\n            }\n\n            if (!agent.commitmentStore.includes(line) && !agent.commitmentDependencies.includes(line)) {\n              agent.commitmentDependencies += `${line}\\n`;\n            }\n          }\n        }\n      }\n    }\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    if (agent.doesPrefer(restaurant)) {\n      this.text += `${agent.name}: ${translate(term)}.\\n`;\n    } else {\n      this.text += `${agent.name}: But ${translate(term)}.\\n`;\n    }\n\n    this.saveCommitmentStores();\n  }\n\n  // Concede(ag_i, l) | Concede(O, p(a))\n  concede(agent, term) {\n    const property = term.match(/([A-Za-z0-9])+/g)[0];\n\n    /* GENERAL PRE-CONDITIONS */\n\n    // for some agent ag_j ≠ ag_i, l ∈ Com_ag_j\n    let doesAppear = false;\n\n    for (const someAgent of this.agents) {\n      if (someAgent !== agent && someAgent.commitmentStore.includes(term)) {\n        doesAppear = true;\n      }\n    }\n\n    if (doesAppear === false) {\n      throw new Error(`Pre-conditions of ${agent.name} conceding to \"${translate(term)}\" are not satisfied because ` +\n        `no other agent's commitment store contains the claim!`);\n    }\n\n    // not(¬l ∈ Com_ag_i)\n    if ((term.includes('\\\\+(') && (agent.commitmentStore.includes(`${term.substring(3, term.length - 2)}.`)))\n      || (!term.includes('\\\\+(') && agent.commitmentStore.includes(`\\\\+(${term.substring(0, term.length - 1)}).`))) {\n      throw new Error(`Pre-conditions of ${agent.name} conceding to \"${translate(term)}\" are not satisfied because ` +\n        `the agent's commitment store contains the negation of the claim!`);\n    }\n\n    /* TYPE-SPECIFIC PRE-CONDITIONS */\n\n    if (agent !== this.proponent) {\n      // p(X) ∈ B, where B is the set of terms in the body of the preference rule of O\n      let termsToCheck = ['acceptableRestaurant'];\n\n      for (const line of agent.knowledgeBase.split('\\n')) {\n        if (/^acceptableRestaurant\\(X/.test(line)) {\n          for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n            if (!termsToCheck.includes(match)) {\n              termsToCheck.push(match);\n            }\n          }\n        }\n      }\n\n      for (let i = 0; i < termsToCheck.length; i++) {\n        for (const line of agent.knowledgeBase.split('\\n')) {\n          if (new RegExp('^' + termsToCheck[i] + '\\\\(X').test(line)) {\n            for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n              if (!termsToCheck.includes(match)) {\n                termsToCheck.push(match);\n              }\n            }\n          }\n        }\n      }\n\n      if (!termsToCheck.includes(property)) {\n        throw new Error(`Pre-conditions of ${agent.name} conceding to \"${translate(term)}\" are not satisfied because ` +\n          `the claim does not correspond to a feature in the body of the agent's preference rule!`);\n      }\n    }\n\n    /* GENERAL POST-CONDITIONS */\n\n    // Com_ag_i ⇒ Com_ag_i ∪ l\n    if (!agent.commitmentStore.includes(term)) {\n      agent.commitmentStore += `${term}\\n`;\n    }\n\n    /* TYPE-SPECIFIC POST-CONDITIONS */\n\n    if (agent !== this.proponent) {\n      // Com_O ⇒ Com_O ∪ (p(X) ∈ B), where B is the set of terms in the body of the preference rule of O\n      let termsToAdd = [];\n\n      for (const line of (agent.knowledgeBase + agent.commitmentStore).split('\\n')) {\n        if (new RegExp('^' + property + '\\\\(X(?=\\\\)|,[A-Z]|,' + term.match(/([A-Za-z0-9_])+/g)[2] + ')').test(line)) {\n          if (!agent.commitmentStore.includes(line)) {\n            agent.commitmentStore += `${line}\\n`;\n          }\n\n          termsToAdd = termsToAdd.concat(line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g));\n        }\n      }\n\n      for (let i = 0; i < termsToAdd.length; i++) {\n        for (const line of agent.knowledgeBase.split('\\n')) {\n          if (new RegExp('^' + termsToAdd[i] + '\\\\(').test(line)) {\n            if (line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n              for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n                if (!termsToAdd.includes(match)) {\n                  termsToAdd.push(match);\n                }\n              }\n            }\n\n            if (!agent.commitmentStore.includes(line) && !agent.commitmentDependencies.includes(line)) {\n              agent.commitmentDependencies += `${line}\\n`;\n            }\n          }\n        }\n      }\n    }\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    this.text += `${agent.name}: I accept that ${translate(term)}.\\n`;\n    this.saveCommitmentStores();\n  }\n\n  // Question(ag_i, l) | Question(O,p(a))\n  question(agent, term) {\n    const property = term.match(/([A-Za-z0-9])+/g)[0];\n\n    /* GENERAL PRE-CONDITIONS */\n\n    // ∀(ag_j) ∈ Ag, l ∉ Com_ag_j\n    for (const anyAgent of this.agents) {\n      if (anyAgent.commitmentStore.includes(term)) {\n        throw new Error(`Pre-conditions of ${agent.name} questioning if \"${translate(term)}\" are not satisfied because ` +\n          `${anyAgent.name}'s commitment store contains the claim!`);\n      }\n    }\n\n    // not demo(∏_ag_i ∪ Com_ag_i, l)\n    const prologSession = pl.create();\n    prologSession.consult(agent.knowledgeBase + agent.commitmentStore);\n    prologSession.query(term);\n    prologSession.answer(x => {\n      if (pl.format_answer(x) === 'true ;') {\n        throw new Error(`Pre-conditions of ${agent.name} questioning if \"${translate(term)}\" are not satisfied because ` +\n          `the agent can demonstrate the claim through their knowledge base and commitment store!`);\n      }\n    });\n\n    /* TYPE-SPECIFIC PRE-CONDITIONS */\n\n    if (agent !== this.proponent) {\n      // p(X) ∈ B, where B is the set of terms in the body of the preference rule of O\n      let termsToCheck = [];\n\n      for (const line of agent.knowledgeBase.split('\\n')) {\n        if (/^acceptableRestaurant\\(X/.test(line)) {\n          for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n            if (!termsToCheck.includes(match)) {\n              termsToCheck.push(match);\n            }\n          }\n        }\n      }\n\n      for (let i = 0; i < termsToCheck.length; i++) {\n        for (const line of agent.knowledgeBase.split('\\n')) {\n          if (new RegExp('^' + termsToCheck[i] + '\\\\(X').test(line)) {\n            for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n              if (!termsToCheck.includes(match)) {\n                termsToCheck.push(match);\n              }\n            }\n          }\n        }\n      }\n\n      if (!termsToCheck.includes(property)) {\n        throw new Error(`Pre-conditions of ${agent.name} questioning if \"${translate(term)}\" are not satisfied because ` +\n          `the claim does not correspond to a feature in the body of the agent's preference rule!`);\n      }\n    }\n\n    /* TYPE-SPECIFIC POST-CONDITIONS */\n\n    if (agent !== this.proponent) {\n      // Com_O ⇒ Com_O ∪ (p(X) ∈ B), where B is the set of terms in the body of the preference rule of O\n      let termsToAdd = [];\n\n      for (const line of (agent.knowledgeBase + agent.commitmentStore).split('\\n')) {\n        if (new RegExp('^' + property + '\\\\(X(?=\\\\)|,[A-Z]|,' + term.match(/([A-Za-z0-9_])+/g)[2] + ')').test(line)) {\n          if (!agent.commitmentStore.includes(line)) {\n            agent.commitmentStore += `${line}\\n`;\n          }\n\n          termsToAdd = termsToAdd.concat(line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g));\n        }\n      }\n\n      for (let i = 0; i < termsToAdd.length; i++) {\n        for (const line of agent.knowledgeBase.split('\\n')) {\n          if (new RegExp('^' + termsToAdd[i] + '\\\\(').test(line)) {\n            if (line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n              for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n                if (!termsToAdd.includes(match)) {\n                  termsToAdd.push(match);\n                }\n              }\n            }\n\n            if (!agent.commitmentStore.includes(line) && !agent.commitmentDependencies.includes(line)) {\n              agent.commitmentDependencies += `${line}\\n`;\n            }\n          }\n        }\n      }\n    }\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    this.text += `${agent.name}: I wonder if ${translate(term)}.\\n`;\n    this.saveCommitmentStores();\n  }\n}\n\nexport default PersuasionDialogue;\n","import pl from 'tau-prolog';\n\nimport Dialogue from './Dialogue';\n\nimport { decamelise, format, translate } from './utils/helper';\n\nclass DeliberationDialogue extends Dialogue {\n  constructor(agents) {\n    super(agents);\n\n    this.agreedPreferenceRule = 'acceptableRestaurant(X):-';\n  }\n\n  isOver() {\n    let collectiveCommitmentStore = '';\n\n    for (const agent of this.agents) {\n      for (const line of agent.commitmentStore.split('\\n')) {\n        if (!/^acceptableRestaurant\\(/.test(line)) {\n          collectiveCommitmentStore += `${line}\\n`;\n        }\n      }\n    }\n\n    collectiveCommitmentStore += this.agreedPreferenceRule;\n\n    let agreedRestaurant = '';\n\n    const prologSession = pl.create();\n    prologSession.consult(collectiveCommitmentStore);\n    prologSession.query('acceptableRestaurant(X).');\n    prologSession.answer(x => {\n      agreedRestaurant = pl.format_answer(x).split(\" \")[2];\n    });\n\n    for (const agent of this.agents) {\n      if (!agent.commitmentStore.includes(`acceptableRestaurant(${agreedRestaurant})`))\n        return false;\n    }\n\n    return true;\n  }\n\n  addTermToAgreedPreferenceRule(term) {\n    const restaurant = term.match(/([A-Za-z0-9_])+/g)[1];\n\n    if (!this.agreedPreferenceRule.includes(term.substring(0, term.length - 1).replace(restaurant, 'X'))) {\n      if (this.agreedPreferenceRule[this.agreedPreferenceRule.length - 1] === '-') {\n        this.agreedPreferenceRule += term.replace(restaurant, 'X');\n      } else {\n        this.agreedPreferenceRule = `${this.agreedPreferenceRule.substring(0, this.agreedPreferenceRule.length - 1)},${term.replace(restaurant, 'X')}`;\n      }\n    }\n  }\n\n  // (Counter)Claim(ag_i, l) | (Counter)Claim(O, p(a))\n  claim(agent, term) {\n    const restaurant = term.match(/([A-Za-z0-9])+/g)[1];\n    const property = term.match(/([A-Za-z0-9])+/g)[0];\n\n    /* GENERAL PRE-CONDITIONS */\n\n    // demo(∏_ag_i ∪ Com_ag_i, l)\n    const prologSession = pl.create();\n    prologSession.consult(agent.knowledgeBase + agent.commitmentStore);\n    prologSession.query(term);\n    prologSession.answer(x => {\n      if (pl.format_answer(x) !== 'true ;') {\n        throw new Error(`Pre-conditions of ${agent.name} claiming \"${translate(term)}\" are not satisfied because ` +\n          `the agent cannot demonstrate the claim through their knowledge base and commitment store!`);\n      }\n    });\n\n    // ¬l ∈ Com_ag_j for any ag_j ∈ Ag\n    for (const anyAgent of this.agents) {\n      if (anyAgent.commitmentStore.includes(term)) {\n        throw new Error(`Pre-conditions of ${agent.name} claiming \"${translate(term)}\" are not satisfied because ` +\n          `${anyAgent.name}'s commitment store contains the claim!`);\n      }\n    }\n\n    /*  TYPE-SPECIFIC PRE-CONDITIONS */\n\n    if (!agent.doesPrefer(restaurant)) {\n      // for some agent ag_j ≠ O, preferable(ag_j, a)\n      let isPreferableToAnotherAgent = false;\n\n      for (const otherAgent of this.agents) {\n        if (otherAgent !== agent && otherAgent.doesPrefer(restaurant)) {\n          isPreferableToAnotherAgent = true;\n        }\n      }\n\n      if (!isPreferableToAnotherAgent) {\n        throw new Error(`Pre-conditions of ${agent.name} claiming \"${translate(term)}\" are not satisfied because ` +\n          `the restaurant is not preferable to any other agent!`);\n      }\n    }\n\n    // p(X) ∈ B, where B is the set of terms in the body of the preference rule of O\n    let termsToCheck = [];\n\n    for (const line of agent.knowledgeBase.split('\\n')) {\n      if (/^acceptableRestaurant\\(X/.test(line)) {\n        for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n          if (!termsToCheck.includes(match)) {\n            termsToCheck.push(match);\n          }\n        }\n      }\n    }\n\n    for (let i = 0; i < termsToCheck.length; i++) {\n      for (const line of agent.knowledgeBase.split('\\n')) {\n        if (new RegExp('^' + termsToCheck[i] + '\\\\(X').test(line)) {\n          for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n            if (!termsToCheck.includes(match)) {\n              termsToCheck.push(match);\n            }\n          }\n        }\n      }\n    }\n\n    if (!termsToCheck.includes(property)) {\n      throw new Error(`Pre-conditions of ${agent.name} claiming \"${translate(term)}\" are not satisfied because ` +\n        `the claim does not correspond to a feature in the body of the agent's preference rule!`);\n    }\n\n    /* GENERAL POST-CONDITIONS */\n\n    // Com_ag_i ⇒ Com_ag_i ∪ l\n    agent.commitmentStore += `${term}\\n`;\n\n    /* TYPE-SPECIFIC POST-CONDITIONS */\n\n    if (agent.doesPrefer(restaurant)) {\n      // Com_O ⇒ Com_O ∪ acceptableRestaurant(a) iff demo(∏_O ∪ Com_O, acceptableRestaurant(a))\n      prologSession.query(`acceptableRestaurant(${restaurant}).`);\n      prologSession.answer(x => {\n        if (pl.format_answer(x) === 'true ;' && !agent.commitmentStore.includes(`acceptableRestaurant(${restaurant}).`)) {\n          agent.commitmentStore += `acceptableRestaurant(${restaurant}).\\n`;\n        }\n      });\n    }\n\n    // Com_O ⇒ Com_O ∪ (p(X) ∈ B), where B is the set of terms in the body of the preference rule of O\n    let termsToAdd = [];\n\n    for (const line of (agent.knowledgeBase + agent.commitmentStore).split('\\n')) {\n      if (new RegExp('^' + property + '\\\\(X(?=\\\\)|,[A-Z]|,' + term.match(/([A-Za-z0-9_])+/g)[2] + ')').test(line)) {\n        if (!agent.commitmentStore.includes(line)) {\n          agent.commitmentStore += `${line}\\n`;\n        }\n\n        termsToAdd = termsToAdd.concat(line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g));\n      }\n    }\n\n    for (let i = 0; i < termsToAdd.length; i++) {\n      for (const line of agent.knowledgeBase.split('\\n')) {\n        if (new RegExp('^' + termsToAdd[i] + '\\\\(').test(line)) {\n          if (line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n            for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n              if (!termsToAdd.includes(match)) {\n                termsToAdd.push(match);\n              }\n            }\n          }\n\n          if (!agent.commitmentStore.includes(line) && !agent.commitmentDependencies.includes(line)) {\n            agent.commitmentDependencies += `${line}\\n`;\n          }\n        }\n      }\n    }\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    if (agent.doesPrefer(restaurant)) {\n      this.text += `${agent.name}: ${translate(term)}.\\n`;\n    } else {\n      this.text += `${agent.name}: But ${translate(term)}.\\n`;\n    }\n\n    this.saveCommitmentStores();\n  }\n\n  // Since(ag_i, l, ∏) | ConcedingSince(ag_i, g(a), p(a))\n  since(agent, otherAgent, term, justifications) {\n    const restaurant = term.match(/([A-Za-z0-9])+/g)[1];\n    const prologSession = pl.create();\n\n    let justificationsAsOneString = '';\n\n    for (const justification of justifications) {\n      justificationsAsOneString += `${justification}\\n`;\n    }\n\n    if (!/^acceptableRestaurant\\(/.test(term)) {\n      // Since(ag_i, l, ∏)\n\n      /* GENERAL PRE-CONDITIONS */\n\n      // l ∈ Com_ag_i\n      if (!agent.commitmentStore.includes(term)) {\n        throw new Error(`Pre-conditions of ${agent.name} offering reasoning for \"${translate(term)}\" are not satisfied because ` +\n          `the agent's commitment store does not contain the claim!`);\n      }\n\n      // demo(∏ ∪ Com_ag_j, l) for some ∏ ⊆ ∏_ag_i\n      for (const justification of justifications) {\n        if (!agent.knowledgeBase.includes(justification)) {\n          throw new Error(`Pre-conditions of ${agent.name} offering reasoning for \"${translate(term)}\" are not satisfied because ` +\n            `the agent's knowledge base does not contain all justifications!`);\n        }\n      }\n\n      prologSession.consult(justificationsAsOneString + otherAgent.commitmentStore + otherAgent.commitmentDependencies);\n      prologSession.query(term);\n      prologSession.answer(x => {\n        if (pl.format_answer(x) !== 'true ;') {\n          throw new Error(`Pre-conditions of ${agent.name} offering reasoning for \"${translate(term)}\" are not satisfied because ` +\n            `${otherAgent.name} cannot demonstrate the claim through the justifications and their commitment store!`);\n        }\n      });\n\n      /* GENERAL POST-CONDITIONS */\n\n      // Com_ag_i ⇒ Com_ag_i ∪ ∏\n      for (const justification of justifications) {\n        if (!agent.commitmentStore.includes(justification)) {\n          agent.commitmentStore += `${justification}\\n`;\n        }\n      }\n\n      // Com_ag_j ⇒ Com_ag_j ∪ ∏\n      for (const justification of justifications) {\n        if (!otherAgent.commitmentStore.includes(justification)) {\n          otherAgent.commitmentStore += `${justification}\\n`;\n        }\n      }\n\n      /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n      let bodyOfRuleOfClaim = justifications[0].split('-')[1].split(', ')[0].replace(/X/g, restaurant);\n\n      for (const match of bodyOfRuleOfClaim.match(/([A-Za-z0-9])+/g)) {\n        if (match[0] !== match[0].toLowerCase()) {\n          const prologSession = pl.create();\n          prologSession.consult(justificationsAsOneString + otherAgent.commitmentStore + otherAgent.commitmentDependencies);\n\n          if (bodyOfRuleOfClaim[bodyOfRuleOfClaim.length - 1] !== '.' && bodyOfRuleOfClaim[bodyOfRuleOfClaim.length - 2] !== '.') {\n            bodyOfRuleOfClaim = bodyOfRuleOfClaim + '.'\n          }\n\n          prologSession.query(bodyOfRuleOfClaim);\n          prologSession.answer(x => bodyOfRuleOfClaim = bodyOfRuleOfClaim.replace(match, pl.format_answer(x).split(\" \")[2].replace(/,|\\./g, ''))); // eslint-disable-line no-loop-func\n        }\n      }\n\n      this.text += `${agent.name}: ${translate(term)} since ${format(bodyOfRuleOfClaim.split('),'))}.\\n`;\n    } else {\n      // ConcedingSince(ag_i, g(a), p(a))\n\n      /* TYPE-SPECIFIC PRE-CONDITIONS */\n\n      // demo(∏_ag_i ∪ Com_ag_i ∪ p(a), g(a))\n      prologSession.consult(agent.knowledgeBase + agent.commitmentStore + justificationsAsOneString);\n      prologSession.query(term);\n      prologSession.answer(x => {\n        if (pl.format_answer(x) !== 'true ;') {\n          throw new Error(`Pre-conditions of ${agent.name} offering reasoning for \"${translate(term)}\" are not satisfied because ` +\n            `the agent cannot demonstrate the claim through their knowledge base, commitment store, and the justifications!`);\n        }\n      });\n\n      // p(a) ∈ Com_ag_j for some ag_j ≠ ag_i\n      let doesAppearGlobally = false;\n\n      for (const someAgent of this.agents) {\n        let doesAppearLocally = true;\n\n        for (const justification of justifications) {\n          if (someAgent !== agent && !someAgent.commitmentStore.includes(justification)) {\n            doesAppearLocally = false;\n          }\n        }\n\n        if (someAgent !== agent && doesAppearLocally === true) {\n          doesAppearGlobally = true;\n        }\n      }\n\n      if (doesAppearGlobally === false) {\n        throw new Error(`Pre-conditions of ${agent.name} offering reasoning for \"${translate(term)}\" are not satisfied because ` +\n          `no other agent's commitment store contains the justifications!`);\n      }\n\n      /* ADD JUSTIFICATIONS TO BODY OF AGREED PREFERENCE RULE */\n\n      for (const justification of justifications) {\n        this.addTermToAgreedPreferenceRule(justification);\n      }\n\n      /* GENERAL POST-CONDITIONS */\n\n      // Com_ag_i ⇒ Com_ag_i ∪ ∏\n      for (const justification of justifications) {\n        if (!agent.commitmentStore.includes(justification)) {\n          agent.commitmentStore += `${justification}\\n`;\n        }\n      }\n\n      /* TYPE-SPECIFIC POST-CONDITIONS */\n\n      // Com_O ⇒ Com_O ∪ p(X) ∈ B, where B is the set of terms in the body of the agreed preference rule\n      for (const justification of justifications) {\n        let termsToAdd = [];\n\n        for (const line of (agent.knowledgeBase + agent.commitmentStore).split('\\n')) {\n          if (new RegExp('^' + justification.match(/([A-Za-z0-9_])+/g)[0] + '\\\\(X(?=\\\\)|,[A-Z]|,' + justification.match(/([A-Za-z0-9_])+/g)[2] + ')').test(line)) {\n            if (!agent.commitmentStore.includes(line)) {\n              agent.commitmentStore += `${line}\\n`;\n            }\n\n            termsToAdd = termsToAdd.concat(line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g));\n          }\n        }\n\n        for (let i = 0; i < termsToAdd.length; i++) {\n          for (const line of agent.knowledgeBase.split('\\n')) {\n            if (new RegExp('^' + termsToAdd[i] + '\\\\(').test(line)) {\n              if (line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n                for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n                  if (!termsToAdd.includes(match)) {\n                    termsToAdd.push(match);\n                  }\n                }\n              }\n\n              if (!agent.commitmentStore.includes(line) && !agent.commitmentDependencies.includes(line)) {\n                agent.commitmentDependencies += `${line}\\n`;\n              }\n            }\n          }\n        }\n      }\n\n      this.text += `${agent.name}: Since ${format(justifications)}, that makes ${decamelise(restaurant)} an acceptable restaurant. `;\n\n      const uninstatitatedJustifications = [];\n\n      for (let i = 0; i < justifications.length; i++) {\n        uninstatitatedJustifications.push(justifications[i].replace(justifications[i].match(/([A-Za-z0-9])+/g)[1], '_'));\n      }\n\n      this.text += `We want to go to a restaurant with ${format(uninstatitatedJustifications)}.\\n`;\n    }\n\n    this.saveCommitmentStores();\n  }\n\n  // Concede(ag_i, l) | Concede(O, p(a))\n  concede(agent, term) {\n    const restaurant = term.match(/([A-Za-z0-9_])+/g)[1];\n    const property = term.match(/([A-Za-z0-9])+/g)[0];\n\n    /* GENERAL PRE-CONDITIONS */\n\n    // for some agent ag_j ≠ ag_i, l ∈ Com_ag_j\n    let doesAppear = false;\n\n    for (const someAgent of this.agents) {\n      if (someAgent !== agent && someAgent.commitmentStore.includes(term)) {\n        doesAppear = true;\n      }\n    }\n\n    if (doesAppear === false) {\n      throw new Error(`Pre-conditions of ${agent.name} conceding to \"${translate(term)}\" are not satisfied because ` +\n        `no other agent's commitment store contains the claim!`);\n    }\n\n    // not(¬l ∈ Com_ag_i)\n    if ((term.includes('\\\\+(') && (agent.commitmentStore.includes(`${term.substring(3, term.length - 2)}.`)))\n      || (!term.includes('\\\\+(') && agent.commitmentStore.includes(`\\\\+(${term.substring(0, term.length - 1)}).`))) {\n      throw new Error(`Pre-conditions of ${agent.name} conceding to \"${translate(term)}\" are not satisfied because ` +\n        `the agent's commitment store contains the negation of the claim!`);\n    }\n\n    /* ADD TERM TO BODY OF AGREED PREFERENCE RULE */\n    this.addTermToAgreedPreferenceRule(term);\n\n    /* GENERAL POST-CONDITIONS */\n\n    // Com_ag_i ⇒ Com_ag_i ∪ l\n    if (!agent.commitmentStore.includes(term)) {\n      agent.commitmentStore += `${term}\\n`;\n    }\n\n    /* TYPE-SPECIFIC POST-CONDITIONS */\n\n    // Com_O ⇒ Com_O ∪ p(X) ∈ B, where B is the set of terms in the body of the agreed preference rule\n    let termsToAdd = [];\n\n    for (const line of (agent.knowledgeBase + agent.commitmentStore).split('\\n')) {\n      if (new RegExp('^' + property + '\\\\(X(?=\\\\)|,[A-Z]|,' + term.match(/([A-Za-z0-9_])+/g)[2] + ')').test(line)) {\n        if (!agent.commitmentStore.includes(line)) {\n          agent.commitmentStore += `${line}\\n`;\n        }\n\n        termsToAdd = termsToAdd.concat(line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g));\n      }\n    }\n\n    for (let i = 0; i < termsToAdd.length; i++) {\n      for (const line of agent.knowledgeBase.split('\\n')) {\n        if (new RegExp('^' + termsToAdd[i] + '\\\\(').test(line)) {\n          if (line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n            for (const match of line.match(/(?<=,|-|, \\()([A-Za-z0-9])+(?=\\()/g)) {\n              if (!termsToAdd.includes(match)) {\n                termsToAdd.push(match);\n              }\n            }\n          }\n\n          if (!agent.commitmentStore.includes(line) && !agent.commitmentDependencies.includes(line)) {\n            agent.commitmentDependencies += `${line}\\n`;\n          }\n        }\n      }\n    }\n\n    /* UPDATE DIALOGUE TEXT AND UPDATE COMMITMENT STORE HISTORY */\n\n    if (property !== 'acceptableRestaurant') {\n      this.text += `${agent.name}: I accept that ${translate(term)}. We want to to a restaurant with ${translate(term.replace(restaurant, '_'))}.\\n`;\n    } else {\n      this.text += `${agent.name}: I accept that ${translate(term)}.\\n`;\n    }\n\n    this.saveCommitmentStores();\n  }\n}\n\nexport default DeliberationDialogue;\n","const generalKnowledgeBase = `distance(restaurantOne,5,0).\ndistance(restaurantTwo,10,10).\ndistance(restaurantThree,1,0).\nmealTime(restaurantOne,90).\nmealTime(restaurantTwo,60).\nmealTime(restaurantThree,15).\nquality(X,good):-recommended(X,Y),trustworthy(Y).\nquality(X,poor):-recommended(X,students).\nprice(restaurantOne,25).\nprice(restaurantTwo,15).\nprice(restaurantThree,7).\natmosphere(restaurantOne).\natmosphere(restaurantTwo).\nbeverage(restaurantOne).\nbeverage(restaurantTwo).\ncuisine(restaurantOne,cuisineOne).\ncuisine(restaurantTwo,cuisineTwo).\ncuisine(restaurantThree,cuisineThree).\ncuisine(X,mediterranean):-cuisine(X,cuisineOne).\nhealthy(X):-cuisine(X,mediterranean).\nhealthy(X):-vegetables(X).\nvegetables(X):-cuisine(X,cuisineTwo).\ntrustworthy(colleague).\ntrustworthy(husband).\nrecommended(restaurantOne,husband).\nrecommended(restaurantTwo,colleague).\nrecommended(restaurantThree,students).\ntotalTime(X,T):-distance(X,Td,_),mealTime(X,Tm), T is Td+Tm.\ntotalCost(X,C):-distance(X,_,Cd),price(X,Cm), C is Cd+Cm.\nacceptableRestaurant(X):-quality(X,good),healthy(X).\nacceptableRestaurant(X):-cuisine(X,cuisineTwo).\nacceptableRestaurant(X):-quality(X,good), (quality(Y,good),cheaper(Y,X)->false;true).\nacceptableRestaurant(X):-quality(X,good),atmosphere(X),beverage(X),distance(X,_,0), (quality(Y,good),atmosphere(Y),beverage(Y),quicker(Y,X)->false;true).\nacceptableRestaurant(X):-healthy(X),atmosphere(X),beverage(X),distance(X,_,0).\nacceptableRestaurant(X):-quality(X,good),healthy(X),atmosphere(X),beverage(X).\nacceptableRestaurant(X):-quality(X,good),atmosphere(X).\ncheaper(X,Y):-totalCost(X,Cx),totalCost(Y,Cy), Cx < Cy.\nquicker(X,Y):-totalTime(X,Tx),totalTime(Y,Ty), Tx < Ty.`\n\nexport default generalKnowledgeBase;\n","import Agent from './Agent';\nimport PersuasionDialogue from './PersuasionDialogue';\nimport DeliberationDialogue from './DeliberationDialogue';\n\nimport generalKnowledgeBase from './utils/generalKnowledgeBase';\nimport { camelise, decamelise } from './utils/helper';\n\nclass Simulation {\n  constructor(agentNames, restaurantNames, restaurantCuisines, beverage) {\n    this.agentNames = agentNames;\n    this.restaurantNames = restaurantNames;\n    this.restaurantCuisines = restaurantCuisines;\n    this.beverage = beverage;\n    this.generalKnowledgeBase = generalKnowledgeBase\n      .replace(/restaurantOne/g, camelise(restaurantNames[0]))\n      .replace(/restaurantTwo/g, camelise(restaurantNames[1]))\n      .replace(/restaurantThree/g, camelise(restaurantNames[2]))\n      .replace(/cuisineOne/g, camelise(restaurantCuisines[0]))\n      .replace(/cuisineTwo/g, camelise(restaurantCuisines[1]))\n      .replace(/cuisineThree/g, camelise(restaurantCuisines[2]))\n      .replace(/beverage/g, camelise(beverage));\n  }\n\n  simulatePersuasionDialogue() {\n    let knowledgeBaseOne = '', knowledgeBaseTwo = '', knowledgeBaseThree = '';\n\n    for (const [index, line] of this.generalKnowledgeBase.split('\\n').entries()) {\n      if ([15, 23, 24, 6, 18, 19, 29].includes(index)) {\n        knowledgeBaseOne += `${line}\\n`;\n      }\n\n      if ([8, 9, 16, 22, 25, 6, 7, 20, 21, 28, 36, 30].includes(index)) {\n        knowledgeBaseTwo += `${line}\\n`;\n      }\n\n      if ([1, 26, 6, 28, 36, 31].includes(index)) {\n        knowledgeBaseThree += `${line}\\n`;\n      }\n    }\n\n    const persuasionDialogue = new PersuasionDialogue([\n      new Agent(this.agentNames[0], camelise(this.restaurantNames[0]), knowledgeBaseOne),\n      new Agent(this.agentNames[1], camelise(this.restaurantNames[1]), knowledgeBaseTwo),\n      new Agent(this.agentNames[2], camelise(this.restaurantNames[2]), knowledgeBaseThree)\n    ], 1);\n\n    persuasionDialogue.claim(persuasionDialogue.agents[1], `acceptableRestaurant(${camelise(this.restaurantNames[1])}).`);\n    persuasionDialogue.claim(persuasionDialogue.agents[1], `cuisine(${camelise(this.restaurantNames[1])},${camelise(this.restaurantCuisines[1])}).`);\n    persuasionDialogue.claim(persuasionDialogue.agents[2], `distance(${camelise(this.restaurantNames[1])},10,_).`);\n    persuasionDialogue.claim(persuasionDialogue.agents[1], `quality(${camelise(this.restaurantNames[1])},good).`);\n    persuasionDialogue.claim(persuasionDialogue.agents[2], `recommended(${camelise(this.restaurantNames[2])},students).`);\n    persuasionDialogue.question(persuasionDialogue.agents[2], `quality(${camelise(this.restaurantNames[2])},good).`);\n    persuasionDialogue.concede(persuasionDialogue.agents[1], `recommended(${camelise(this.restaurantNames[2])},students).`);\n    persuasionDialogue.claim(persuasionDialogue.agents[1], `quality(${camelise(this.restaurantNames[2])},poor).`);\n    persuasionDialogue.claim(persuasionDialogue.agents[0], `quality(${camelise(this.restaurantNames[0])},good).`);\n    persuasionDialogue.claim(persuasionDialogue.agents[0], `healthy(${camelise(this.restaurantNames[0])}).`);\n    persuasionDialogue.claim(persuasionDialogue.agents[1], `healthy(${camelise(this.restaurantNames[1])}).`);\n    persuasionDialogue.claim(persuasionDialogue.agents[1], `price(${camelise(this.restaurantNames[1])},15).`);\n    persuasionDialogue.claim(persuasionDialogue.agents[1], `price(${camelise(this.restaurantNames[0])},25).`);\n    persuasionDialogue.claim(persuasionDialogue.agents[2], `distance(${camelise(this.restaurantNames[1])},_,10).`);\n    persuasionDialogue.concede(persuasionDialogue.agents[1], `distance(${camelise(this.restaurantNames[1])},_,10).`);\n    persuasionDialogue.claim(persuasionDialogue.agents[1], `\\\\+(cheaper(${camelise(this.restaurantNames[0])},${camelise(this.restaurantNames[1])})).`);\n    persuasionDialogue.concede(persuasionDialogue.agents[2], `acceptableRestaurant(${camelise(this.restaurantNames[1])}).`);\n    persuasionDialogue.concede(persuasionDialogue.agents[0], `acceptableRestaurant(${camelise(this.restaurantNames[1])}).`);\n\n    persuasionDialogue.text = persuasionDialogue.text\n      .replace(new RegExp(decamelise(camelise(this.restaurantNames[0])), 'gi'), this.restaurantNames[0])\n      .replace(new RegExp(decamelise(camelise(this.restaurantNames[1])), 'gi'), this.restaurantNames[1])\n      .replace(new RegExp(decamelise(camelise(this.restaurantNames[2])), 'gi'), this.restaurantNames[2])\n      .replace(new RegExp(this.restaurantCuisines[0], 'gi'), this.restaurantCuisines[0])\n      .replace(new RegExp(this.restaurantCuisines[1], 'gi'), this.restaurantCuisines[1])\n      .replace(new RegExp(this.restaurantCuisines[2], 'gi'), this.restaurantCuisines[2]);\n\n    if (persuasionDialogue.isOver()) {\n      return persuasionDialogue;\n    } else {\n      throw new Error('Persuasion dialogue has not reached an end state!');\n    }\n  }\n\n  simulateDeliberationDialogue() {\n    let knowledgeBaseOne = '', knowledgeBaseTwo = '', knowledgeBaseThree = '';\n\n    for (const [index, line] of this.generalKnowledgeBase.split('\\n').entries()) {\n      if ([0, 11, 13, 15, 23, 24, 6, 18, 19, 29, 33].includes(index)) {\n        knowledgeBaseOne += `${line}\\n`;\n      }\n\n      if ([12, 13, 14, 15, 16, 22, 25, 6, 18, 19, 20, 21, 30, 34].includes(index)) {\n        knowledgeBaseTwo += `${line}\\n`;\n      }\n\n      if ([1, 2, 8, 10, 23, 26, 6, 28, 36, 31, 35].includes(index)) {\n        knowledgeBaseThree += `${line}\\n`;\n      }\n    }\n\n    const deliberationDialogue = new DeliberationDialogue([\n      new Agent(this.agentNames[0], camelise(this.restaurantNames[0]), knowledgeBaseOne),\n      new Agent(this.agentNames[1], camelise(this.restaurantNames[1]), knowledgeBaseTwo),\n      new Agent(this.agentNames[2], camelise(this.restaurantNames[2]), knowledgeBaseThree)\n    ]);\n\n    deliberationDialogue.claim(deliberationDialogue.agents[1], `cuisine(${camelise(this.restaurantNames[1])},${camelise(this.restaurantCuisines[1])}).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[2], `distance(${camelise(this.restaurantNames[1])},10,_).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[2], `distance(${camelise(this.restaurantNames[2])},1,0).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[0], `distance(${camelise(this.restaurantNames[0])},_,0).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[0], `quality(${camelise(this.restaurantNames[0])},good).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[2], `price(${camelise(this.restaurantNames[0])},25).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[2], `price(${camelise(this.restaurantNames[2])},7).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[1], `\\\\+(${camelise(this.beverage)}(${camelise(this.restaurantNames[2])})).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[1], `${camelise(this.beverage)}(${camelise(this.restaurantNames[1])}).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[0], `\\\\+(atmosphere(${camelise(this.restaurantNames[2])})).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[0], `atmosphere(${camelise(this.restaurantNames[0])}).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[1], `atmosphere(${camelise(this.restaurantNames[1])}).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[1], `quality(${camelise(this.restaurantNames[1])},good).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[2], `distance(${camelise(this.restaurantNames[1])},_,10).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[1], `healthy(${camelise(this.restaurantNames[1])}).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[0], `healthy(${camelise(this.restaurantNames[0])}).`);\n    deliberationDialogue.since(deliberationDialogue.agents[1], null, `acceptableRestaurant(${camelise(this.restaurantNames[0])}).`, [`quality(${camelise(this.restaurantNames[0])},good).`, `atmosphere(${camelise(this.restaurantNames[0])}).`]);\n    deliberationDialogue.since(deliberationDialogue.agents[2], null, `acceptableRestaurant(${camelise(this.restaurantNames[1])}).`, [`quality(${camelise(this.restaurantNames[1])},good).`, `atmosphere(${camelise(this.restaurantNames[1])}).`]);\n    deliberationDialogue.concede(deliberationDialogue.agents[0], `${camelise(this.beverage)}(${camelise(this.restaurantNames[1])}).`);\n    deliberationDialogue.claim(deliberationDialogue.agents[0], `${camelise(this.beverage)}(${camelise(this.restaurantNames[0])}).`);\n    deliberationDialogue.since(deliberationDialogue.agents[1], null, `acceptableRestaurant(${camelise(this.restaurantNames[0])}).`, [`distance(${camelise(this.restaurantNames[0])},_,0).`]);\n    deliberationDialogue.concede(deliberationDialogue.agents[2], `acceptableRestaurant(${camelise(this.restaurantNames[0])}).`);\n    deliberationDialogue.concede(deliberationDialogue.agents[1], `acceptableRestaurant(${camelise(this.restaurantNames[0])}).`);\n\n    deliberationDialogue.text = deliberationDialogue.text\n      .replace(new RegExp(decamelise(camelise(this.restaurantNames[0])), 'gi'), this.restaurantNames[0])\n      .replace(new RegExp(decamelise(camelise(this.restaurantNames[1])), 'gi'), this.restaurantNames[1])\n      .replace(new RegExp(decamelise(camelise(this.restaurantNames[2])), 'gi'), this.restaurantNames[2])\n      .replace(new RegExp(this.restaurantCuisines[0], 'gi'), this.restaurantCuisines[0])\n      .replace(new RegExp(this.restaurantCuisines[1], 'gi'), this.restaurantCuisines[1])\n      .replace(new RegExp(this.restaurantCuisines[2], 'gi'), this.restaurantCuisines[2]);\n\n    if (deliberationDialogue.isOver()) {\n      return deliberationDialogue;\n    } else {\n      throw new Error('Deliberation dialogue has not reached an end state!');\n    }\n  }\n\n  printAll(dialogue) {\n    console.log(dialogue.text);\n    console.log(dialogue.commitmentStoreHistory);\n\n    for (const agent of dialogue.agents) {\n      console.log(agent.name);\n      console.log(agent.knowledgeBase);\n      console.log(agent.commitmentDependencies);\n    }\n\n    console.log('Agreed preference rule: ' + dialogue.agreedPreferenceRule);\n  }\n}\n\nexport default Simulation;\n","import React, { Component } from \"react\";\nimport { Button, FormGroup, ProgressIndicator, ProgressStep, RadioButton, RadioButtonGroup, TextInput } from 'carbon-components-react';\n\nimport DialogueAccordion from './DialogueAccordion';\nimport Simulation from './protocols/Simulation';\n\nimport './Generate.css';\n\nclass Generate extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      progressIndex: 0,\n      firstAgentsName: '',\n      secondAgentsName: '',\n      thirdAgentsName: '',\n      isFirstAgentsNameInvalid: false,\n      isSecondAgentsNameInvalid: false,\n      isThirdAgentsNameInvalid: false,\n      firstRestaurantsName: '',\n      secondRestaurantsName: '',\n      thirdRestaurantsName: '',\n      isFirstRestaurantsNameInvalid: false,\n      isSecondRestaurantsNameInvalid: false,\n      isThirdRestaurantsNameInvalid: false,\n      firstRestaurantsCuisine: 'Italian',\n      secondRestaurantsCuisine: 'Thai',\n      thirdRestaurantsCuisine: 'American',\n      beverage: 'Wine',\n      simulation: null\n    };\n\n    this.decrementProgressIndex = this.decrementProgressIndex.bind(this);\n    this.incrementProgressIndex = this.incrementProgressIndex.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.checkInputValues = this.checkInputValues.bind(this);\n    this.resetState = this.resetState.bind(this);\n  }\n\n  decrementProgressIndex() {\n    this.setState({\n      progressIndex: this.state.progressIndex - 1\n    });\n  }\n\n  incrementProgressIndex() {\n    if (this.checkInputValues()) {\n      if (this.state.progressIndex + 1 === 4) {\n        this.setState({\n          simulation: new Simulation(\n            [this.state.firstAgentsName, this.state.secondAgentsName, this.state.thirdAgentsName],\n            [this.state.firstRestaurantsName, this.state.secondRestaurantsName, this.state.thirdRestaurantsName],\n            [this.state.firstRestaurantsCuisine, this.state.secondRestaurantsCuisine, this.state.thirdRestaurantsCuisine],\n            this.state.beverage)\n        });\n      }\n\n      this.setState({\n        progressIndex: this.state.progressIndex + 1\n      });\n    }\n  }\n\n  onChange(event) {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  checkInputValues() {\n    switch (this.state.progressIndex) {\n      case 0:\n        this.state.firstAgentsName === '' ? this.setState({ isFirstAgentsNameInvalid: true }) : this.setState({ isFirstAgentsNameInvalid: false });\n        this.state.secondAgentsName === '' ? this.setState({ isSecondAgentsNameInvalid: true }) : this.setState({ isSecondAgentsNameInvalid: false });\n        this.state.thirdAgentsName === '' ? this.setState({ isThirdAgentsNameInvalid: true }) : this.setState({ isThirdAgentsNameInvalid: false });\n\n        if (this.state.firstAgentsName === '' || this.state.secondAgentsName === '' || this.state.thirdAgentsName === '') {\n          return false;\n        } else {\n          return true;\n        }\n      case 1:\n        this.state.firstRestaurantsName === '' ? this.setState({ isFirstRestaurantsNameInvalid: true }) : this.setState({ isFirstRestaurantsNameInvalid: false });\n        this.state.secondRestaurantsName === '' ? this.setState({ isSecondRestaurantsNameInvalid: true }) : this.setState({ isSecondRestaurantsNameInvalid: false });\n        this.state.thirdRestaurantsName === '' ? this.setState({ isThirdRestaurantsNameInvalid: true }) : this.setState({ isThirdRestaurantsNameInvalid: false });\n\n        if (this.state.firstRestaurantsName === '' || this.state.secondRestaurantsName === '' || this.state.thirdRestaurantsName === '') {\n          return false;\n        } else {\n          return true;\n        }\n      default:\n        return true;\n    }\n  }\n\n  resetState() {\n    this.setState({\n      progressIndex: 0,\n      firstAgentsName: '',\n      secondAgentsName: '',\n      thirdAgentsName: '',\n      isFirstAgentsNameInvalid: false,\n      isSecondAgentsNameInvalid: false,\n      isThirdAgentsNameInvalid: false,\n      firstRestaurantsName: '',\n      secondRestaurantsName: '',\n      thirdRestaurantsName: '',\n      isFirstRestaurantsNameInvalid: false,\n      isSecondRestaurantsNameInvalid: false,\n      isThirdRestaurantsNameInvalid: false,\n      firstRestaurantsCuisine: 'Italian',\n      secondRestaurantsCuisine: 'Thai',\n      thirdRestaurantsCuisine: 'American',\n      beverage: 'Wine',\n      simulation: null\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.progressIndex !== 4 && (\n          <div>\n            <div hidden={this.state.progressIndex !== 0}>\n              <div className=\"bx--row\">\n                <div className=\"bx--col-xs-12\">\n                  <p className=\"generate-paragraph\">\n                    Choose names for the agents who will be participating in the dialogue:\n                </p>\n                </div>\n              </div>\n              <div className=\"bx--row\">\n                <div className=\"text-input-wrapper\">\n                  <div className=\"bx--col-xs-12 bx--col-md-4\">\n                    <TextInput\n                      id=\"firstAgentsName\"\n                      className=\"text-input\"\n                      labelText=\"First agent's name\"\n                      invalid={this.state.isFirstAgentsNameInvalid}\n                      invalidText=\"Please provide a valid name\"\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <div className=\"bx--col-xs-12 bx--col-md-4\">\n                    <TextInput\n                      id=\"secondAgentsName\"\n                      className=\"text-input\"\n                      labelText=\"Second agent's name\"\n                      invalid={this.state.isSecondAgentsNameInvalid}\n                      invalidText=\"Please provide a valid name\"\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <div className=\"bx--col-xs-12 bx--col-md-4\">\n                    <TextInput\n                      id=\"thirdAgentsName\"\n                      className=\"text-input\"\n                      labelText=\"Third agent's name\"\n                      invalid={this.state.isThirdAgentsNameInvalid}\n                      invalidText=\"Please provide a valid name\"\n                      onChange={this.onChange}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div hidden={this.state.progressIndex !== 1}>\n              <div className=\"bx--row\">\n                <div className=\"bx--col-xs-12\">\n                  <p className=\"generate-paragraph\">\n                    Choose names for the restaurants which the dialogue will revolve around:\n                </p>\n                </div>\n              </div>\n              <div className=\"bx--row\">\n                <div className=\"text-input-wrapper\">\n                  <div className=\"bx--col-xs-12 bx--col-md-4\">\n                    <TextInput\n                      id=\"firstRestaurantsName\"\n                      className=\"text-input\"\n                      labelText=\"First restaurant's name\"\n                      invalid={this.state.isFirstRestaurantsNameInvalid}\n                      invalidText=\"Please provide a valid name\"\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <div className=\"bx--col-xs-12 bx--col-md-4\">\n                    <TextInput\n                      id=\"secondRestaurantsName\"\n                      className=\"text-input\"\n                      labelText=\"Second restaurant's name\"\n                      invalid={this.state.isSecondRestaurantsNameInvalid}\n                      invalidText=\"Please provide a valid name\"\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <div className=\"bx--col-xs-12 bx--col-md-4\">\n                    <TextInput\n                      id=\"thirdRestaurantsName\"\n                      className=\"text-input\"\n                      labelText=\"Third restaurant's name\"\n                      invalid={this.state.isThirdRestaurantsNameInvalid}\n                      invalidText=\"Please provide a valid name\"\n                      onChange={this.onChange}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div hidden={this.state.progressIndex !== 2}>\n              <div className=\"bx--row\">\n                <div className=\"bx--col-xs-12\">\n                  <p className=\"generate-paragraph\">\n                    Choose the cuisines for each restaurant:\n                </p>\n                </div>\n              </div>\n              <div className=\"bx--row\">\n                <div className=\"radio-button-groups-wrapper\">\n                  <div className=\"bx--col-xs-12 bx--col-md-4\">\n                    <FormGroup legendText=\"First restaurant's cuisine\">\n                      <RadioButtonGroup\n                        name=\"first-restaurants-cuisine-radio-button-group\"\n                        valueSelected=\"Italian\"\n                        onChange={(event) => this.setState({ firstRestaurantsCuisine: event })}\n                      >\n                        <RadioButton value=\"Italian\" labelText=\"Italian\" />\n                        <RadioButton value=\"Greek\" labelText=\"Greek\" />\n                        <RadioButton value=\"Spanish\" labelText=\"Spanish\" />\n                      </RadioButtonGroup>\n                    </FormGroup>\n                  </div>\n                  <div className=\"bx--col-xs-12 bx--col-md-4\">\n                    <FormGroup legendText=\"Second restaurant's cuisine\">\n                      <RadioButtonGroup\n                        name=\"second-restaurants-cuisine-radio-button-group\"\n                        valueSelected=\"Thai\"\n                        onChange={(event) => this.setState({ secondRestaurantsCuisine: event })}\n                      >\n                        <RadioButton value=\"Thai\" labelText=\"Thai\" />\n                        <RadioButton value=\"Indian\" labelText=\"Indian\" />\n                        <RadioButton value=\"Japanese\" labelText=\"Japanese\" />\n                      </RadioButtonGroup>\n                    </FormGroup>\n                  </div>\n                  <div className=\"bx--col-xs-12 bx--col-md-4\">\n                    <FormGroup legendText=\"Third restaurant's cuisine\">\n                      <RadioButtonGroup\n                        name=\"third-restaurants-cuisine-radio-button-group\"\n                        valueSelected=\"American\"\n                        onChange={(event) => this.setState({ thirdRestaurantsCuisine: event })}\n                      >\n                        <RadioButton value=\"American\" labelText=\"American\" />\n                        <RadioButton value=\"Bulgarian\" labelText=\"Bulgarian\" />\n                        <RadioButton value=\"Turkish\" labelText=\"Turkish\" />\n                      </RadioButtonGroup>\n                    </FormGroup>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div hidden={this.state.progressIndex !== 3}>\n              <div className=\"bx--row\">\n                <div className=\"bx--col-xs-12\">\n                  <p className=\"generate-paragraph\">\n                    Choose the beverage which will be preferred by the agents:\n                </p>\n                </div>\n              </div>\n              <div className=\"bx--row\">\n                <div className=\"radio-button-groups-wrapper\">\n                  <div className=\"bx--col-xs-12\">\n                    <FormGroup legendText=\"Beverage\">\n                      <RadioButtonGroup\n                        name=\"beverage-radio-button-group\"\n                        valueSelected=\"Wine\"\n                        onChange={(event) => this.setState({ beverage: event })}\n                      >\n                        <RadioButton value=\"Wine\" labelText=\"Wine\" />\n                        <RadioButton value=\"Champagne\" labelText=\"Champagne\" />\n                        <RadioButton value=\"Cocktails\" labelText=\"Cocktails\" />\n                      </RadioButtonGroup>\n                    </FormGroup>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div>\n              <div className=\"bx--row\">\n                <div className=\"bx--col-xs-12\">\n                  <div className=\"progress-buttons-wrapper\">\n                    <Button className=\"progress-button\" kind=\"secondary\" onClick={this.decrementProgressIndex} disabled={this.state.progressIndex === 0}>\n                      Previous\n                  </Button>\n                    <Button className=\"progress-button\" onClick={this.incrementProgressIndex}>\n                      {this.state.progressIndex !== 3 ? \"Next\" : \"Generate\"}\n                    </Button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"bw--row\">\n                <div className=\"bx--col-xs-12\">\n                  <div className=\"progress-indicator\">\n                    <ProgressIndicator currentIndex={this.state.progressIndex}>\n                      <ProgressStep label=\"Agents' names\" description=\"Choose names for the agents\" />\n                      <ProgressStep label=\"Restaurants' names\" description=\"Choose names for the restaurants\" />\n                      <ProgressStep label=\"Restaurants' cuisines\" description=\"Pick the restaurants' cuisines\" />\n                      <ProgressStep label=\"Beverage\" description=\"Pick the preferred beverage\" />\n                    </ProgressIndicator>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        {this.state.progressIndex === 4 && this.state.simulation && (\n          <div>\n            <div className=\"bx--row\">\n              <div className=\"bx--col-xs-12 bx--col-md-6\">\n                <DialogueAccordion dialogue={this.state.simulation.simulatePersuasionDialogue()} />\n              </div>\n              <div className=\"bx--col-xs-12 bx--col-md-6\">\n                <DialogueAccordion dialogue={this.state.simulation.simulateDeliberationDialogue()} />\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--col-xs-12\">\n                <div className=\"reset-button\">\n                  <Button kind=\"danger\" onClick={this.resetState}>\n                    Reset Dialogues\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Generate;\n","import React, { Component } from 'react';\nimport { ContentSwitcher, Footer, Switch } from 'carbon-components-react'\n\nimport Generate from './Generate';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      switchIndex: 0\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(event) {\n    this.setState({ switchIndex: event.index });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-xs-12\">\n              <h1 className=\"app-title\">Diners' Discourse</h1>\n            </div>\n          </div>\n          <div className=\"bx--row\">\n            <div className=\"bx--col-xs-12\">\n              <ContentSwitcher className=\"content-switcher\" onChange={this.onChange}>\n                <Switch name=\"home\" text=\"Home\" />\n                <Switch name=\"background\" text=\"Background\" />\n                <Switch name=\"generate\" text=\"Generate\" />\n              </ContentSwitcher>\n            </div>\n          </div>\n          <div hidden={this.state.switchIndex !== 0}>\n            <div className=\"bx--row\">\n              <div className=\"bx--col-xs-12\">\n                <p className=\"home-paragraph\">\n                  Diners' Discourse lets you generate persuasion and deliberation dialogues set in a\n                  familiar restaurant selection scenario and showcases their differences side-by-side.\n                </p>\n                <p className=\"home-paragraph\">\n                  To learn more about the creation of this web application, go to \"Background\".\n                </p>\n                <p className=\"home-paragraph\">\n                  To start generating dialogues, go to \"Generate\".\n                </p>\n              </div>\n            </div>\n          </div>\n          <div hidden={this.state.switchIndex !== 1}>\n            <div className=\"bx--row\">\n              <div className=\"bx--col-xs-12\">\n                <p className=\"home-paragraph\">\n                  TBA\n                </p>\n              </div>\n            </div>\n          </div>\n          <div hidden={this.state.switchIndex !== 2}>\n            <Generate />\n          </div>\n        </div>\n        <Footer\n          labelOne=\"Copyright &copy; 2019 Yanko Kirchev\"\n          linkTextOne=\"Contact the author\"\n          linkHrefOne=\"mailto:sgykirch@liverpool.ac.uk\"\n          labelTwo=\"Department of Computer Science, University of Liverpool\"\n          linkTextTwo=\"Contact the department\"\n          linkHrefTwo=\"mailto:cstudy@liverpool.ac.uk\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}